{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport agent from '../../app/api/agent'; //rxslice    snippit\n\nconst initialState = {\n  basket: null,\n  status: 'idle'\n};\nexport const addBasketItemAsync = createAsyncThunk('basket/addBasketItemAsync', async _ref => {\n  let {\n    productId,\n    quantity = 1\n  } = _ref;\n\n  try {\n    return agent.Basket.addItem(productId, quantity);\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const removeBasketItemAsync = createAsyncThunk('basket/removeBasketItemAsync', async _ref2 => {\n  let {\n    productId,\n    quantity\n  } = _ref2;\n\n  try {\n    return agent.Basket.deleteItem(productId, quantity);\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst basketSlice = createSlice({\n  name: 'basket',\n  initialState,\n  reducers: {\n    setBasket: (state, action) => {\n      state.basket = action.payload;\n    },\n    removeItem: (state, action) => {\n      var _state$basket, _state$basket2;\n\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const itemIndex = (_state$basket = state.basket) === null || _state$basket === void 0 ? void 0 : _state$basket.items.findIndex(i => i.productId === productId);\n      if (itemIndex === -1 || itemIndex === undefined) return;\n      state.basket.items[itemIndex].quantity -= quantity;\n      if (((_state$basket2 = state.basket) === null || _state$basket2 === void 0 ? void 0 : _state$basket2.items[itemIndex].quantity) === 0) state.basket.items.splice(itemIndex, 1);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addBasketItemAsync.pending, (state, action) => {\n      state.status = 'pendingAddItem' + action.meta.arg.productId; // console.log(action)\n    });\n    builder.addCase(addBasketItemAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.basket = action.payload;\n    });\n    builder.addCase(addBasketItemAsync.rejected, state => {\n      state.status = 'idle';\n    });\n  }\n});\nexport const {\n  setBasket,\n  removeItem\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/basket/basketSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","basket","status","addBasketItemAsync","productId","quantity","Basket","addItem","error","console","log","removeBasketItemAsync","deleteItem","basketSlice","name","reducers","setBasket","state","action","payload","removeItem","itemIndex","items","findIndex","i","undefined","splice","extraReducers","builder","addCase","pending","meta","arg","fulfilled","rejected","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { Basket } from '../../app/models/basket';\r\nimport agent from '../../app/api/agent';\r\n//rxslice    snippit\r\n\r\n\r\n\r\n\r\nexport interface BasketState{\r\n\r\n    basket:Basket|null\r\n    status:string\r\n}\r\nconst initialState:BasketState = {\r\n    basket:null,\r\n    status:'idle'\r\n\r\n}\r\n\r\nexport const addBasketItemAsync=createAsyncThunk<Basket,{productId:number,quantity?:number}>(\r\n\r\n  'basket/addBasketItemAsync',\r\n  async({productId,quantity=1})=>{\r\n    try {\r\n      return agent.Basket.addItem(productId,quantity);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync=createAsyncThunk<void,{productId:number,quantity:number}>(\r\n\r\n  'basket/removeBasketItemAsync',\r\n  async({productId,quantity})=>{\r\n    try {\r\n      return agent.Basket.deleteItem(productId,quantity);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n)\r\n\r\n\r\nconst basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket:(state,action)=>{\r\n        state.basket=action.payload\r\n    },\r\n    removeItem:(state,action)=>{\r\n        const {productId,quantity}=action.payload;\r\n        const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n        if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n        state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n        if(state.basket?.items[itemIndex].quantity===0)\r\n        state.basket.items.splice(itemIndex,1);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  },\r\n  extraReducers: (builder=> {\r\n    builder.addCase(addBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingAddItem'+action.meta.arg.productId;\r\n      // console.log(action)\r\n    });\r\n    builder.addCase(addBasketItemAsync.fulfilled,(state,action)=>{\r\n      state.status='idle';\r\n      state.basket=action.payload;\r\n    });\r\n    builder.addCase(addBasketItemAsync.rejected,(state)=>{\r\n      state.status='idle'\r\n    });\r\n\r\n  })\r\n\r\n}); \r\n\r\nexport const {setBasket,removeItem} = basketSlice.actions\r\n\r\nexport default basketSlice.reducer"]},"metadata":{},"sourceType":"module"}