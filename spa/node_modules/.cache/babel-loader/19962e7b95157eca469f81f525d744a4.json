{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ali\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\catalog\\\\Catalog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport Loader from \"../../app/layout/Loader\";\nimport ProductList from \"./ProductList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Catalog() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    agent.Catalog.list().then(products => setProducts(products)).catch(error => console.log(error)).finally(() => setLoading(false));\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {\n    message: \"Loading Products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Catalog, \"KWid68LpBxbFhyja5dauhUIHvyY=\");\n\n_c = Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["D:/Ali/react/SouqApp/spa/src/features/catalog/Catalog.tsx"],"names":["useState","useEffect","agent","Loader","ProductList","Catalog","products","setProducts","loading","setLoading","list","then","catch","error","console","log","finally"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAY,EAAZ,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACG,OAAN,CAAcK,IAAd,GACKC,IADL,CACUL,QAAQ,IAAIC,WAAW,CAACD,QAAD,CADjC,EAEKM,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFpB,EAGKG,OAHL,CAGa,MAAMP,UAAU,CAAC,KAAD,CAH7B;AAIH,GALQ,EAMH,EANG,CAAT;AAOA,MAAID,OAAJ,EAAa,oBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACI;AAAA,2BACI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH;;GAhBuBD,O;;KAAAA,O","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport agent from \"../../app/api/agent\"\r\nimport Loader from \"../../app/layout/Loader\"\r\nimport { Product } from \"../../app/models/product\"\r\nimport ProductList from \"./ProductList\"\r\n\r\n\r\nexport default function Catalog() {\r\n    const [products, setProducts] = useState<Product[]>([])\r\n    const [loading, setLoading] = useState(true)\r\n    useEffect(() => {\r\n        agent.Catalog.list()\r\n            .then(products => setProducts(products))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false))\r\n    }\r\n        , [])\r\n    if (loading) return <Loader message='Loading Products...' />\r\n    return (\r\n        <>\r\n            <ProductList products={products}></ProductList>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}