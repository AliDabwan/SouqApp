{"ast":null,"code":"import _toConsumableArray from \"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport * as ReactDOM from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var parseToNumber = function parseToNumber(val) {\n  return Number(val.replace('px', ''));\n};\nvar lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\n\nexport var getStyle = function getStyle(_ref) {\n  var ownerState = _ref.ownerState,\n      theme = _ref.theme;\n  var styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  var stylesSSR = {}; // Only applicable for Server-Side Rendering\n\n  if (ownerState.isSSR) {\n    var orderStyleSSR = {};\n    var defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n\n    for (var i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[\"&:nth-of-type(\".concat(ownerState.defaultColumns, \"n+\").concat(i % ownerState.defaultColumns, \")\")] = {\n        order: i\n      };\n    }\n\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: \"calc(\".concat((100 / ownerState.defaultColumns).toFixed(2), \"% - \").concat(defaultSpacing, \"px)\")\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n\n  var spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  var transformer = createUnarySpacing(theme);\n\n  var spacingStyleFromPropValue = function spacingStyleFromPropValue(propValue) {\n    var spacing; // in case of string/number value\n\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      var themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n\n    return _extends({\n      margin: \"calc(0px - (\".concat(spacing, \" / 2))\"),\n      '& > *': {\n        margin: \"calc(\".concat(spacing, \" / 2)\")\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : \"calc(\".concat(ownerState.maxColumnHeight, \"px + \").concat(spacing, \")\")\n    });\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme: theme\n  }, spacingValues, spacingStyleFromPropValue));\n  var columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n\n  var columnStyleFromPropValue = function columnStyleFromPropValue(propValue) {\n    var columnValue = Number(propValue);\n    var width = \"\".concat((100 / columnValue).toFixed(2), \"%\");\n    var spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: \"calc(\".concat(width, \" - \").concat(spacing, \")\")\n      }\n    };\n  };\n\n  styles = deepmerge(styles, handleBreakpoints({\n    theme: theme\n  }, columnValues, columnStyleFromPropValue)); // configure width for responsive spacing values\n\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme: theme\n    }, spacingValues, function (propValue, breakpoint) {\n      if (breakpoint) {\n        var themeSpacingValue = Number(propValue);\n        var lastBreakpoint = Object.keys(columnValues).pop();\n        var spacing = getValue(transformer, themeSpacingValue);\n        var column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        var width = \"\".concat((100 / column).toFixed(2), \"%\");\n        return {\n          '& > *': {\n            width: \"calc(\".concat(width, \" - \").concat(spacing, \")\")\n          }\n        };\n      }\n\n      return null;\n    }));\n  }\n\n  return styles;\n};\nvar MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [styles.root];\n  }\n})(getStyle);\nvar Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$columns = props.columns,\n      columns = _props$columns === void 0 ? 4 : _props$columns,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 1 : _props$spacing,\n      defaultColumns = props.defaultColumns,\n      defaultHeight = props.defaultHeight,\n      defaultSpacing = props.defaultSpacing,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var masonryRef = React.useRef();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      maxColumnHeight = _React$useState2[0],\n      setMaxColumnHeight = _React$useState2[1];\n\n  var isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n\n  var _React$useState3 = React.useState(isSSR ? defaultColumns - 1 : 0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      numberOfLineBreaks = _React$useState4[0],\n      setNumberOfLineBreaks = _React$useState4[1];\n\n  var ownerState = _extends({}, props, {\n    spacing: spacing,\n    columns: columns,\n    maxColumnHeight: maxColumnHeight,\n    defaultColumns: defaultColumns,\n    defaultHeight: defaultHeight,\n    defaultSpacing: defaultSpacing,\n    isSSR: isSSR\n  });\n\n  var classes = useUtilityClasses(ownerState);\n\n  var handleResize = function handleResize(masonryChildren) {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n\n    var masonry = masonryRef.current;\n    var masonryFirstChild = masonryRef.current.firstChild;\n    var parentWidth = masonry.clientWidth;\n    var firstChildWidth = masonryFirstChild.clientWidth;\n\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n\n    var firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    var firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    var firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    var currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    var columnHeights = new Array(currentNumberOfColumns).fill(0);\n    var skip = false;\n    masonry.childNodes.forEach(function (child) {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n\n      var childComputedStyle = window.getComputedStyle(child);\n      var childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      var childMarginBottom = parseToNumber(childComputedStyle.marginBottom); // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n\n      var childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      } // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n\n\n      for (var i = 0; i < child.childNodes.length; i += 1) {\n        var nestedChild = child.childNodes[i];\n\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        var currentMinColumnIndex = columnHeights.indexOf(Math.min.apply(Math, _toConsumableArray(columnHeights)));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        var order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      ReactDOM.flushSync(function () {\n        setMaxColumnHeight(Math.max.apply(Math, _toConsumableArray(columnHeights)));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n\n  var observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(function () {\n    var resizeObserver = observer.current; // IE and old browsers are not supported\n\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(function (childNode) {\n        resizeObserver.observe(childNode);\n      });\n    }\n\n    return function () {\n      return resizeObserver ? resizeObserver.disconnect() : {};\n    };\n  }, [columns, spacing, children]);\n  var handleRef = useForkRef(ref, masonryRef); //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n\n  var lineBreaks = new Array(numberOfLineBreaks).fill('').map(function (_, index) {\n    return /*#__PURE__*/_jsx(\"span\", {\n      \"data-class\": \"line-break\",\n      style: _extends({}, lineBreakStyle, {\n        order: index + 1\n      })\n    }, index);\n  });\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/SPA/node_modules/@mui/lab/Masonry/Masonry.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","unstable_composeClasses","composeClasses","ReactDOM","styled","useThemeProps","createUnarySpacing","getValue","handleBreakpoints","unstable_resolveBreakpointValues","resolveBreakpointValues","deepmerge","unstable_useForkRef","useForkRef","clsx","PropTypes","React","getMasonryUtilityClass","jsx","_jsx","jsxs","_jsxs","parseToNumber","val","Number","replace","lineBreakStyle","flexBasis","width","margin","padding","useUtilityClasses","ownerState","classes","slots","root","getStyle","theme","styles","display","flexFlow","alignContent","boxSizing","stylesSSR","isSSR","orderStyleSSR","defaultSpacing","spacing","i","defaultColumns","order","height","defaultHeight","toFixed","spacingValues","values","breakpoints","transformer","spacingStyleFromPropValue","propValue","isNaN","themeSpacingValue","maxColumnHeight","Math","ceil","columnValues","columns","columnStyleFromPropValue","columnValue","breakpoint","lastBreakpoint","Object","keys","pop","column","MasonryRoot","name","slot","overridesResolver","props","Masonry","forwardRef","inProps","ref","children","className","component","other","masonryRef","useRef","useState","setMaxColumnHeight","undefined","numberOfLineBreaks","setNumberOfLineBreaks","handleResize","masonryChildren","current","length","masonry","masonryFirstChild","firstChild","parentWidth","clientWidth","firstChildWidth","firstChildComputedStyle","window","getComputedStyle","firstChildMarginLeft","marginLeft","firstChildMarginRight","marginRight","currentNumberOfColumns","round","columnHeights","Array","fill","skip","childNodes","forEach","child","nodeType","Node","ELEMENT_NODE","dataset","class","childComputedStyle","childMarginTop","marginTop","childMarginBottom","marginBottom","childHeight","nestedChild","tagName","clientHeight","currentMinColumnIndex","indexOf","min","style","flushSync","max","observer","ResizeObserver","useEffect","resizeObserver","childNode","observe","disconnect","handleRef","lineBreaks","map","_","index","as","process","env","NODE_ENV","propTypes","node","isRequired","object","string","oneOfType","arrayOf","number","elementType","sx","func","bool"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"columns\", \"spacing\", \"defaultColumns\", \"defaultHeight\", \"defaultSpacing\"];\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport * as ReactDOM from 'react-dom';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { createUnarySpacing, getValue, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { getMasonryUtilityClass } from './masonryClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const parseToNumber = val => {\n  return Number(val.replace('px', ''));\n};\nconst lineBreakStyle = {\n  flexBasis: '100%',\n  width: 0,\n  margin: 0,\n  padding: 0\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getMasonryUtilityClass, classes);\n};\nexport const getStyle = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    width: '100%',\n    display: 'flex',\n    flexFlow: 'column wrap',\n    alignContent: 'flex-start',\n    boxSizing: 'border-box',\n    '& > *': {\n      boxSizing: 'border-box'\n    }\n  };\n  const stylesSSR = {};\n  // Only applicable for Server-Side Rendering\n  if (ownerState.isSSR) {\n    const orderStyleSSR = {};\n    const defaultSpacing = parseToNumber(theme.spacing(ownerState.defaultSpacing));\n    for (let i = 1; i <= ownerState.defaultColumns; i += 1) {\n      orderStyleSSR[`&:nth-of-type(${ownerState.defaultColumns}n+${i % ownerState.defaultColumns})`] = {\n        order: i\n      };\n    }\n    stylesSSR.height = ownerState.defaultHeight;\n    stylesSSR.margin = -(defaultSpacing / 2);\n    stylesSSR['& > *'] = _extends({}, styles['& > *'], orderStyleSSR, {\n      margin: defaultSpacing / 2,\n      width: `calc(${(100 / ownerState.defaultColumns).toFixed(2)}% - ${defaultSpacing}px)`\n    });\n    return _extends({}, styles, stylesSSR);\n  }\n  const spacingValues = resolveBreakpointValues({\n    values: ownerState.spacing,\n    breakpoints: theme.breakpoints.values\n  });\n  const transformer = createUnarySpacing(theme);\n  const spacingStyleFromPropValue = propValue => {\n    let spacing;\n    // in case of string/number value\n    if (typeof propValue === 'string' && !Number.isNaN(Number(propValue)) || typeof propValue === 'number') {\n      const themeSpacingValue = Number(propValue);\n      spacing = getValue(transformer, themeSpacingValue);\n    } else {\n      spacing = propValue;\n    }\n    return _extends({\n      margin: `calc(0px - (${spacing} / 2))`,\n      '& > *': {\n        margin: `calc(${spacing} / 2)`\n      }\n    }, ownerState.maxColumnHeight && {\n      height: typeof spacing === 'number' ? Math.ceil(ownerState.maxColumnHeight + parseToNumber(spacing)) : `calc(${ownerState.maxColumnHeight}px + ${spacing})`\n    });\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, spacingValues, spacingStyleFromPropValue));\n  const columnValues = resolveBreakpointValues({\n    values: ownerState.columns,\n    breakpoints: theme.breakpoints.values\n  });\n  const columnStyleFromPropValue = propValue => {\n    const columnValue = Number(propValue);\n    const width = `${(100 / columnValue).toFixed(2)}%`;\n    const spacing = typeof spacingValues === 'string' && !Number.isNaN(Number(spacingValues)) || typeof spacingValues === 'number' ? getValue(transformer, Number(spacingValues)) : '0px';\n    return {\n      '& > *': {\n        width: `calc(${width} - ${spacing})`\n      }\n    };\n  };\n  styles = deepmerge(styles, handleBreakpoints({\n    theme\n  }, columnValues, columnStyleFromPropValue));\n\n  // configure width for responsive spacing values\n  if (typeof spacingValues === 'object') {\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, (propValue, breakpoint) => {\n      if (breakpoint) {\n        const themeSpacingValue = Number(propValue);\n        const lastBreakpoint = Object.keys(columnValues).pop();\n        const spacing = getValue(transformer, themeSpacingValue);\n        const column = typeof columnValues === 'object' ? columnValues[breakpoint] || columnValues[lastBreakpoint] : columnValues;\n        const width = `${(100 / column).toFixed(2)}%`;\n        return {\n          '& > *': {\n            width: `calc(${width} - ${spacing})`\n          }\n        };\n      }\n      return null;\n    }));\n  }\n  return styles;\n};\nconst MasonryRoot = styled('div', {\n  name: 'MuiMasonry',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(getStyle);\nconst Masonry = /*#__PURE__*/React.forwardRef(function Masonry(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMasonry'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      columns = 4,\n      spacing = 1,\n      defaultColumns,\n      defaultHeight,\n      defaultSpacing\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const masonryRef = React.useRef();\n  const [maxColumnHeight, setMaxColumnHeight] = React.useState();\n  const isSSR = !maxColumnHeight && defaultHeight && defaultColumns !== undefined && defaultSpacing !== undefined;\n  const [numberOfLineBreaks, setNumberOfLineBreaks] = React.useState(isSSR ? defaultColumns - 1 : 0);\n  const ownerState = _extends({}, props, {\n    spacing,\n    columns,\n    maxColumnHeight,\n    defaultColumns,\n    defaultHeight,\n    defaultSpacing,\n    isSSR\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleResize = masonryChildren => {\n    if (!masonryRef.current || !masonryChildren || masonryChildren.length === 0) {\n      return;\n    }\n    const masonry = masonryRef.current;\n    const masonryFirstChild = masonryRef.current.firstChild;\n    const parentWidth = masonry.clientWidth;\n    const firstChildWidth = masonryFirstChild.clientWidth;\n    if (parentWidth === 0 || firstChildWidth === 0) {\n      return;\n    }\n    const firstChildComputedStyle = window.getComputedStyle(masonryFirstChild);\n    const firstChildMarginLeft = parseToNumber(firstChildComputedStyle.marginLeft);\n    const firstChildMarginRight = parseToNumber(firstChildComputedStyle.marginRight);\n    const currentNumberOfColumns = Math.round(parentWidth / (firstChildWidth + firstChildMarginLeft + firstChildMarginRight));\n    const columnHeights = new Array(currentNumberOfColumns).fill(0);\n    let skip = false;\n    masonry.childNodes.forEach(child => {\n      if (child.nodeType !== Node.ELEMENT_NODE || child.dataset.class === 'line-break' || skip) {\n        return;\n      }\n      const childComputedStyle = window.getComputedStyle(child);\n      const childMarginTop = parseToNumber(childComputedStyle.marginTop);\n      const childMarginBottom = parseToNumber(childComputedStyle.marginBottom);\n      // if any one of children isn't rendered yet, masonry's height shouldn't be computed yet\n      const childHeight = parseToNumber(childComputedStyle.height) ? Math.ceil(parseToNumber(childComputedStyle.height)) + childMarginTop + childMarginBottom : 0;\n      if (childHeight === 0) {\n        skip = true;\n        return;\n      }\n      // if there is a nested image that isn't rendered yet, masonry's height shouldn't be computed yet\n      for (let i = 0; i < child.childNodes.length; i += 1) {\n        const nestedChild = child.childNodes[i];\n        if (nestedChild.tagName === 'IMG' && nestedChild.clientHeight === 0) {\n          skip = true;\n          break;\n        }\n      }\n      if (!skip) {\n        // find the current shortest column (where the current item will be placed)\n        const currentMinColumnIndex = columnHeights.indexOf(Math.min(...columnHeights));\n        columnHeights[currentMinColumnIndex] += childHeight;\n        const order = currentMinColumnIndex + 1;\n        child.style.order = order;\n      }\n    });\n    if (!skip) {\n      // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n      // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n      // Related issue - https://github.com/facebook/react/issues/24331\n      ReactDOM.flushSync(() => {\n        setMaxColumnHeight(Math.max(...columnHeights));\n        setNumberOfLineBreaks(currentNumberOfColumns > 0 ? currentNumberOfColumns - 1 : 0);\n      });\n    }\n  };\n  const observer = React.useRef(typeof ResizeObserver === 'undefined' ? undefined : new ResizeObserver(handleResize));\n  React.useEffect(() => {\n    const resizeObserver = observer.current;\n    // IE and old browsers are not supported\n    if (resizeObserver === undefined) {\n      return undefined;\n    }\n    if (masonryRef.current) {\n      masonryRef.current.childNodes.forEach(childNode => {\n        resizeObserver.observe(childNode);\n      });\n    }\n    return () => resizeObserver ? resizeObserver.disconnect() : {};\n  }, [columns, spacing, children]);\n  const handleRef = useForkRef(ref, masonryRef);\n\n  //  columns are likely to have different heights and hence can start to merge;\n  //  a line break at the end of each column prevents columns from merging\n  const lineBreaks = new Array(numberOfLineBreaks).fill('').map((_, index) => /*#__PURE__*/_jsx(\"span\", {\n    \"data-class\": \"line-break\",\n    style: _extends({}, lineBreakStyle, {\n      order: index + 1\n    })\n  }, index));\n  return /*#__PURE__*/_jsxs(MasonryRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: handleRef,\n    ownerState: ownerState\n  }, other, {\n    children: [children, lineBreaks]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Masonry.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Number of columns.\n   * @default 4\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The default number of columns of the component. This is provided for server-side rendering.\n   */\n  defaultColumns: PropTypes.number,\n  /**\n   * The default height of the component in px. This is provided for server-side rendering.\n   */\n  defaultHeight: PropTypes.number,\n  /**\n   * The default spacing of the component. Like `spacing`, it is a factor of the theme's spacing. This is provided for server-side rendering.\n   */\n  defaultSpacing: PropTypes.number,\n  /**\n   * Defines the space between children. It is a factor of the theme's spacing.\n   * @default 1\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * Allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Masonry;"]},"metadata":{},"sourceType":"module"}