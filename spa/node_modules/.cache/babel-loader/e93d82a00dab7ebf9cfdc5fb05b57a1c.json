{"ast":null,"code":"import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport agent from '../../app/api/agent';\nimport { history } from '../..';\nconst initialState = {\n  user: null\n};\nexport const SingInUser = createAsyncThunk('account/SingInUser', async (data, thunkAPI) => {\n  try {\n    const user = await agent.Account.login(data);\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n});\nexport const fetchCurrentUser = createAsyncThunk('account/fetchCurrentUser', async (_, thunkAPI) => {\n  try {\n    const user = await agent.Account.currentUser();\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n});\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    signOut: state => {\n      state.user = null;\n      localStorage.removeItem('user');\n      history.push('../');\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(isAnyOf(SingInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n      state.user = action.payload;\n    });\n    builder.addMatcher(isAnyOf(SingInUser.rejected, fetchCurrentUser.rejected), (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const {} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/account/accountSlice.ts"],"names":["createAsyncThunk","createSlice","isAnyOf","agent","history","initialState","user","SingInUser","data","thunkAPI","Account","login","localStorage","setItem","JSON","stringify","error","rejectWithValue","fetchCurrentUser","_","currentUser","accountSlice","name","reducers","signOut","state","removeItem","push","extraReducers","builder","addMatcher","fulfilled","action","payload","rejected","console","log","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,EAAwCC,OAAxC,QAAuD,kBAAvD;AAGA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB;AASA,MAAMC,YAA0B,GAAE;AAC9BC,EAAAA,IAAI,EAAC;AADyB,CAAlC;AAKA,OAAO,MAAMC,UAAU,GAACP,gBAAgB,CACpC,oBADoC,EAEpC,OAAMQ,IAAN,EAAWC,QAAX,KAAsB;AAClB,MAAI;AACA,UAAMH,IAAI,GAAG,MAAMH,KAAK,CAACO,OAAN,CAAcC,KAAd,CAAoBH,IAApB,CAAnB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA5B;AACA,WAAOA,IAAP;AACH,GAJD,CAIE,OAAOU,KAAP,EAAkB;AAChB,WAAOP,QAAQ,CAACQ,eAAT,CAAyB;AAACD,MAAAA,KAAK,EAACA,KAAK,CAACR;AAAb,KAAzB,CAAP;AAGH;AAGJ,CAdmC,CAAjC;AAmBP,OAAO,MAAMU,gBAAgB,GAAClB,gBAAgB,CAC1C,0BAD0C,EAE1C,OAAMmB,CAAN,EAAQV,QAAR,KAAmB;AACf,MAAI;AACA,UAAMH,IAAI,GAAG,MAAMH,KAAK,CAACO,OAAN,CAAcU,WAAd,EAAnB;AACAR,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA5B;AACA,WAAOA,IAAP;AACH,GAJD,CAIE,OAAOU,KAAP,EAAkB;AAChB,WAAOP,QAAQ,CAACQ,eAAT,CAAyB;AAACD,MAAAA,KAAK,EAACA,KAAK,CAACR;AAAb,KAAzB,CAAP;AAGH;AAGJ,CAdyC,CAAvC;AAsBP,MAAMa,YAAY,GAAGpB,WAAW,CAAC;AAC/BqB,EAAAA,IAAI,EAAE,SADyB;AAE/BjB,EAAAA,YAF+B;AAG/BkB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAEC,KAAD,IAAS;AACbA,MAAAA,KAAK,CAACnB,IAAN,GAAW,IAAX;AACAM,MAAAA,YAAY,CAACc,UAAb,CAAwB,MAAxB;AACAtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,KAAb;AACH;AALO,GAHqB;AAU/BC,EAAAA,aAAa,EAAEC,OAAO,IAAG;AAEvBA,IAAAA,OAAO,CAACC,UAAR,CAAmB5B,OAAO,CAACK,UAAU,CAACwB,SAAZ,EAAsBb,gBAAgB,CAACa,SAAvC,CAA1B,EACA,CAACN,KAAD,EAAOO,MAAP,KAAgB;AAEZP,MAAAA,KAAK,CAACnB,IAAN,GAAW0B,MAAM,CAACC,OAAlB;AACH,KAJD;AAKAJ,IAAAA,OAAO,CAACC,UAAR,CAAmB5B,OAAO,CAACK,UAAU,CAAC2B,QAAZ,EAAqBhB,gBAAgB,CAACgB,QAAtC,CAA1B,EACA,CAACT,KAAD,EAAOO,MAAP,KAAgB;AAEZG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,OAAnB;AACH,KAJD;AAMD;AAvB8B,CAAD,CAAhC;AA2BA,OAAO,MAAM,KAAKZ,YAAY,CAACgB,OAAxB;AAEP,eAAehB,YAAY,CAACiB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport { User } from '../../app/models/user';\r\nimport { FieldValues } from 'react-hook-form';\r\nimport agent from '../../app/api/agent';\r\nimport { history } from '../..';\r\n\r\ninterface AccountState{\r\n    user:User | null\r\n\r\n\r\n\r\n}\r\n\r\nconst initialState :AccountState= {\r\n    user:null\r\n\r\n}\r\n\r\nexport const SingInUser=createAsyncThunk<User,FieldValues>(\r\n    'account/SingInUser',\r\n    async(data,thunkAPI)=>{\r\n        try {\r\n            const user = await agent.Account.login(data);\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n)\r\n\r\nexport const fetchCurrentUser=createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async(_,thunkAPI)=>{\r\n        try {\r\n            const user = await agent.Account.currentUser();\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n)\r\n\r\n\r\n\r\n\r\nconst accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    signOut:(state)=>{\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        history.push('../')\r\n    }\r\n  },\r\n  extraReducers:(builder =>{\r\n\r\n    builder.addMatcher(isAnyOf(SingInUser.fulfilled,fetchCurrentUser.fulfilled),\r\n    (state,action)=>{\r\n\r\n        state.user=action.payload;\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.rejected,fetchCurrentUser.rejected),\r\n    (state,action)=>{\r\n\r\n        console.log(action.payload) ;\r\n    })\r\n\r\n  })\r\n  \r\n});\r\n\r\nexport const {} = accountSlice.actions\r\n\r\nexport default accountSlice.reducer"]},"metadata":{},"sourceType":"module"}