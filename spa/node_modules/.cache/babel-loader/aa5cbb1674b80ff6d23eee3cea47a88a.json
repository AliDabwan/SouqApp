{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport agent from '../../app/api/agent'; //rxslice    snippit\n\nconst initialState = {\n  basket: null,\n  status: 'idle'\n}; // in async we use thunkAPI for problems\n\nexport const addBasketItemAsync = createAsyncThunk('basket/addBasketItemAsync', async (_ref, thunkAPI) => {\n  let {\n    productId,\n    quantity = 1\n  } = _ref;\n\n  try {\n    console.log('quantity is' + quantity);\n\n    if (quantity === 0) {\n      quantity = 1;\n      console.log('quantity 1');\n    }\n\n    return await agent.Basket.addItem(productId, quantity === 0 ? 1 : quantity);\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n});\nexport const removeBasketItemAsync = createAsyncThunk('basket/removeBasketItemAsync', async (_ref2, thunkAPI) => {\n  let {\n    productId,\n    quantity\n  } = _ref2;\n\n  try {\n    return await agent.Basket.deleteItem(productId, quantity);\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n});\nconst basketSlice = createSlice({\n  name: 'basket',\n  initialState,\n  reducers: {\n    setBasket: (state, action) => {\n      state.basket = action.payload;\n    } // removeItem:(state,action)=>{\n    //     const {productId,quantity}=action.payload;\n    //     const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\n    //     if(itemIndex===-1 || itemIndex=== undefined) return ;\n    //     state.basket!.items[itemIndex].quantity-=quantity;\n    //     if(state.basket?.items[itemIndex].quantity===0)\n    //     state.basket.items.splice(itemIndex,1);\n    // }\n\n  },\n  extraReducers: builder => {\n    // add\n    builder.addCase(addBasketItemAsync.pending, (state, action) => {\n      state.status = 'pendingAddItem' + action.meta.arg.productId; // console.log(action)\n    });\n    builder.addCase(addBasketItemAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.basket = action.payload;\n    });\n    builder.addCase(addBasketItemAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      console.log(action.payload);\n    }); ///delete \n\n    builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n      state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name; // console.log(action)\n    });\n    builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n      var _state$basket, _state$basket2;\n\n      state.status = 'idle';\n      const {\n        productId,\n        quantity\n      } = action.meta.arg;\n      const itemIndex = (_state$basket = state.basket) === null || _state$basket === void 0 ? void 0 : _state$basket.items.findIndex(i => i.productId === productId);\n      if (itemIndex === -1 || itemIndex === undefined) return;\n      state.basket.items[itemIndex].quantity -= quantity;\n      if (((_state$basket2 = state.basket) === null || _state$basket2 === void 0 ? void 0 : _state$basket2.items[itemIndex].quantity) === 0) state.basket.items.splice(itemIndex, 1);\n    });\n    builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      console.log(action.payload);\n    });\n  }\n});\nexport const {\n  setBasket\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/basket/basketSlice.ts"],"names":["createAsyncThunk","createSlice","agent","initialState","basket","status","addBasketItemAsync","thunkAPI","productId","quantity","console","log","Basket","addItem","error","rejectWithValue","data","removeBasketItemAsync","deleteItem","basketSlice","name","reducers","setBasket","state","action","payload","extraReducers","builder","addCase","pending","meta","arg","fulfilled","rejected","itemIndex","items","findIndex","i","undefined","splice","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { Basket } from '../../app/models/basket';\r\nimport agent from '../../app/api/agent';\r\n//rxslice    snippit\r\n\r\n\r\n\r\n\r\nexport interface BasketState{\r\n\r\n    basket:Basket|null\r\n    status:string\r\n}\r\nconst initialState:BasketState = {\r\n    basket:null,\r\n    status:'idle'\r\n\r\n}\r\n\r\n// in async we use thunkAPI for problems\r\nexport const addBasketItemAsync=createAsyncThunk<Basket,{productId:number,quantity?:number}>(\r\n\r\n  'basket/addBasketItemAsync',\r\n  async({productId,quantity=1},thunkAPI)=>{\r\n    try {\r\n      console.log('quantity is'+quantity)\r\n\r\n      if(quantity===0){\r\n        quantity=1;\r\n        console.log('quantity 1')\r\n\r\n      }\r\n      \r\n      \r\n      return await agent.Basket.addItem(productId,quantity===0?1:quantity);\r\n    } catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync=createAsyncThunk<void,{productId:number,quantity:number,name?:string}>(\r\n\r\n  'basket/removeBasketItemAsync',\r\n  async({productId,quantity},thunkAPI)=>{\r\n    try {\r\n      return await agent.Basket.deleteItem(productId,quantity);\r\n    } catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  }\r\n)\r\n\r\n\r\nconst basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket:(state,action)=>{\r\n        state.basket=action.payload\r\n    }\r\n    // removeItem:(state,action)=>{\r\n    //     const {productId,quantity}=action.payload;\r\n    //     const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n    //     if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n    //     state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n    //     if(state.basket?.items[itemIndex].quantity===0)\r\n    //     state.basket.items.splice(itemIndex,1);\r\n    // }\r\n\r\n  },\r\n  extraReducers: (builder=> {\r\n    \r\n    // add\r\n    builder.addCase(addBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingAddItem'+action.meta.arg.productId;\r\n      // console.log(action)\r\n    });\r\n    builder.addCase(addBasketItemAsync.fulfilled,(state,action)=>{\r\n      state.status='idle';\r\n      state.basket=action.payload;\r\n    });\r\n    builder.addCase(addBasketItemAsync.rejected,(state,action)=>{\r\n      state.status='idle';\r\n      console.log(action.payload);\r\n    });\r\n\r\n    ///delete \r\n\r\n    builder.addCase(removeBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingRemoveItem'+action.meta.arg.productId+action.meta.arg.name;\r\n      // console.log(action)\r\n    });\r\n    builder.addCase(removeBasketItemAsync.fulfilled,(state,action)=>{\r\n      state.status='idle';\r\n      const {productId,quantity}=action.meta.arg;\r\n\r\n      const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n      if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n      state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n      if(state.basket?.items[itemIndex].quantity===0)\r\n      state.basket.items.splice(itemIndex,1);\r\n\r\n\r\n    });\r\n    builder.addCase(removeBasketItemAsync.rejected,(state,action)=>{\r\n      state.status='idle';\r\n      console.log(action.payload);\r\n\r\n    });\r\n\r\n  })\r\n\r\n}); \r\n\r\nexport const {setBasket} = basketSlice.actions\r\n\r\nexport default basketSlice.reducer"]},"metadata":{},"sourceType":"module"}