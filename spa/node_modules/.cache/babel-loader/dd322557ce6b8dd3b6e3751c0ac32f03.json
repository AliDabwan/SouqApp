{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\app\\\\components\\\\CheckBoxButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckBoxButton(_ref) {\n  _s();\n\n  let {\n    items,\n    onChange,\n    checked\n  } = _ref;\n  const [checkedItems, setcheckedItems] = useState(checked || []);\n\n  const handleChecked = value => {\n    const currentIndex = checkedItems.findIndex(item => item === value);\n    let newChecked = [];\n    if (currentIndex === -1) newChecked = [...checkedItems, value];else newChecked = checkedItems.filter(item => item !== value);\n    setcheckedItems(newChecked);\n    onChange(newChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: items.map(item => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      label: item,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: checkedItems.indexOf(item) !== -1,\n        onClick: () => handleChecked(item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 23\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckBoxButton, \"kxTOJRJZviybmsPw8bsP1PthPMo=\");\n\n_c = CheckBoxButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxButton\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/components/CheckBoxButton.tsx"],"names":["Checkbox","FormControlLabel","FormGroup","useState","CheckBoxButton","items","onChange","checked","checkedItems","setcheckedItems","handleChecked","value","currentIndex","findIndex","item","newChecked","filter","map","indexOf"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,gBAAnB,EAAqCC,SAArC,QAAsD,eAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;;AASA,eAAe,SAASC,cAAT,OAAwD;AAAA;;AAAA,MAAhC;AAACC,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA;AAAhB,GAAgC;AAEnE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAACI,OAAO,IAAE,EAAV,CAAhD;;AAEA,QAAMG,aAAa,GAAEC,KAAD,IAAgB;AAChC,UAAMC,YAAY,GAACJ,YAAY,CAACK,SAAb,CAAuBC,IAAI,IAAEA,IAAI,KAAGH,KAApC,CAAnB;AACA,QAAII,UAAoB,GAAC,EAAzB;AACA,QAAGH,YAAY,KAAG,CAAC,CAAnB,EAAqBG,UAAU,GAAC,CAAC,GAAGP,YAAJ,EAAiBG,KAAjB,CAAX,CAArB,KACKI,UAAU,GAACP,YAAY,CAACQ,MAAb,CAAoBF,IAAI,IAAEA,IAAI,KAAGH,KAAjC,CAAX;AACLF,IAAAA,eAAe,CAACM,UAAD,CAAf;AAEAT,IAAAA,QAAQ,CAACS,UAAD,CAAR;AACH,GARD;;AASF,sBACE,QAAC,SAAD;AAAA,cAIIV,KAAK,CAACY,GAAN,CAAUH,IAAI,iBACV,QAAC,gBAAD;AACC,MAAA,KAAK,EAAEA,IADR;AAEC,MAAA,OAAO,eAAE,QAAC,QAAD;AACT,QAAA,OAAO,EAAEN,YAAY,CAACU,OAAb,CAAqBJ,IAArB,MAA6B,CAAC,CAD9B;AAET,QAAA,OAAO,EAAE,MAAIJ,aAAa,CAACI,IAAD;AAFjB;AAAA;AAAA;AAAA;AAAA;AAFV,OAAuBA,IAAvB;AAAA;AAAA;AAAA;AAAA,YADJ;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAlCuBV,c;;KAAAA,c","sourcesContent":["import { Checkbox, FormControlLabel, FormGroup } from '@mui/material'\r\nimport { useState } from 'react'\r\n\r\n\r\ntype Props={\r\n\r\n    items:string[]\r\n    checked?:string[],\r\n    onChange:(items:string[])=>void\r\n}\r\nexport default function CheckBoxButton({items,onChange,checked}:Props) {\r\n\r\n    const [checkedItems, setcheckedItems] = useState(checked||[])\r\n\r\n    const handleChecked=(value:string)=>{\r\n        const currentIndex=checkedItems.findIndex(item=>item===value);\r\n        let newChecked:string []=[];\r\n        if(currentIndex===-1)newChecked=[...checkedItems,value]\r\n        else newChecked=checkedItems.filter(item=>item!==value);\r\n        setcheckedItems(newChecked);\r\n\r\n        onChange(newChecked);\r\n    }\r\n  return (\r\n    <FormGroup>\r\n                   \r\n    {\r\n       \r\n        items.map(item=>(\r\n            <FormControlLabel key={item}\r\n             label={item}\r\n             control={<Checkbox\r\n             checked={checkedItems.indexOf(item)!==-1}\r\n             onClick={()=>handleChecked(item)}\r\n             \r\n             />} />\r\n\r\n        ))\r\n\r\n    }\r\n\r\n\r\n</FormGroup>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}