{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\catalog\\\\Catalog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport Loader from \"../../app/layout/Loader\";\nimport ProductList from \"./ProductList\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors } from \"./catalogSlice\";\nimport { Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Catalog() {\n  _s();\n\n  // const [products, setProducts] = useState<Product[]>([])// context\n  const products = useAppSelector(productSelectors.selectAll);\n  const dispatch = useAppDispatch();\n  const {\n    status,\n    productsLoaded,\n    filtersLoaded\n  } = useAppSelector(state => state.catalog);\n  useEffect(() => {\n    // agent.Catalog.list()\n    //     .then(products => setProducts(products))\n    //     .catch(error => console.log(error))\n    //     .finally(() => setLoading(false))\n    if (!productsLoaded) {\n      dispatch(fetchProductsAsync());\n    }\n  }, [productsLoaded, dispatch]);\n  useEffect(() => {\n    if (!filtersLoaded) {\n      dispatch(fetchfiltersAsync());\n    }\n  }, [filtersLoaded, dispatch]);\n  if (status.includes('pending')) return /*#__PURE__*/_jsxDEV(Loader, {\n    message: \"Loading Products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 44\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    sx: {\n      mt: 1\n    },\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 2.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Catalog, \"SRlfRfvS+WPhH1g0PficjdTlFe8=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/catalog/Catalog.tsx"],"names":["useEffect","Loader","ProductList","useAppDispatch","useAppSelector","fetchProductsAsync","fetchfiltersAsync","productSelectors","Grid","Catalog","products","selectAll","dispatch","status","productsLoaded","filtersLoaded","state","catalog","includes","mt"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,gCAA/C;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,gBAAhD,QAAwE,gBAAxE;AACA,SAASC,IAAT,QAAqB,eAArB;;AAGA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAC9B;AACA,QAAMC,QAAQ,GAACN,cAAc,CAACG,gBAAgB,CAACI,SAAlB,CAA7B;AACA,QAAMC,QAAQ,GAACT,cAAc,EAA7B;AACA,QAAM;AAACU,IAAAA,MAAD;AAAQC,IAAAA,cAAR;AAAuBC,IAAAA;AAAvB,MAAsCX,cAAc,CAACY,KAAK,IAAEA,KAAK,CAACC,OAAd,CAA1D;AAMAjB,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA;AACA;AACA;AAEA,QAAI,CAACc,cAAL,EAAqB;AACjBF,MAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AAEH;AAGJ,GAbQ,EAcH,CAACS,cAAD,EAAgBF,QAAhB,CAdG,CAAT;AAgBIZ,EAAAA,SAAS,CAAC,MAAM;AAGZ,QAAI,CAACe,aAAL,EAAoB;AAChBH,MAAAA,QAAQ,CAACN,iBAAiB,EAAlB,CAAR;AAEH;AAGJ,GATQ,EAUH,CAACS,aAAD,EAAeH,QAAf,CAVG,CAAT;AAWJ,MAAIC,MAAM,CAACK,QAAP,CAAgB,SAAhB,CAAJ,EAAgC,oBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AAChC,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAV;AAAqB,IAAA,SAAS,MAA9B;AAA+B,IAAA,OAAO,EAAE,CAAxC;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA/CuBD,O;UAELL,c,EACAD,c,EAC6BC,c;;;KAJxBK,O","sourcesContent":["import { useEffect } from \"react\"\r\nimport Loader from \"../../app/layout/Loader\"\r\nimport ProductList from \"./ProductList\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors } from \"./catalogSlice\"\r\nimport { Grid } from \"@mui/material\"\r\n\r\n\r\nexport default function Catalog() {\r\n    // const [products, setProducts] = useState<Product[]>([])// context\r\n    const products=useAppSelector(productSelectors.selectAll);\r\n    const dispatch=useAppDispatch();\r\n    const {status,productsLoaded,filtersLoaded}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // agent.Catalog.list()\r\n        //     .then(products => setProducts(products))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n\r\n        if (!productsLoaded) {\r\n            dispatch(fetchProductsAsync())\r\n            \r\n        }\r\n\r\n\r\n    }\r\n        , [productsLoaded,dispatch])\r\n\r\n        useEffect(() => {\r\n\r\n           \r\n            if (!filtersLoaded) {\r\n                dispatch(fetchfiltersAsync())\r\n                \r\n            }\r\n    \r\n    \r\n        }\r\n            , [filtersLoaded,dispatch])\r\n    if (status.includes('pending')) return <Loader message='Loading Products...' />\r\n    return (\r\n        <Grid sx={{ mt: 1 }} container spacing={2}>\r\n            <Grid item xs={6} sm={2.2} >\r\n                \r\n            </Grid>\r\n\r\n            <ProductList products={products}></ProductList>\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}