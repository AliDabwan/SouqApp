{"ast":null,"code":"import _objectSpread from\"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Avatar from'@mui/material/Avatar';import TextField from'@mui/material/TextField';import Grid from'@mui/material/Grid';import Box from'@mui/material/Box';import Typography from'@mui/material/Typography';import Container from'@mui/material/Container';import{Paper}from'@mui/material';import{Link,useNavigate}from'react-router-dom';import{useForm}from'react-hook-form';import{LoadingButton}from'@mui/lab';import agent from'../../app/api/agent';import{useAppDispatch,useAppSelector}from'../../app/store/configureStore';import{toast}from'react-toastify';import{SingInUser}from'./accountSlice';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){var _errors$username,_errors$email,_errors$password;// const [validationErrors, setValidationErrors] = useState([])\nvar _useForm=useForm({mode:'all'}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,setError=_useForm.setError,_useForm$formState=_useForm.formState,isSubmitting=_useForm$formState.isSubmitting,isValid=_useForm$formState.isValid,errors=_useForm$formState.errors;var _useAppSelector=useAppSelector(function(state){return state.account;}),user=_useAppSelector.user;var dispach=useAppDispatch();var navigate=useNavigate();var handleApiErrors=function handleApiErrors(errors){if(errors){errors.forEach(function(error){if(error.includes('Password')){setError('password',{message:error});}else if(error.includes('Email')){setError('email',{message:error});}else if(error.includes('Username')){setError('username',{message:error});}});}};useEffect(function(){if(user)navigate('../');},[user,navigate]);return/*#__PURE__*/ (// <ThemeProvider theme={defaultTheme}>\n_jsx(Container,{component:Paper,maxWidth:\"sm\",children:/*#__PURE__*/_jsxs(Box,{sx:{marginTop:13,p:3,display:'flex',flexDirection:'column',alignItems:'center'},children:[/*#__PURE__*/_jsx(Avatar,{sx:{m:1,bgcolor:'primary.main'}}),/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h5\",children:\"Register\"}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit(function(data){return agent.Account.register(data).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:toast.success('Registeration Successful');_context.next=3;return dispach(SingInUser({Username:data.username,Password:data.password}));case 3:navigate('../');case 4:case\"end\":return _context.stop();}}},_callee);}))).catch(function(error){return handleApiErrors(error);});}),noValidate:true,sx:{mt:1},children:[/*#__PURE__*/_jsx(Avatar,{sx:{m:1,bgcolor:'primary.main'}}),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({margin:\"normal\"//   required\n,fullWidth:true,label:\"Username\"//   autoComplete=\"email\"\n,autoFocus:true//   onChange={handleInputChange}\n//   value={values.username}\n},register('username',{required:true})),{},{error:!!errors.username,helperText:errors===null||errors===void 0?void 0:(_errors$username=errors.username)===null||_errors$username===void 0?void 0:_errors$username.message})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({margin:\"normal\"//   required\n,fullWidth:true,label:\"Email\"//   autoComplete=\"email\"\n//   onChange={handleInputChange}\n//   value={values.username}\n},register('email',{required:true,pattern:{value:/^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,message:'Not a valid Email Address'}})),{},{error:!!errors.email,helperText:errors===null||errors===void 0?void 0:(_errors$email=errors.email)===null||_errors$email===void 0?void 0:_errors$email.message})),/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({margin:\"normal\"//   required\n,fullWidth:true//   name=\"password\"\n,label:\"Password\",type:\"password\"},register('password',{required:'كلمة المرور مطلوبة',pattern:{value:/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.*\\s).{8,}$/,message:'Not a valid Password'}})),{},{error:!!errors.password,helperText:errors===null||errors===void 0?void 0:(_errors$password=errors.password)===null||_errors$password===void 0?void 0:_errors$password.message//   autoComplete=\"current-password\"\n//   onChange={handleInputChange}\n//   value={values.password}\n})),/*#__PURE__*/_jsx(LoadingButton,{disabled:!isValid,loading:isSubmitting,type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2},children:\"Register\"}),/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{component:Link,to:\"../login\",sx:{fontWeight:'bold',color:'primary.main',textDecoration:'none'},children:\"Already have an account? Sign In\"})})})]})]})})// { </ThemeProvider> }\n);}","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/account/Register.tsx"],"names":["Avatar","TextField","Grid","Box","Typography","Container","Paper","Link","useNavigate","useForm","LoadingButton","agent","useAppDispatch","useAppSelector","toast","SingInUser","useEffect","Login","mode","register","handleSubmit","setError","formState","isSubmitting","isValid","errors","state","account","user","dispach","navigate","handleApiErrors","forEach","error","includes","message","marginTop","p","display","flexDirection","alignItems","m","bgcolor","data","Account","then","success","Username","username","Password","password","catch","mt","required","pattern","value","email","mb","fontWeight","color","textDecoration"],"mappings":"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","sourcesContent":["import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { toast } from 'react-toastify';\r\nimport { SingInUser } from './accountSlice';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function Login() {\r\n  \r\n    // const [validationErrors, setValidationErrors] = useState([])\r\n    const {register,handleSubmit,setError,formState:{isSubmitting,isValid,errors}}=useForm({\r\n        mode:'all'\r\n    });\r\n    const {user}=useAppSelector(state=>state.account);\r\n\r\n\r\n    const dispach=useAppDispatch();\r\n    const navigate=useNavigate();\r\n\r\n\r\n    const handleApiErrors=(errors:string[])=>{\r\n        if(errors){\r\n            errors.forEach(error=>{\r\n                if(error.includes('Password')){\r\n                    setError('password',{message:error});\r\n                }else if (error.includes('Email')){\r\n                    setError('email',{message:error});\r\n                }\r\n                else if (error.includes('Username')){\r\n                    setError('username',{message:error});\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(user) navigate('../');\r\n \r\n    }, [user,navigate])\r\n    \r\n\r\n\r\n  return (\r\n    // <ThemeProvider theme={defaultTheme}>\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n        {/* <CssBaseline /> */}\r\n        <Box\r\n          sx={{\r\n            marginTop: 13,\r\n            p:3,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n            {/* <AppRegistration /> */}\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Register\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit((data:FieldValues)=>\r\n\r\n            agent.Account.register(data)\r\n            .then(async()=>{\r\n                toast.success('Registeration Successful');\r\n                \r\n            await dispach(SingInUser({Username:data.username,Password:data.password}));\r\n            navigate('../');\r\n\r\n\r\n            })\r\n            \r\n            .catch(error=>handleApiErrors(error))\r\n            )} noValidate sx={{ mt: 1 }}>\r\n\r\n                {\r\n    \r\n\r\n\r\n                }\r\n\r\n\r\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n          </Avatar>\r\n            <TextField\r\n            \r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Username\"\r\n            //   autoComplete=\"email\"\r\n              autoFocus\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('username',{required:true})}\r\n            error={!!errors.username}\r\n            helperText={errors?.username?.message}\r\n            />\r\n             <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Email\"\r\n            //   autoComplete=\"email\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('email',{\r\n                required:true,\r\n                pattern:{\r\n                    value:/^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                    message:'Not a valid Email Address'\r\n                }\r\n                })}\r\n            error={!!errors.email}\r\n            helperText={errors?.email?.message}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n            //   name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n                {...register('password',\r\n                        {required:'كلمة المرور مطلوبة',\r\n                            pattern:{\r\n                                value:/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.*\\s).{8,}$/,\r\n                                message:'Not a valid Password'\r\n                            }\r\n                        \r\n                        }\r\n                    )\r\n                }\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message}\r\n\r\n\r\n\r\n            //   autoComplete=\"current-password\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.password}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n             {/* {\r\n                validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {\r\n                            validationErrors.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>{error}</ListItemText>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Alert>\r\n            } */}\r\n\r\n            \r\n            <LoadingButton\r\n            disabled={!isValid}\r\n            loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Register\r\n            </LoadingButton>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Typography \r\n                component={Link}\r\n                to={\"../login\"}\r\n               sx={{fontWeight:'bold',color:'primary.main',textDecoration:'none'}}\r\n                >\r\n                  {\"Already have an account? Sign In\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\r\n      </Container>\r\n    // { </ThemeProvider> }\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}