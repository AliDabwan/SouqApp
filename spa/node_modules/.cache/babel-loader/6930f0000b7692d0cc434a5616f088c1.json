{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors } from \"../../features/catalog/catalogSlice\";\nexport default function useProducts() {\n  _s();\n\n  const products = useAppSelector(productSelectors.selectAll);\n  const dispatch = useAppDispatch();\n  const {\n    productsLoaded,\n    filtersLoaded,\n    brands,\n    types,\n    paginationData\n  } = useAppSelector(state => state.catalog);\n  useEffect(() => {\n    // agent.Catalog.list()\n    //     .then(products => setProducts(products))\n    //     .catch(error => console.log(error))\n    //     .finally(() => setLoading(false))\n    if (!productsLoaded) {\n      dispatch(fetchProductsAsync());\n    }\n  }, [productsLoaded, dispatch]);\n  useEffect(() => {\n    if (!filtersLoaded) {\n      dispatch(fetchfiltersAsync());\n    }\n  }, [filtersLoaded, dispatch]);\n  return {\n    products,\n    productsLoaded,\n    filtersLoaded,\n    brands,\n    types,\n    paginationData\n  };\n}\n\n_s(useProducts, \"MAh5t0OGD2kWKA7kgEovbcwYuDU=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/hooks/useProducts.tsx"],"names":["useEffect","useAppDispatch","useAppSelector","fetchProductsAsync","fetchfiltersAsync","productSelectors","useProducts","products","selectAll","dispatch","productsLoaded","filtersLoaded","brands","types","paginationData","state","catalog"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,yBAA/C;AACA,SAASC,kBAAT,EAA6BC,iBAA7B,EAAgDC,gBAAhD,QAAwE,qCAAxE;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAClC,QAAMC,QAAQ,GAACL,cAAc,CAACG,gBAAgB,CAACG,SAAlB,CAA7B;AACA,QAAMC,QAAQ,GAACR,cAAc,EAA7B;AACA,QAAM;AAACS,IAAAA,cAAD;AAAgBC,IAAAA,aAAhB;AAA8BC,IAAAA,MAA9B;AAAqCC,IAAAA,KAArC;AAA2CC,IAAAA;AAA3C,MAA2DZ,cAAc,CAACa,KAAK,IAAEA,KAAK,CAACC,OAAd,CAA/E;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AAEZ;AACA;AACA;AACA;AAEA,QAAI,CAACU,cAAL,EAAqB;AACjBD,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AAEH;AAGJ,GAbQ,EAcH,CAACO,cAAD,EAAgBD,QAAhB,CAdG,CAAT;AAgBIT,EAAAA,SAAS,CAAC,MAAM;AAGZ,QAAI,CAACW,aAAL,EAAoB;AAChBF,MAAAA,QAAQ,CAACL,iBAAiB,EAAlB,CAAR;AAEH;AAGJ,GATQ,EAUH,CAACO,aAAD,EAAeF,QAAf,CAVG,CAAT;AAYA,SAAM;AACFF,IAAAA,QADE;AACOG,IAAAA,cADP;AACsBC,IAAAA,aADtB;AACoCC,IAAAA,MADpC;AAC2CC,IAAAA,KAD3C;AACiDC,IAAAA;AADjD,GAAN;AAGP;;GAxCuBR,W;UACLJ,c,EACAD,c,EACkDC,c","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors } from \"../../features/catalog/catalogSlice\";\r\n\r\nexport default function useProducts() {\r\n    const products=useAppSelector(productSelectors.selectAll);\r\n    const dispatch=useAppDispatch();\r\n    const {productsLoaded,filtersLoaded,brands,types,paginationData}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => { \r\n\r\n        // agent.Catalog.list()\r\n        //     .then(products => setProducts(products))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n\r\n        if (!productsLoaded) {\r\n            dispatch(fetchProductsAsync())\r\n            \r\n        }\r\n\r\n\r\n    }\r\n        , [productsLoaded,dispatch])\r\n\r\n        useEffect(() => {\r\n\r\n           \r\n            if (!filtersLoaded) {\r\n                dispatch(fetchfiltersAsync())\r\n                \r\n            }\r\n    \r\n    \r\n        }\r\n            , [filtersLoaded,dispatch])\r\n\r\n        return{\r\n            products,productsLoaded,filtersLoaded,brands,types,paginationData\r\n        }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}