{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\app\\\\layout\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Box, Button, Container, IconButton, Menu, MenuItem, Tooltip } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { useAppSelector } from '../store/configureStore';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst midLinks = [{\n  title: 'catalog',\n  path: '/catalog'\n}, {\n  title: 'about',\n  path: '/about'\n}, {\n  title: 'contact',\n  path: '/contact'\n}];\nconst rightLinks = [{\n  title: 'login',\n  path: '/login'\n}, {\n  title: 'register',\n  path: '/register'\n}];\nconst linkStyle = {\n  color: 'grey.300',\n  typography: 'h6',\n  '&.hover,&.active': {\n    color: 'inherit'\n  }\n};\nexport default function Header() {\n  _s();\n\n  const {\n    user\n  } = useAppSelector(state => state.account); // const {basket}=useSouqContext();\n\n  const {\n    basket\n  } = useAppSelector(state => state.basket);\n  const itemCounts = basket === null || basket === void 0 ? void 0 : basket.items.reduce((sum, item) => sum + item.quantity, 0);\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"a\",\n            href: \"/\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none'\n            },\n            children: \"LOGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              open: Boolean(anchorElNav),\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                }\n              },\n              children: midLinks.map(_ref => {\n                let {\n                  title,\n                  path\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleCloseNavMenu,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"center\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 19\n                  }, this)\n                }, title, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            noWrap: true,\n            component: \"a\",\n            href: \"\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none'\n            },\n            children: \"LOGO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: midLinks.map(_ref2 => {\n              let {\n                title,\n                path\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleCloseNavMenu,\n                sx: {\n                  my: 2,\n                  color: 'white',\n                  display: 'block'\n                },\n                children: title\n              }, path, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleOpenUserMenu,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Remy Sharp\",\n                  src: \"/static/images/avatar/2.jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: '45px'\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUserMenu,\n              children: rightLinks.map(_ref3 => {\n                let {\n                  title,\n                  path\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleCloseUserMenu,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"center\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 19\n                  }, this)\n                }, path, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Header, \"BrdAAbHmfO5XCVZC1f/Emrnca38=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/layout/Header.tsx"],"names":["Avatar","Box","Button","Container","IconButton","Menu","MenuItem","Tooltip","AppBar","Toolbar","Typography","useAppSelector","React","midLinks","title","path","rightLinks","linkStyle","color","typography","Header","user","state","account","basket","itemCounts","items","reduce","sum","item","quantity","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","mr","display","xs","md","fontFamily","fontWeight","letterSpacing","textDecoration","flexGrow","vertical","horizontal","Boolean","map","my","p","mt"],"mappings":"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","sourcesContent":["import { ShoppingCart } from '@mui/icons-material'\r\nimport { Avatar, Badge, Box, Button, Container, IconButton, List, ListItem, Menu, MenuItem, Tooltip } from '@mui/material'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\nimport { settings } from 'cluster'\r\nimport React from 'react'\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }]\r\nconst linkStyle = {\r\n    color: 'grey.300',\r\n    typography: 'h6',\r\n    '&.hover,&.active': {\r\n        color: 'inherit'\r\n    }\r\n}\r\nexport default function Header() {\r\n\r\n\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    const itemCounts=basket?.items.reduce((sum,item)=>sum+item.quantity,0);\r\n    const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\r\n    const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n  \r\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElNav(event.currentTarget);\r\n      };\r\n      const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElUser(event.currentTarget);\r\n      };\r\n    \r\n      const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n      };\r\n    \r\n      const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n      };\r\n    \r\n    return (\r\n\r\n        <>\r\n        <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              {/* <MenuIcon /> */}\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {midLinks.map(({ title, path }) => (\r\n                <MenuItem key={title} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{title}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          {/* <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} /> */}\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {midLinks.map(({ title, path }) => (\r\n              <Button\r\n                key={path}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {title}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {rightLinks.map(({ title, path })=> (\r\n                <MenuItem key={path} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{title}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar> \r\n\r\n\r\n        \r\n        {/* <AppBar position=\"fixed\" color=\"primary\" >\r\n\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography\r\n                    fontWeight=\"bolder\"\r\n                    variant=\"h5\"\r\n                    component={NavLink}\r\n                    to=\"/\"\r\n                    sx={{ color: 'inherit', textDecoration: 'none' }}\r\n                >\r\n                    Souqq\r\n                </Typography>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={linkStyle}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to='basket' size=\"large\" sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCounts} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        user ?\r\n                        (<SignedInMenu/>):\r\n                        (\r\n\r\n                            <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={linkStyle}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        )\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                  \r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar> */}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}