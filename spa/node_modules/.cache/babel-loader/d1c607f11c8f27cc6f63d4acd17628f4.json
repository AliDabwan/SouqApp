{"ast":null,"code":"import _slicedToArray from \"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport useButton from '../useButton';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base/react-menu/hooks-api/#use-menu-item)\n */\n\nexport default function useMenuItem(props) {\n  var _itemState$disabled;\n\n  var _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      ref = props.ref,\n      label = props.label;\n  var id = useId();\n  var menuContext = React.useContext(MenuUnstyledContext);\n  var itemRef = React.useRef(null);\n  var handleRef = useForkRef(itemRef, ref);\n\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n\n  var registerItem = menuContext.registerItem,\n      unregisterItem = menuContext.unregisterItem,\n      open = menuContext.open,\n      registerHighlightChangeHandler = menuContext.registerHighlightChangeHandler;\n  React.useEffect(function () {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    registerItem(id, {\n      disabled: disabled,\n      id: id,\n      ref: itemRef,\n      label: label\n    });\n    return function () {\n      return unregisterItem(id);\n    };\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n\n  var _useButton = useButton({\n    disabled: disabled,\n    focusableWhenDisabled: true,\n    ref: handleRef\n  }),\n      getButtonProps = _useButton.getRootProps,\n      focusVisible = _useButton.focusVisible; // Ensure the menu item is focused when highlighted\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focusRequested = _React$useState2[0],\n      requestFocus = _React$useState2[1];\n\n  var focusIfRequested = React.useCallback(function () {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(function () {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id: id,\n    disabled: disabled,\n    label: label\n  });\n  var itemState = menuContext.getItemState(id != null ? id : '');\n\n  var _ref = itemState != null ? itemState : {\n    highlighted: false\n  },\n      highlighted = _ref.highlighted;\n\n  var rerender = useForcedRerendering();\n  React.useEffect(function () {\n    function updateHighlightedState(highlightedItemId) {\n      if (highlightedItemId === id && !highlighted) {\n        rerender();\n      } else if (highlightedItemId !== id && highlighted) {\n        rerender();\n      }\n    }\n\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  React.useEffect(function () {\n    // TODO: this should be handled by the MenuButton\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n\n  if (id === undefined) {\n    return {\n      getRootProps: function getRootProps() {\n        var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n          role: 'menuitem'\n        });\n      },\n      disabled: false,\n      focusVisible: focusVisible,\n      highlighted: false\n    };\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var optionProps = menuContext.getItemProps(id, otherHandlers);\n      return _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    disabled: (_itemState$disabled = itemState == null ? void 0 : itemState.disabled) != null ? _itemState$disabled : false,\n    focusVisible: focusVisible,\n    highlighted: highlighted\n  };\n}","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/node_modules/@mui/material/node_modules/@mui/base/useMenuItem/useMenuItem.js"],"names":["_extends","React","unstable_useId","useId","unstable_useForkRef","useForkRef","MenuUnstyledContext","useButton","useForcedRerendering","useMenuItem","props","_itemState$disabled","disabled","ref","label","id","menuContext","useContext","itemRef","useRef","handleRef","Error","registerItem","unregisterItem","open","registerHighlightChangeHandler","useEffect","undefined","focusableWhenDisabled","getButtonProps","getRootProps","focusVisible","useState","focusRequested","requestFocus","focusIfRequested","useCallback","current","focus","useDebugValue","itemState","getItemState","highlighted","rerender","updateHighlightedState","highlightedItemId","otherHandlers","role","optionProps","getItemProps","tabIndex"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { MenuUnstyledContext } from '../MenuUnstyled';\nimport useButton from '../useButton';\nimport useForcedRerendering from '../utils/useForcedRerendering';\n\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenuItem API](https://mui.com/base/react-menu/hooks-api/#use-menu-item)\n */\nexport default function useMenuItem(props) {\n  var _itemState$disabled;\n  const {\n    disabled = false,\n    ref,\n    label\n  } = props;\n  const id = useId();\n  const menuContext = React.useContext(MenuUnstyledContext);\n  const itemRef = React.useRef(null);\n  const handleRef = useForkRef(itemRef, ref);\n  if (menuContext === null) {\n    throw new Error('MenuItemUnstyled must be used within a MenuUnstyled');\n  }\n  const {\n    registerItem,\n    unregisterItem,\n    open,\n    registerHighlightChangeHandler\n  } = menuContext;\n  React.useEffect(() => {\n    if (id === undefined) {\n      return undefined;\n    }\n    registerItem(id, {\n      disabled,\n      id,\n      ref: itemRef,\n      label\n    });\n    return () => unregisterItem(id);\n  }, [id, registerItem, unregisterItem, disabled, ref, label]);\n  const {\n    getRootProps: getButtonProps,\n    focusVisible\n  } = useButton({\n    disabled,\n    focusableWhenDisabled: true,\n    ref: handleRef\n  });\n\n  // Ensure the menu item is focused when highlighted\n  const [focusRequested, requestFocus] = React.useState(false);\n  const focusIfRequested = React.useCallback(() => {\n    if (focusRequested && itemRef.current != null) {\n      itemRef.current.focus();\n      requestFocus(false);\n    }\n  }, [focusRequested]);\n  React.useEffect(() => {\n    focusIfRequested();\n  });\n  React.useDebugValue({\n    id,\n    disabled,\n    label\n  });\n  const itemState = menuContext.getItemState(id != null ? id : '');\n  const {\n    highlighted\n  } = itemState != null ? itemState : {\n    highlighted: false\n  };\n  const rerender = useForcedRerendering();\n  React.useEffect(() => {\n    function updateHighlightedState(highlightedItemId) {\n      if (highlightedItemId === id && !highlighted) {\n        rerender();\n      } else if (highlightedItemId !== id && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  React.useEffect(() => {\n    // TODO: this should be handled by the MenuButton\n    requestFocus(highlighted && open);\n  }, [highlighted, open]);\n  if (id === undefined) {\n    return {\n      getRootProps: (otherHandlers = {}) => _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n        role: 'menuitem'\n      }),\n      disabled: false,\n      focusVisible,\n      highlighted: false\n    };\n  }\n  return {\n    getRootProps: (otherHandlers = {}) => {\n      const optionProps = menuContext.getItemProps(id, otherHandlers);\n      return _extends({}, otherHandlers, getButtonProps(otherHandlers), {\n        tabIndex: optionProps.tabIndex,\n        id: optionProps.id,\n        role: 'menuitem'\n      });\n    },\n    disabled: (_itemState$disabled = itemState == null ? void 0 : itemState.disabled) != null ? _itemState$disabled : false,\n    focusVisible,\n    highlighted\n  };\n}"]},"metadata":{},"sourceType":"module"}