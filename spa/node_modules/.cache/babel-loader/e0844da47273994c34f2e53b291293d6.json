{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\app\\\\components\\\\AppDropZone.tsx\",\n    _s = $RefreshSig$();\n\nimport { UploadFile } from \"@mui/icons-material\";\nimport { FormControl, Typography, FormHelperText } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useController } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppDropZone(props) {\n  _s();\n\n  var _fieldState$error;\n\n  const {\n    fieldState,\n    field\n  } = useController({ ...props,\n    defaultValue: null\n  });\n  const dzStyles = {\n    display: 'flex',\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    alignItems: 'center',\n    height: 100,\n    width: 500\n  };\n  const dzActive = {\n    borderColor: '#7b1fa2'\n  };\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles[0] = Object.assign(acceptedFiles[0], {\n      preview: URL.createObjectURL(acceptedFiles[0])\n    });\n    field.onChange(acceptedFiles[0]);\n  }, [field]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      error: !!fieldState.error,\n      style: isDragActive ? { ...dzStyles,\n        ...dzActive\n      } : dzStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadFile, {\n        sx: {\n          fontSize: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Drop image here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: (_fieldState$error = fieldState.error) === null || _fieldState$error === void 0 ? void 0 : _fieldState$error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppDropZone, \"8YGQrjK67dJzwEmId1yGWvAY9V0=\", false, function () {\n  return [useController, useDropzone];\n});\n\n_c = AppDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppDropZone\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/components/AppDropZone.tsx"],"names":["UploadFile","FormControl","Typography","FormHelperText","useCallback","useDropzone","useController","AppDropZone","props","fieldState","field","defaultValue","dzStyles","display","border","borderColor","borderRadius","paddingTop","alignItems","height","width","dzActive","onDrop","acceptedFiles","Object","assign","preview","URL","createObjectURL","onChange","getRootProps","getInputProps","isDragActive","error","fontSize","message"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,cAAlC,QAAwD,eAAxD;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAA6BC,aAA7B,QAAkD,iBAAlD;;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAAkC;AAAA;;AAAA;;AAC7C,QAAM;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAAmBJ,aAAa,CAAC,EAAC,GAAGE,KAAJ;AAAUG,IAAAA,YAAY,EAAC;AAAvB,GAAD,CAAtC;AAEA,QAAMC,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,MAAM,EAAE,iBAFK;AAGbC,IAAAA,WAAW,EAAE,MAHA;AAIbC,IAAAA,YAAY,EAAE,KAJD;AAKbC,IAAAA,UAAU,EAAE,MALC;AAMbC,IAAAA,UAAU,EAAE,QANC;AAObC,IAAAA,MAAM,EAAE,GAPK;AAQbC,IAAAA,KAAK,EAAE;AARM,GAAjB;AAWA,QAAMC,QAAQ,GAAG;AACbN,IAAAA,WAAW,EAAE;AADA,GAAjB;AAIA,QAAMO,MAAM,GAAGlB,WAAW,CAACmB,aAAa,IAAI;AAExCA,IAAAA,aAAa,CAAC,CAAD,CAAb,GAAiBC,MAAM,CAACC,MAAP,CAAcF,aAAa,CAAC,CAAD,CAA3B,EAA+B;AAACG,MAAAA,OAAO,EAACC,GAAG,CAACC,eAAJ,CAAoBL,aAAa,CAAC,CAAD,CAAjC;AAAT,KAA/B,CAAjB;AACAb,IAAAA,KAAK,CAACmB,QAAN,CAAeN,aAAa,CAAC,CAAD,CAA5B;AAIH,GAPyB,EAOvB,CAACb,KAAD,CAPuB,CAA1B;AAQE,QAAM;AAACoB,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8C3B,WAAW,CAAC;AAACiB,IAAAA;AAAD,GAAD,CAA/D;AAEA,sBACE,oBAASQ,YAAY,EAArB;AAAA,2BAOE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE,CAAC,CAACrB,UAAU,CAACwB,KAAjC;AAAwC,MAAA,KAAK,EAAED,YAAY,GAAG,EAAC,GAAGpB,QAAJ;AAAc,WAAGS;AAAjB,OAAH,GAAgCT,QAA3F;AAAA,8BACM,sBAAWmB,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADN,eAEO,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEG,UAAAA,QAAQ,EAAE;AAAZ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFP,eAGM,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHN,eAIM,QAAC,cAAD;AAAA,uCAAiBzB,UAAU,CAACwB,KAA5B,sDAAiB,kBAAkBE;AAAnC;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBL;;GA5CuB5B,W;UACKD,a,EAyB6BD,W;;;KA1BlCE,W","sourcesContent":["import { UploadFile } from \"@mui/icons-material\";\r\nimport { FormControl, Typography, FormHelperText } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\"\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n   \r\n}\r\nexport default function AppDropZone(props:Props) {\r\n    const {fieldState,field}=useController({...props,defaultValue:null})\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 100,\r\n        width: 500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: '#7b1fa2'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        acceptedFiles[0]=Object.assign(acceptedFiles[0],{preview:URL.createObjectURL(acceptedFiles[0])});\r\n        field.onChange(acceptedFiles[0]);\r\n\r\n\r\n\r\n    }, [field])\r\n      const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n    \r\n      return (\r\n        <div {...getRootProps()}>\r\n          {/* <input {...getInputProps()} />\r\n          {\r\n            isDragActive ?\r\n              <p>Drop the files here ...</p> :\r\n              <p>Drag 'n' drop some files here, or click to select files</p>\r\n          } */}\r\n          <FormControl error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n                <input {...getInputProps()} />\r\n                 <UploadFile sx={{ fontSize: '30px' }} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText> \r\n        </FormControl>\r\n        </div>\r\n      )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}