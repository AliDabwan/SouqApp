{"ast":null,"code":"import _slicedToArray from \"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"D:/Learn/react/SouqApp/spa/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes;\n  var slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\n\nvar TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nvar StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: function overridesResolver(props, styles) {\n    return [styles.content, styles.iconContainer && _defineProperty({}, \"& .\".concat(treeItemClasses.iconContainer), styles.iconContainer), styles.label && _defineProperty({}, \"& .\".concat(treeItemClasses.label), styles.label)];\n  }\n})(function (_ref3) {\n  var _ref4;\n\n  var theme = _ref3.theme;\n  return _ref4 = {\n    padding: '0 8px',\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    WebkitTapHighlightColor: 'transparent',\n    '&:hover': {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, _defineProperty(_ref4, \"&.\".concat(treeItemClasses.disabled), {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  }), _defineProperty(_ref4, \"&.\".concat(treeItemClasses.focused), {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  }), _defineProperty(_ref4, \"&.\".concat(treeItemClasses.selected), _defineProperty({\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.selectedOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.hoverOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / \").concat(theme.vars.palette.action.selectedOpacity, \")\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    }\n  }, \"&.\".concat(treeItemClasses.focused), {\n    backgroundColor: theme.vars ? \"rgba(\".concat(theme.vars.palette.primary.mainChannel, \" / calc(\").concat(theme.vars.palette.action.selectedOpacity, \" + \").concat(theme.vars.palette.action.focusOpacity, \"))\") : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  })), _defineProperty(_ref4, \"& .\".concat(treeItemClasses.iconContainer), {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  }), _defineProperty(_ref4, \"& .\".concat(treeItemClasses.label), _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)), _ref4;\n});\nvar TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.group;\n  }\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nvar TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n\n  var children = props.children,\n      className = props.className,\n      collapseIcon = props.collapseIcon,\n      _props$ContentCompone = props.ContentComponent,\n      ContentComponent = _props$ContentCompone === void 0 ? TreeItemContent : _props$ContentCompone,\n      ContentProps = props.ContentProps,\n      endIcon = props.endIcon,\n      expandIcon = props.expandIcon,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      idProp = props.id,\n      label = props.label,\n      nodeId = props.nodeId,\n      onClick = props.onClick,\n      onMouseDown = props.onMouseDown,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _React$useContext = React.useContext(TreeViewContext),\n      _React$useContext$ico = _React$useContext.icons,\n      contextIcons = _React$useContext$ico === void 0 ? {} : _React$useContext$ico,\n      focus = _React$useContext.focus,\n      isExpanded = _React$useContext.isExpanded,\n      isFocused = _React$useContext.isFocused,\n      isSelected = _React$useContext.isSelected,\n      isDisabled = _React$useContext.isDisabled,\n      multiSelect = _React$useContext.multiSelect,\n      disabledItemsFocusable = _React$useContext.disabledItemsFocusable,\n      mapFirstChar = _React$useContext.mapFirstChar,\n      unMapFirstChar = _React$useContext.unMapFirstChar,\n      registerNode = _React$useContext.registerNode,\n      unregisterNode = _React$useContext.unregisterNode,\n      treeId = _React$useContext.treeId;\n\n  var id = null;\n\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = \"\".concat(treeId, \"-\").concat(nodeId);\n  }\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      treeitemElement = _React$useState2[0],\n      setTreeitemElement = _React$useState2[1];\n\n  var contentRef = React.useRef(null);\n  var handleRef = useForkRef(setTreeitemElement, ref);\n  var descendant = React.useMemo(function () {\n    return {\n      element: treeitemElement,\n      id: nodeId\n    };\n  }, [nodeId, treeitemElement]);\n\n  var _useDescendant = useDescendant(descendant),\n      index = _useDescendant.index,\n      parentId = _useDescendant.parentId;\n\n  var expandable = Boolean(Array.isArray(children) ? children.length : children);\n  var expanded = isExpanded ? isExpanded(nodeId) : false;\n  var focused = isFocused ? isFocused(nodeId) : false;\n  var selected = isSelected ? isSelected(nodeId) : false;\n  var disabled = isDisabled ? isDisabled(nodeId) : false;\n\n  var ownerState = _extends({}, props, {\n    expanded: expanded,\n    focused: focused,\n    selected: selected,\n    disabled: disabled\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var displayIcon;\n  var expansionIcon;\n\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n\n  React.useEffect(function () {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index: index,\n        parentId: parentId,\n        expandable: expandable,\n        disabled: disabledProp\n      });\n      return function () {\n        unregisterNode(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(function () {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return function () {\n        unMapFirstChar(nodeId);\n      };\n    }\n\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  var ariaSelected;\n\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n     */\n    ariaSelected = true;\n  }\n\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      var rootElement;\n\n      if (typeof event.target.getRootNode === 'function') {\n        rootElement = event.target.getRootNode();\n      } else {\n        rootElement = ownerDocument(event.target);\n      }\n\n      rootElement.getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n\n    var unfocusable = !disabledItemsFocusable && disabled;\n\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the node is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/node_modules/@mui/lab/TreeItem/TreeItem.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","clsx","PropTypes","elementTypeAcceptingRef","Collapse","alpha","styled","useThemeProps","ownerDocument","useForkRef","unsupportedProp","unstable_composeClasses","composeClasses","TreeViewContext","DescendantProvider","useDescendant","TreeItemContent","treeItemClasses","getTreeItemUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","content","expanded","selected","focused","disabled","iconContainer","label","group","TreeItemRoot","name","slot","overridesResolver","props","styles","listStyle","margin","padding","outline","StyledTreeItemContent","theme","width","display","alignItems","cursor","WebkitTapHighlightColor","backgroundColor","vars","palette","action","hover","opacity","disabledOpacity","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","focusOpacity","marginRight","flexShrink","justifyContent","fontSize","minWidth","paddingLeft","position","typography","body1","TreeItemGroup","marginLeft","TreeItem","forwardRef","inProps","ref","children","className","collapseIcon","ContentComponent","ContentProps","endIcon","expandIcon","disabledProp","icon","idProp","id","nodeId","onClick","onMouseDown","TransitionComponent","TransitionProps","other","useContext","icons","contextIcons","isExpanded","isFocused","isSelected","isDisabled","multiSelect","disabledItemsFocusable","mapFirstChar","unMapFirstChar","registerNode","unregisterNode","treeId","useState","treeitemElement","setTreeitemElement","contentRef","useRef","handleRef","descendant","useMemo","element","index","parentId","expandable","Boolean","Array","isArray","length","displayIcon","expansionIcon","defaultExpandIcon","defaultCollapseIcon","defaultParentIcon","defaultEndIcon","useEffect","idAttribute","undefined","current","textContent","substring","toLowerCase","ariaSelected","handleFocus","event","target","currentTarget","rootElement","getRootNode","getElementById","preventScroll","unfocusable","role","tabIndex","onFocus","as","unmountOnExit","in","component","process","env","NODE_ENV","propTypes","node","object","string","bool","isRequired","func","sx","oneOfType","arrayOf","elementType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"collapseIcon\", \"ContentComponent\", \"ContentProps\", \"endIcon\", \"expandIcon\", \"disabled\", \"icon\", \"id\", \"label\", \"nodeId\", \"onClick\", \"onMouseDown\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport Collapse from '@mui/material/Collapse';\nimport { alpha, styled, useThemeProps } from '@mui/material/styles';\nimport { ownerDocument, useForkRef, unsupportedProp } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport TreeViewContext from '../TreeView/TreeViewContext';\nimport { DescendantProvider, useDescendant } from '../TreeView/descendants';\nimport TreeItemContent from './TreeItemContent';\nimport treeItemClasses, { getTreeItemUtilityClass } from './treeItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    content: ['content'],\n    expanded: ['expanded'],\n    selected: ['selected'],\n    focused: ['focused'],\n    disabled: ['disabled'],\n    iconContainer: ['iconContainer'],\n    label: ['label'],\n    group: ['group']\n  };\n  return composeClasses(slots, getTreeItemUtilityClass, classes);\n};\nconst TreeItemRoot = styled('li', {\n  name: 'MuiTreeItem',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  outline: 0\n});\nconst StyledTreeItemContent = styled(TreeItemContent, {\n  name: 'MuiTreeItem',\n  slot: 'Content',\n  overridesResolver: (props, styles) => {\n    return [styles.content, styles.iconContainer && {\n      [`& .${treeItemClasses.iconContainer}`]: styles.iconContainer\n    }, styles.label && {\n      [`& .${treeItemClasses.label}`]: styles.label\n    }];\n  }\n})(({\n  theme\n}) => ({\n  padding: '0 8px',\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  WebkitTapHighlightColor: 'transparent',\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${treeItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity,\n    backgroundColor: 'transparent'\n  },\n  [`&.${treeItemClasses.focused}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${treeItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n    [`&.${treeItemClasses.focused}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`& .${treeItemClasses.iconContainer}`]: {\n    marginRight: 4,\n    width: 15,\n    display: 'flex',\n    flexShrink: 0,\n    justifyContent: 'center',\n    '& svg': {\n      fontSize: 18\n    }\n  },\n  [`& .${treeItemClasses.label}`]: _extends({\n    width: '100%',\n    // fixes overflow - see https://github.com/mui/material-ui/issues/27372\n    minWidth: 0,\n    paddingLeft: 4,\n    position: 'relative'\n  }, theme.typography.body1)\n}));\nconst TreeItemGroup = styled(Collapse, {\n  name: 'MuiTreeItem',\n  slot: 'Group',\n  overridesResolver: (props, styles) => styles.group\n})({\n  margin: 0,\n  padding: 0,\n  marginLeft: 17\n});\nconst TreeItem = /*#__PURE__*/React.forwardRef(function TreeItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTreeItem'\n  });\n  const {\n      children,\n      className,\n      collapseIcon,\n      ContentComponent = TreeItemContent,\n      ContentProps,\n      endIcon,\n      expandIcon,\n      disabled: disabledProp,\n      icon,\n      id: idProp,\n      label,\n      nodeId,\n      onClick,\n      onMouseDown,\n      TransitionComponent = Collapse,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    icons: contextIcons = {},\n    focus,\n    isExpanded,\n    isFocused,\n    isSelected,\n    isDisabled,\n    multiSelect,\n    disabledItemsFocusable,\n    mapFirstChar,\n    unMapFirstChar,\n    registerNode,\n    unregisterNode,\n    treeId\n  } = React.useContext(TreeViewContext);\n  let id = null;\n  if (idProp != null) {\n    id = idProp;\n  } else if (treeId && nodeId) {\n    id = `${treeId}-${nodeId}`;\n  }\n  const [treeitemElement, setTreeitemElement] = React.useState(null);\n  const contentRef = React.useRef(null);\n  const handleRef = useForkRef(setTreeitemElement, ref);\n  const descendant = React.useMemo(() => ({\n    element: treeitemElement,\n    id: nodeId\n  }), [nodeId, treeitemElement]);\n  const {\n    index,\n    parentId\n  } = useDescendant(descendant);\n  const expandable = Boolean(Array.isArray(children) ? children.length : children);\n  const expanded = isExpanded ? isExpanded(nodeId) : false;\n  const focused = isFocused ? isFocused(nodeId) : false;\n  const selected = isSelected ? isSelected(nodeId) : false;\n  const disabled = isDisabled ? isDisabled(nodeId) : false;\n  const ownerState = _extends({}, props, {\n    expanded,\n    focused,\n    selected,\n    disabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  let displayIcon;\n  let expansionIcon;\n  if (expandable) {\n    if (!expanded) {\n      expansionIcon = expandIcon || contextIcons.defaultExpandIcon;\n    } else {\n      expansionIcon = collapseIcon || contextIcons.defaultCollapseIcon;\n    }\n  }\n  if (expandable) {\n    displayIcon = contextIcons.defaultParentIcon;\n  } else {\n    displayIcon = endIcon || contextIcons.defaultEndIcon;\n  }\n  React.useEffect(() => {\n    // On the first render a node's index will be -1. We want to wait for the real index.\n    if (registerNode && unregisterNode && index !== -1) {\n      registerNode({\n        id: nodeId,\n        idAttribute: id,\n        index,\n        parentId,\n        expandable,\n        disabled: disabledProp\n      });\n      return () => {\n        unregisterNode(nodeId);\n      };\n    }\n    return undefined;\n  }, [registerNode, unregisterNode, parentId, index, nodeId, expandable, disabledProp, id]);\n  React.useEffect(() => {\n    if (mapFirstChar && unMapFirstChar && label) {\n      mapFirstChar(nodeId, contentRef.current.textContent.substring(0, 1).toLowerCase());\n      return () => {\n        unMapFirstChar(nodeId);\n      };\n    }\n    return undefined;\n  }, [mapFirstChar, unMapFirstChar, nodeId, label]);\n  let ariaSelected;\n  if (multiSelect) {\n    ariaSelected = selected;\n  } else if (selected) {\n    /* single-selection trees unset aria-selected on un-selected items.\n     *\n     * If the tree does not support multiple selection, aria-selected\n     * is set to true for the selected node and it is not present on any other node in the tree.\n     * Source: https://www.w3.org/WAI/ARIA/apg/patterns/treeview/\n     */\n    ariaSelected = true;\n  }\n  function handleFocus(event) {\n    // DOM focus stays on the tree which manages focus with aria-activedescendant\n    if (event.target === event.currentTarget) {\n      let rootElement;\n      if (typeof event.target.getRootNode === 'function') {\n        rootElement = event.target.getRootNode();\n      } else {\n        rootElement = ownerDocument(event.target);\n      }\n      rootElement.getElementById(treeId).focus({\n        preventScroll: true\n      });\n    }\n    const unfocusable = !disabledItemsFocusable && disabled;\n    if (!focused && event.currentTarget === event.target && !unfocusable) {\n      focus(event, nodeId);\n    }\n  }\n  return /*#__PURE__*/_jsxs(TreeItemRoot, _extends({\n    className: clsx(classes.root, className),\n    role: \"treeitem\",\n    \"aria-expanded\": expandable ? expanded : null,\n    \"aria-selected\": ariaSelected,\n    \"aria-disabled\": disabled || null,\n    ref: handleRef,\n    id: id,\n    tabIndex: -1\n  }, other, {\n    ownerState: ownerState,\n    onFocus: handleFocus,\n    children: [/*#__PURE__*/_jsx(StyledTreeItemContent, _extends({\n      as: ContentComponent,\n      ref: contentRef,\n      classes: {\n        root: classes.content,\n        expanded: classes.expanded,\n        selected: classes.selected,\n        focused: classes.focused,\n        disabled: classes.disabled,\n        iconContainer: classes.iconContainer,\n        label: classes.label\n      },\n      label: label,\n      nodeId: nodeId,\n      onClick: onClick,\n      onMouseDown: onMouseDown,\n      icon: icon,\n      expansionIcon: expansionIcon,\n      displayIcon: displayIcon,\n      ownerState: ownerState\n    }, ContentProps)), children && /*#__PURE__*/_jsx(DescendantProvider, {\n      id: nodeId,\n      children: /*#__PURE__*/_jsx(TreeItemGroup, _extends({\n        as: TransitionComponent,\n        unmountOnExit: true,\n        className: classes.group,\n        in: expanded,\n        component: \"ul\",\n        role: \"group\"\n      }, TransitionProps, {\n        children: children\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TreeItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon used to collapse the node.\n   */\n  collapseIcon: PropTypes.node,\n  /**\n   * The component used for the content node.\n   * @default TreeItemContent\n   */\n  ContentComponent: elementTypeAcceptingRef,\n  /**\n   * Props applied to ContentComponent\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the node is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The icon displayed next to a end node.\n   */\n  endIcon: PropTypes.node,\n  /**\n   * The icon used to expand the node.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * The icon to display next to the tree node's label.\n   */\n  icon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The tree node label.\n   */\n  label: PropTypes.node,\n  /**\n   * The id of the node.\n   */\n  nodeId: PropTypes.string.isRequired,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * This prop isn't supported.\n   * Use the `onNodeFocus` callback on the tree if you need to monitor a node's focus.\n   */\n  onFocus: unsupportedProp,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default TreeItem;"]},"metadata":{},"sourceType":"module"}