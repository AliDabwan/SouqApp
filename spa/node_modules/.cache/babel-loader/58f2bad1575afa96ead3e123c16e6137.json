{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\catalog\\\\ProductCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader, Avatar } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { currencyFormat } from \"../../app/helper/helper\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductCard(_ref) {\n  _s();\n\n  let {\n    product\n  } = _ref;\n  // const [lodaing, setLodaing] = useState(false); local using befor async thunk\n  const {\n    status\n  } = useAppSelector(state => state.basket); // const {setBasket}=useSouqContext();\n\n  const dispatch = useAppDispatch(); // const handleAddItem=(productId:number)=>{\n  //     setLodaing(true);\n  //     agent.Basket.addItem(productId).then(basket=>dispatch(setBasket(basket)))\n  //     .catch(error=>console.log(error))\n  //     .finally(()=>setLodaing(false));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'primary.dark'\n        },\n        children: product.brand.charAt(0).toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this),\n      title: product.name,\n      titleTypographyProps: {\n        variant: \"body2\",\n        sx: {\n          fontWeight: 'bolder',\n          color: 'primary.dark'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      height: \"200\",\n      image: product.pictureUrl,\n      alt: product.name,\n      title: product.name,\n      sx: {\n        objectFit: 'contain'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        fontWeight: \"bolder\",\n        textAlign: \"center\",\n        gutterBottom: true,\n        variant: \"h5\",\n        color: \"primary.dark\",\n        children: currencyFormat(product.price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        fontWeight: \"bolder\",\n        textAlign: \"center\",\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: [product.brand, \" / \", product.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(LoadingButton, {\n        loading: status === 'pendingAddItem' // onClick={()=>handleAddItem(product.id)}\n        ,\n        onClick: () => dispatch(addBasketItemAsync({\n          productId: product.id\n        })),\n        sx: {\n          fontWeight: 'bolder'\n        },\n        size: \"small\",\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          fontWeight: 'bolder'\n        },\n        size: \"small\",\n        component: Link,\n        to: `/catalog/${product.id}`,\n        children: \"View Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductCard, \"J5rU8PUg5NYDjV8SmKS0A1oX1o8=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n\n_c = ProductCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCard\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/catalog/ProductCard.tsx"],"names":["Button","Card","CardActions","CardContent","CardMedia","Typography","CardHeader","Avatar","Link","LoadingButton","currencyFormat","useAppDispatch","useAppSelector","addBasketItemAsync","ProductCard","product","status","state","basket","dispatch","bgcolor","brand","charAt","toUpperCase","name","variant","sx","fontWeight","color","pictureUrl","objectFit","price","type","display","justifyContent","productId","id"],"mappings":"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","sourcesContent":["import { Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader, Avatar } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync, setBasket } from \"../basket/basketSlice\";\r\n\r\ntype Props = {\r\n    product: Product\r\n}\r\nexport default function ProductCard({ product }: Props) {\r\n    // const [lodaing, setLodaing] = useState(false); local using befor async thunk\r\n    const {status}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    // const {setBasket}=useSouqContext();\r\n    const dispatch=useAppDispatch();\r\n\r\n\r\n\r\n    // const handleAddItem=(productId:number)=>{\r\n    //     setLodaing(true);\r\n    //     agent.Basket.addItem(productId).then(basket=>dispatch(setBasket(basket)))\r\n\r\n    //     .catch(error=>console.log(error))\r\n    //     .finally(()=>setLodaing(false));\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'primary.dark' }}>\r\n                        {product.brand.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{ variant: \"body2\", sx: { fontWeight: 'bolder', color: 'primary.dark' } }}\r\n\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={product.pictureUrl}\r\n                alt={product.name}\r\n                title={product.name}\r\n                sx={{ objectFit: 'contain' }}\r\n            />\r\n            <CardContent>\r\n                <Typography fontWeight=\"bolder\" textAlign=\"center\" gutterBottom variant=\"h5\" color=\"primary.dark\">\r\n                    {/* {(product.price / 100).toFixed(2)} EGP */}\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography fontWeight=\"bolder\" textAlign=\"center\" variant=\"body1\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n\r\n                <LoadingButton loading={status==='pendingAddItem'}\r\n                // onClick={()=>handleAddItem(product.id)}\r\n                onClick={()=>dispatch( addBasketItemAsync({productId:product.id}))}\r\n\r\n                sx={{ fontWeight: 'bolder' }} \r\n                size=\"small\">Add To Cart</LoadingButton>\r\n                \r\n                <Button\r\n                    sx={{ fontWeight: 'bolder' }}\r\n                    size=\"small\"\r\n                    component={Link}\r\n                    to={`/catalog/${product.id}`}\r\n                >View Product</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}