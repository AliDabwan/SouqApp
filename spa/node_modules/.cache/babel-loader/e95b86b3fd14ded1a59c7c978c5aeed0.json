{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\app\\\\layout\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { AppRegistration, Login, ShoppingCart } from '@mui/icons-material';\nimport { Avatar, Badge, Box, Container, IconButton, List, ListItem, ListItemIcon, ListItemText, Menu, MenuItem, Tooltip } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useAppSelector } from '../store/configureStore';\nimport SignedInMenu from './SignedInMenu';\nimport React, { useState } from 'react';\nimport AdbIcon from '@mui/icons-material/Adb';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst midLinks = [{\n  title: 'catalog',\n  path: '/catalog'\n}, {\n  title: 'about',\n  path: '/about'\n}, {\n  title: 'contact',\n  path: '/contact'\n}];\nconst rightLinks = [{\n  title: 'login',\n  path: '/login',\n  typeIcon: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 48\n  }, this)\n}, {\n  title: 'register',\n  path: '/register',\n  typeIcon: /*#__PURE__*/_jsxDEV(AppRegistration, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 54\n  }, this)\n}];\nconst linkStyle = {\n  color: 'grey.300',\n  typography: 'h6',\n  '&.hover,&.active': {\n    color: 'inherit'\n  }\n};\nexport default function Header() {\n  _s();\n\n  var _user$roles, _user$roles2;\n\n  const {\n    user\n  } = useAppSelector(state => state.account); // const {basket}=useSouqContext();\n\n  const {\n    basket\n  } = useAppSelector(state => state.basket);\n  const itemCounts = basket === null || basket === void 0 ? void 0 : basket.items.reduce((sum, item) => sum + item.quantity, 0); // const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\n\n  const [boolNavM, setBoolNavM] = useState(false);\n  const [boolNavU, setBoolNavU] = useState(false);\n\n  const handleOpenNavMenu = () => {\n    setBoolNavM(true);\n  };\n\n  const handleOpenUserMenu = () => {\n    setBoolNavU(true);\n  };\n\n  const handleCloseNavMenu = () => {\n    setBoolNavM(false);\n  };\n\n  const handleCloseUserMenu = () => {\n    setBoolNavU(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true // component=\"a\"\n            ,\n            component: NavLink,\n            to: \"/\" // href=\"/\"\n            ,\n            sx: {\n              mr: 2,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none'\n            },\n            children: \"SOUQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorEl,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              },\n              open: boolNavM,\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: 'block',\n                  md: 'none'\n                }\n              },\n              children: [midLinks.map(_ref => {\n                let {\n                  title,\n                  path\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  component: NavLink,\n                  to: path,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"center\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 19\n                  }, this)\n                }, path, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this);\n              }), user && ((_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.includes('Admin')) && /*#__PURE__*/_jsxDEV(MenuItem, {\n                component: NavLink,\n                to: '../inventory',\n                sx: linkStyle,\n                children: \"INVENTORY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AdbIcon, {\n            sx: {\n              display: {\n                xs: 'flex',\n                md: 'none'\n              },\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            noWrap: true,\n            component: \"a\",\n            href: \"\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: 'flex',\n                md: 'none'\n              },\n              flexGrow: 1,\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none'\n            },\n            children: \"SOUQ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: 'none',\n                md: 'flex'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              sx: {\n                display: 'flex'\n              },\n              children: [midLinks.map(_ref2 => {\n                let {\n                  title,\n                  path\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  component: NavLink,\n                  to: path,\n                  sx: linkStyle,\n                  children: title.toUpperCase()\n                }, path, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this);\n              }), user && ((_user$roles2 = user.roles) === null || _user$roles2 === void 0 ? void 0 : _user$roles2.includes('Admin')) && /*#__PURE__*/_jsxDEV(ListItem, {\n                component: NavLink,\n                to: '../inventory',\n                sx: linkStyle,\n                children: \"INVENTORY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              component: Link,\n              to: \"basket\",\n              size: \"large\",\n              sx: {\n                color: 'inherit'\n              },\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                badgeContent: itemCounts,\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(ShoppingCart, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleClick,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Remy Sharp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: '45px'\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorEl,\n              anchorOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              open: open,\n              onClose: handleClose,\n              children: user ? /*#__PURE__*/_jsxDEV(SignedInMenu, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 18\n              }, this) : rightLinks.map(_ref3 => {\n                let {\n                  title,\n                  path,\n                  typeIcon\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  component: NavLink,\n                  to: path,\n                  onClick: handleClose //  onClick={handleCloseNavMenu}\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: typeIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 20\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    textAlign: \"center\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 11\n                  }, this)]\n                }, path, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Header, \"KsDANJ8WXFk6PG36wu6FS7PSEw8=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/layout/Header.tsx"],"names":["AppRegistration","Login","ShoppingCart","Avatar","Badge","Box","Container","IconButton","List","ListItem","ListItemIcon","ListItemText","Menu","MenuItem","Tooltip","AppBar","Toolbar","Typography","Link","NavLink","useAppSelector","SignedInMenu","React","useState","AdbIcon","MenuIcon","midLinks","title","path","rightLinks","typeIcon","linkStyle","color","typography","Header","user","state","account","basket","itemCounts","items","reduce","sum","item","quantity","boolNavM","setBoolNavM","boolNavU","setBoolNavU","handleOpenNavMenu","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","mr","display","xs","md","fontFamily","fontWeight","letterSpacing","textDecoration","flexGrow","vertical","horizontal","map","roles","includes","toUpperCase","p","mt"],"mappings":"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","sourcesContent":["import { AppRegistration, ContentCut, Login, ShoppingCart } from '@mui/icons-material'\r\nimport { Avatar, Badge, Box, Button, Container, IconButton, List, ListItem, ListItemIcon, ListItemText, Menu, MenuItem, Tooltip } from '@mui/material'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\nimport React, { useState } from 'react'\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' ,typeIcon:<Login/>},\r\n    { title: 'register', path: '/register' ,typeIcon:<AppRegistration/>}]\r\nconst linkStyle = {\r\n    color: 'grey.300',\r\n    typography: 'h6',\r\n    '&.hover,&.active': {\r\n        color: 'inherit'\r\n    }\r\n}\r\nexport default function Header() {\r\n\r\n\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    const itemCounts=basket?.items.reduce((sum,item)=>sum+item.quantity,0);\r\n    // const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n\r\n    const [boolNavM,setBoolNavM]=useState(false);\r\n    const [boolNavU,setBoolNavU]=useState(false);\r\n\r\n    const handleOpenNavMenu = () => {\r\n\r\n      setBoolNavM(true);\r\n\r\n\r\n    };\r\n      const handleOpenUserMenu = () => {\r\n        setBoolNavU(true);\r\n      };\r\n    \r\n      const handleCloseNavMenu = () => {\r\n        setBoolNavM(false);\r\n      };\r\n    \r\n      const handleCloseUserMenu = () => {\r\n        setBoolNavU(false);\r\n      };\r\n      const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n      const open = Boolean(anchorEl);\r\n      const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n    \r\n    return (\r\n\r\n        <>\r\n        <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            // component=\"a\"\r\n             component={NavLink}\r\n                    to=\"/\"\r\n            // href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            SOUQ\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n               <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{ \r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={boolNavM}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {midLinks.map(({ title, path }) => (\r\n                <MenuItem component={NavLink} to={path} key={path}\r\n                //  onClick={handleCloseNavMenu}\r\n                >\r\n                  <Typography textAlign=\"center\">{title}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n              {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <MenuItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            INVENTORY\r\n                        </MenuItem>\r\n                    }\r\n\r\n\r\n            </Menu>\r\n          \r\n\r\n\r\n          </Box>\r\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} /> \r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            SOUQ\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n          <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={linkStyle}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n          <IconButton component={Link} to='basket' size=\"large\" sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCounts} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton \r\n              onClick={handleClick}\r\n               sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\"  />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              \r\n\r\n              {\r\n                user ?\r\n                (<SignedInMenu/>):\r\n                (\r\n              \r\n              rightLinks.map(({ title, path ,typeIcon})=> (\r\n                <MenuItem component={NavLink} to={path} key={path} onClick={handleClose}\r\n                //  onClick={handleCloseNavMenu}\r\n                >\r\n                   <ListItemIcon>\r\n           { typeIcon}\r\n          </ListItemIcon>\r\n          <ListItemText>{title}</ListItemText>\r\n          <Typography textAlign=\"center\">\r\n            \r\n          </Typography>\r\n                </MenuItem>\r\n              ))\r\n                )\r\n            \r\n            }\r\n\r\n            </Menu>\r\n\r\n          \r\n                       \r\n\r\n\r\n\r\n\r\n\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar> \r\n\r\n\r\n        \r\n        {/* <AppBar position=\"fixed\" color=\"primary\" >\r\n\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography\r\n                    fontWeight=\"bolder\"\r\n                    variant=\"h5\"\r\n                    component={NavLink}\r\n                    to=\"/\"\r\n                    sx={{ color: 'inherit', textDecoration: 'none' }}\r\n                >\r\n                    Souqq\r\n                </Typography>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={linkStyle}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to='basket' size=\"large\" sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCounts} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        user ?\r\n                        (<SignedInMenu/>):\r\n                        (\r\n\r\n                            <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={linkStyle}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        )\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                  \r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar> */}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}