{"ast":null,"code":"import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\nimport agent from '../../app/api/agent';\nimport { history } from '../..';\nimport { toast } from 'react-toastify';\nimport { setBasket } from '../basket/basketSlice';\nconst initialState = {\n  user: null\n};\nexport const SingInUser = createAsyncThunk('account/SingInUser', async (data, thunkAPI) => {\n  try {\n    const userDto = await agent.Account.login(data);\n    const {\n      basket,\n      ...user\n    } = userDto;\n    if (basket) thunkAPI.dispatch(setBasket(basket));\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n});\nexport const fetchCurrentUser = createAsyncThunk('account/fetchCurrentUser', async (_, thunkAPI) => {\n  thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user'))));\n\n  try {\n    const userDto = await agent.Account.currentUser();\n    const {\n      basket,\n      ...user\n    } = userDto;\n    if (basket) thunkAPI.dispatch(setBasket(basket));\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n}, {\n  condition: () => {\n    if (!localStorage.getItem('user')) return false;\n  }\n});\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    signOut: state => {\n      state.user = null;\n      localStorage.removeItem('user');\n      history.push('../');\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCurrentUser.rejected, state => {\n      state.user = null;\n      localStorage.removeItem('user');\n      toast.error('Session Expired ! please login again');\n      history.push('../');\n    });\n    builder.addMatcher(isAnyOf(SingInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n      let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\n      let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n      state.user = { ...action.payload,\n        roles: typeof roles === 'string' ? [roles] : roles\n      };\n    });\n    builder.addMatcher(isAnyOf(SingInUser.rejected), (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const {\n  signOut,\n  setUser\n} = accountSlice.actions;\nexport default accountSlice.reducer;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/account/accountSlice.ts"],"names":["createAsyncThunk","createSlice","isAnyOf","agent","history","toast","setBasket","initialState","user","SingInUser","data","thunkAPI","userDto","Account","login","basket","dispatch","localStorage","setItem","JSON","stringify","error","rejectWithValue","fetchCurrentUser","_","setUser","parse","getItem","currentUser","condition","accountSlice","name","reducers","signOut","state","removeItem","push","action","payload","extraReducers","builder","addCase","rejected","addMatcher","fulfilled","claims","atob","token","split","roles","console","log","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport { User } from '../../app/models/user';\r\nimport { FieldValues } from 'react-hook-form';\r\nimport agent from '../../app/api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState{\r\n    user:User | null\r\n\r\n\r\n\r\n}\r\n\r\nconst initialState :AccountState= {\r\n    user:null\r\n\r\n}\r\n\r\nexport const SingInUser=createAsyncThunk<User,FieldValues>(\r\n    'account/SingInUser',\r\n    async(data,thunkAPI)=>{\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket,...user}=userDto;\r\n            if(basket)thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n)\r\n\r\nexport const fetchCurrentUser=createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async(_,thunkAPI)=>{\r\n\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket,...user}=userDto;\r\n            if(basket)thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    },{\r\n        condition:()=>{\r\n            if(!localStorage.getItem('user'))return false;\r\n        }\r\n    }\r\n\r\n\r\n)\r\n\r\n\r\n\r\n\r\nconst accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    signOut:(state)=>{\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        history.push('../')\r\n    },\r\n    setUser:(state,action)=>{\r\n        state.user=action.payload;\r\n        \r\n    }\r\n  },\r\n  extraReducers:(builder =>{\r\n\r\n    builder.addCase(fetchCurrentUser.rejected,(state)=>{\r\n\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        toast.error('Session Expired ! please login again');\r\n        history.push('../')\r\n\r\n\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.fulfilled,fetchCurrentUser.fulfilled),\r\n    (state,action)=>{\r\n\r\n        let claims=JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        let roles=claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n        state.user={...action.payload,roles:typeof(roles)==='string'?[roles]:roles};\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.rejected),\r\n    (state,action)=>{\r\n\r\n        console.log(action.payload) ;\r\n    });\r\n\r\n    \r\n\r\n  })\r\n  \r\n});\r\n\r\nexport const {signOut,setUser} = accountSlice.actions\r\n\r\nexport default accountSlice.reducer"]},"metadata":{},"sourceType":"module"}