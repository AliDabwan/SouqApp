{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\checkout\\\\CheckoutPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(AddressForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(Review, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n\n    case 2:\n      return /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this);\n\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function CheckoutPage() {\n  _s();\n\n  const methods = useForm(); // use form hook\n\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNext = data => {\n    if (activeStep === 0) {\n      console.log(data);\n    }\n\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...methods\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckoutPage, \"QbARL1BkBouFvp49qNCW6ETJCVw=\", false, function () {\n  return [useForm];\n});\n\n_c = CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/checkout/CheckoutPage.tsx"],"names":["useState","AddressForm","PaymentForm","Review","FormProvider","useForm","steps","getStepContent","step","Error","CheckoutPage","methods","activeStep","setActiveStep","handleNext","data","console","log","handleBack"],"mappings":";;;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAsBC,YAAtB,EAAoCC,OAApC,QAAmD,iBAAnD;;AAEA,MAAMC,KAAK,GAAG,CAAC,kBAAD,EAAqB,mBAArB,EAA0C,iBAA1C,CAAd;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAAsC;AAClC,UAAQA,IAAR;AACI,SAAK,CAAL;AACI,0BAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,CAAL;AACI,0BAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,CAAL;AACI,0BAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ;AACI,YAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AARR;AAUH;;AAED,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,OAAO,GAACN,OAAO,EAArB,CADqC,CACb;;AAEtB,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMc,UAAU,GAAIC,IAAD,IAAsB;AACvC,QAAGH,UAAU,KAAG,CAAhB,EAAkB;AAChBI,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;AACCF,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GALD;;AAOA,QAAMM,UAAU,GAAG,MAAM;AACrBL,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,GAFD;;AAMA,sBAGI,QAAC,YAAD,OAAkBD;AAAlB;AAAA;AAAA;AAAA;AAAA,UAHJ;AAsDH;;GAxEuBD,Y;UACRL,O;;;KADQK,Y","sourcesContent":["\r\nimport { Paper, Typography, Stepper, Step, StepLabel, Box, Button, Container } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nfunction getStepContent(step: number) {\r\n    switch (step) {\r\n        case 0:\r\n            return <AddressForm />;\r\n        case 1: \r\n            return <Review />;\r\n        case 2:\r\n            return <PaymentForm />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\nexport default function CheckoutPage() {\r\n  const methods=useForm();// use form hook\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n\r\n    const handleNext = (data:FieldValues) => {\r\n      if(activeStep===0){\r\n        console.log(data);\r\n      }\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n   \r\n\r\n    return (\r\n\r\n      \r\n        <FormProvider {...methods} > \r\n                {/* <Container maxWidth=\"lg\"> \r\n            <Paper variant=\"outlined\" sx={{ mt: 10, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                Thank you for your order.\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Your order number is #2001539. We have emailed your order\r\n                                confirmation, and will send you an update when your order has\r\n                                shipped.\r\n                            </Typography>\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                   type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </Container> */}\r\n        </FormProvider>\r\n\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}