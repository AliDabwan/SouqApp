{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  basket: null\n};\nconst basketSlice = createSlice({\n  name: 'basket',\n  initialState,\n  reducers: {\n    setBasket: (state, action) => {\n      state.basket = action.payload;\n    },\n    removeItem: (state, action) => {\n      var _state$basket, _state$basket2;\n\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const itemIndex = (_state$basket = state.basket) === null || _state$basket === void 0 ? void 0 : _state$basket.items.findIndex(i => i.productId === productId);\n      if (itemIndex === -1 || itemIndex === undefined) return;\n      state.basket.items[itemIndex].quantity -= quantity;\n      if (((_state$basket2 = state.basket) === null || _state$basket2 === void 0 ? void 0 : _state$basket2.items[itemIndex].quantity) === 0) state.basket.items.splice(itemIndex, 1);\n    }\n  }\n});\nexport const {\n  setBasket,\n  removeItem\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/basket/basketSlice.ts"],"names":["createSlice","initialState","basket","basketSlice","name","reducers","setBasket","state","action","payload","removeItem","productId","quantity","itemIndex","items","findIndex","i","undefined","splice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAYA,MAAMC,YAAwB,GAAG;AAC7BC,EAAAA,MAAM,EAAC;AADsB,CAAjC;AAKA,MAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BH,EAAAA,YAF8B;AAG9BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACtBD,MAAAA,KAAK,CAACL,MAAN,GAAaM,MAAM,CAACC,OAApB;AACH,KAHO;AAIRC,IAAAA,UAAU,EAAC,CAACH,KAAD,EAAOC,MAAP,KAAgB;AAAA;;AACvB,YAAM;AAACG,QAAAA,SAAD;AAAWC,QAAAA;AAAX,UAAqBJ,MAAM,CAACC,OAAlC;AACA,YAAMI,SAAS,oBAACN,KAAK,CAACL,MAAP,kDAAC,cAAcY,KAAd,CAAoBC,SAApB,CAA8BC,CAAC,IAAEA,CAAC,CAACL,SAAF,KAAcA,SAA/C,CAAhB;AACA,UAAGE,SAAS,KAAG,CAAC,CAAb,IAAkBA,SAAS,KAAII,SAAlC,EAA6C;AAC7CV,MAAAA,KAAK,CAACL,MAAN,CAAcY,KAAd,CAAoBD,SAApB,EAA+BD,QAA/B,IAAyCA,QAAzC;AAEA,UAAG,mBAAAL,KAAK,CAACL,MAAN,kEAAcY,KAAd,CAAoBD,SAApB,EAA+BD,QAA/B,MAA0C,CAA7C,EACAL,KAAK,CAACL,MAAN,CAAaY,KAAb,CAAmBI,MAAnB,CAA0BL,SAA1B,EAAoC,CAApC;AAMH;AAjBO;AAHoB,CAAD,CAA/B;AAyBA,OAAO,MAAM;AAACP,EAAAA,SAAD;AAAWI,EAAAA;AAAX,IAAyBP,WAAW,CAACgB,OAA3C;AAEP,eAAehB,WAAW,CAACiB,OAA3B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { Basket } from '../../app/models/basket';\r\nimport { stat } from 'fs';\r\n//rxslice    snippit\r\n\r\n\r\n\r\n\r\nexport interface BasketState{\r\n\r\n    basket:Basket|null\r\n}\r\nconst initialState:BasketState = {\r\n    basket:null\r\n\r\n}\r\n\r\nconst basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket:(state,action)=>{\r\n        state.basket=action.payload\r\n    },\r\n    removeItem:(state,action)=>{\r\n        const {productId,quantity}=action.payload;\r\n        const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n        if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n        state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n        if(state.basket?.items[itemIndex].quantity===0)\r\n        state.basket.items.splice(itemIndex,1);\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n  }\r\n});\r\n\r\nexport const {setBasket,removeItem} = basketSlice.actions\r\n\r\nexport default basketSlice.reducer"]},"metadata":{},"sourceType":"module"}