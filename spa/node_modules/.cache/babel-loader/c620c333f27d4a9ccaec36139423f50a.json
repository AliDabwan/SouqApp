{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\checkout\\\\CheckoutPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Paper, Typography, Stepper, Step, StepLabel, Box, Button, Container } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport AddressForm from \"./AddressForm\";\nimport PaymentForm from \"./PaymentForm\";\nimport Review from \"./Review\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { validationSchema } from \"./checkoutValidation\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport agent from \"../../app/api/agent\";\nimport { clearBasket } from \"../basket/basketSlice\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\nexport default function CheckoutPage() {\n  _s();\n\n  const [activeStep, setActiveStep] = useState(0);\n  const {\n    basket\n  } = useAppSelector(state => state.basket);\n  const [orderNumber, setOrderNumber] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const [cardState, setCardState] = useState({\n    elementError: {}\n  });\n  const [cardComplete, setCardComplete] = useState({\n    cardNumber: false,\n    cardExpiry: false,\n    cardCvc: false\n  });\n\n  const onCardInputChange = event => {\n    var _event$error;\n\n    setCardState({ ...cardState,\n      elementError: { ...cardState.elementError,\n        [event.elementType]: (_event$error = event.error) === null || _event$error === void 0 ? void 0 : _event$error.message\n      }\n    });\n    setCardComplete({ ...cardComplete,\n      [event.elementType]: event.complete\n    });\n  };\n\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(AddressForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Review, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(PaymentForm, {\n          cardState: cardState,\n          onCardInputChange: onCardInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this);\n\n      default:\n        throw new Error('Unknown step');\n    }\n  };\n\n  const currentValidatoinSchema = validationSchema[activeStep];\n  const methods = useForm({\n    mode: 'all',\n    resolver: yupResolver(currentValidatoinSchema)\n  }); // use form hook\n\n  useEffect(() => {\n    agent.Account.fetchAddress().then(response => {\n      if (response) {\n        methods.reset({ ...methods.getValues(),\n          ...response,\n          saveAddress: false\n        });\n      }\n    });\n  }, [methods]);\n\n  const handleNext = async data => {\n    const {\n      nameOnCard,\n      saveAddress,\n      ...shippingAddress\n    } = data;\n\n    if (activeStep === steps.length - 1) {\n      setLoading(true);\n\n      try {\n        console.log(data);\n        const orderNumber = await agent.Orders.create({\n          saveAddress,\n          shippingAddress\n        });\n        setOrderNumber(orderNumber);\n        setActiveStep(activeStep + 1);\n        setLoading(false);\n        setTimeout(() => {\n          dispatch(clearBasket());\n        }, 3000);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  if (!basket || basket.items.length === 0) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"../\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 52\n  }, this);\n\n  const submitDisable = () => {\n    if (activeStep === steps.length - 1) {\n      return !cardComplete.cardNumber || !cardComplete.cardExpiry || !cardComplete.cardCvc || !methods.formState.isValid;\n    } else {\n      return !methods.formState.isValid;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        variant: \"outlined\",\n        sx: {\n          mt: 10,\n          p: {\n            xs: 2,\n            md: 3\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h4\",\n          align: \"center\",\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n          activeStep: activeStep,\n          sx: {\n            pt: 3,\n            pb: 5\n          },\n          children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Thank you for your order.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: [\"Your order number is #\", orderNumber, \". We have emailed your order confirmation, and will send you an update when your order has shipped.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: methods.handleSubmit(handleNext),\n            children: [getStepContent(activeStep), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'flex-end'\n              },\n              children: [activeStep !== 0 && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleBack,\n                sx: {\n                  mt: 3,\n                  ml: 1\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                loading: loading,\n                disabled: submitDisable(),\n                variant: \"contained\",\n                type: \"submit\",\n                sx: {\n                  mt: 3,\n                  ml: 1\n                },\n                children: activeStep === steps.length - 1 ? 'Place order' : 'Next'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckoutPage, \"GQg6UdjYQVaNDS/Gxkhf89isCsw=\", false, function () {\n  return [useAppSelector, useAppDispatch, useForm];\n});\n\n_c = CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/checkout/CheckoutPage.tsx"],"names":["Paper","Typography","Stepper","Step","StepLabel","Box","Button","Container","useEffect","useState","AddressForm","PaymentForm","Review","FormProvider","useForm","yupResolver","validationSchema","useAppDispatch","useAppSelector","agent","clearBasket","LoadingButton","Navigate","steps","CheckoutPage","activeStep","setActiveStep","basket","state","orderNumber","setOrderNumber","loading","setLoading","dispatch","cardState","setCardState","elementError","cardComplete","setCardComplete","cardNumber","cardExpiry","cardCvc","onCardInputChange","event","elementType","error","message","complete","getStepContent","step","Error","currentValidatoinSchema","methods","mode","resolver","Account","fetchAddress","then","response","reset","getValues","saveAddress","handleNext","data","nameOnCard","shippingAddress","length","console","log","Orders","create","setTimeout","handleBack","items","submitDisable","formState","isValid","mt","p","xs","md","pt","pb","map","label","handleSubmit","display","justifyContent","ml"],"mappings":"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","sourcesContent":["\r\nimport { Paper, Typography, Stepper, Step, StepLabel, Box, Button, Container } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm, useFormContext } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\n\r\n\r\nexport default function CheckoutPage() {\r\n  \r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch=useAppDispatch();\r\n\r\n    const [cardState,setCardState]=useState<{elementError:{[key in StripeElementType]?:string}}>({elementError:{}});\r\n  \r\n    const [cardComplete,setCardComplete]=useState<any>({cardNumber:false,cardExpiry:false,cardCvc:false});\r\n\r\n    const onCardInputChange=(event :any)=>{\r\n        setCardState({\r\n            ...cardState,\r\n            elementError:{\r\n                ...cardState.elementError,\r\n                [event.elementType]:event.error?.message\r\n            }\r\n        });\r\n        setCardComplete({...cardComplete,[event.elementType]:event.complete})\r\n    }\r\n\r\n\r\n    const getStepContent=(step: number)=> {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1: \r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange}  />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n    const currentValidatoinSchema=validationSchema[activeStep];\r\n\r\n    const methods=useForm({\r\n\r\n        mode:'all',\r\n        resolver:yupResolver<any>(currentValidatoinSchema)\r\n            });// use form hook\r\n\r\n\r\n            useEffect(() => {\r\n             \r\n                agent.Account.fetchAddress()\r\n                .then(response=>{\r\n                    if(response){\r\n                        methods.reset({...methods.getValues(),...response,saveAddress:false})\r\n                    }\r\n                })\r\n            }, [methods])\r\n            \r\n\r\n    const handleNext = async (data:FieldValues) => {\r\n\r\n        const {nameOnCard,saveAddress,...shippingAddress}=data;\r\n      if(activeStep===steps.length-1){\r\n\r\n        setLoading(true);\r\n        try {\r\n            console.log(data);\r\n\r\n            const orderNumber =await agent.Orders.create({saveAddress,shippingAddress});\r\n            setOrderNumber(orderNumber);\r\n            setActiveStep(activeStep+1);\r\n            setLoading(false);\r\n            setTimeout(() => {\r\n                dispatch(clearBasket());\r\n            }, 3000);\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n            setLoading(false);\r\n\r\n        }\r\n      }else\r\n      {\r\n        setActiveStep(activeStep + 1);\r\n\r\n\r\n      }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n        if(!basket||basket.items.length===0)return <Navigate to=\"../\" />\r\n\r\n\r\n\r\n        const submitDisable=():boolean=>{\r\n            if(activeStep===steps.length-1){\r\n                return !cardComplete.cardNumber||\r\n                !cardComplete.cardExpiry||\r\n                !cardComplete.cardCvc||\r\n                !methods.formState.isValid\r\n\r\n            }else\r\n            {\r\n                return  !methods.formState.isValid\r\n            }\r\n\r\n        }\r\n   \r\n\r\n    return (\r\n\r\n      \r\n        <FormProvider {...methods} > \r\n                <Container maxWidth=\"lg\"> \r\n            <Paper variant=\"outlined\" sx={{ mt: 10, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper> \r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                Thank you for your order.\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Your order number is #{orderNumber}. We have emailed your order\r\n                                confirmation, and will send you an update when your order has\r\n                                shipped.\r\n                            </Typography>\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                loading={loading}\r\n                                    disabled={submitDisable()}\r\n\r\n                                    variant=\"contained\"\r\n                                   type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper> \r\n        </Container>\r\n        </FormProvider>\r\n\r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}