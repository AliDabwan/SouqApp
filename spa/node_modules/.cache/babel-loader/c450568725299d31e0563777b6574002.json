{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\app\\\\components\\\\AppDropZone.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { useController } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppDropZone(props) {\n  _s();\n\n  const {\n    fieldState,\n    field\n  } = useController({ ...props,\n    defaultValue: null\n  });\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles[0] = Object.assign(acceptedFiles[0], {\n      preview: URL.createObjectURL(acceptedFiles[0])\n    });\n    field.onChange(acceptedFiles[0]);\n  }, [field]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop the files here ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppDropZone, \"8YGQrjK67dJzwEmId1yGWvAY9V0=\", false, function () {\n  return [useController, useDropzone];\n});\n\n_c = AppDropZone;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppDropZone\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/components/AppDropZone.tsx"],"names":["useCallback","useDropzone","useController","AppDropZone","props","fieldState","field","defaultValue","onDrop","acceptedFiles","Object","assign","preview","URL","createObjectURL","onChange","getRootProps","getInputProps","isDragActive"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAA6BC,aAA7B,QAAkD,iBAAlD;;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAAkC;AAAA;;AAC7C,QAAM;AAACC,IAAAA,UAAD;AAAYC,IAAAA;AAAZ,MAAmBJ,aAAa,CAAC,EAAC,GAAGE,KAAJ;AAAUG,IAAAA,YAAY,EAAC;AAAvB,GAAD,CAAtC;AAEA,QAAMC,MAAM,GAAGR,WAAW,CAACS,aAAa,IAAI;AAExCA,IAAAA,aAAa,CAAC,CAAD,CAAb,GAAiBC,MAAM,CAACC,MAAP,CAAcF,aAAa,CAAC,CAAD,CAA3B,EAA+B;AAACG,MAAAA,OAAO,EAACC,GAAG,CAACC,eAAJ,CAAoBL,aAAa,CAAC,CAAD,CAAjC;AAAT,KAA/B,CAAjB;AACAH,IAAAA,KAAK,CAACS,QAAN,CAAeN,aAAa,CAAC,CAAD,CAA5B;AAIH,GAPyB,EAOvB,CAACH,KAAD,CAPuB,CAA1B;AAQE,QAAM;AAACU,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CjB,WAAW,CAAC;AAACO,IAAAA;AAAD,GAAD,CAA/D;AAEA,sBACE,oBAASQ,YAAY,EAArB;AAAA,4BACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAGIC,YAAY,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUL;;GAvBuBf,W;UACKD,a,EAU6BD,W;;;KAXlCE,W","sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\"\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n   \r\n}\r\nexport default function AppDropZone(props:Props) {\r\n    const {fieldState,field}=useController({...props,defaultValue:null})\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        acceptedFiles[0]=Object.assign(acceptedFiles[0],{preview:URL.createObjectURL(acceptedFiles[0])});\r\n        field.onChange(acceptedFiles[0]);\r\n\r\n\r\n\r\n    }, [field])\r\n      const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n    \r\n      return (\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          {\r\n            isDragActive ?\r\n              <p>Drop the files here ...</p> :\r\n              <p>Drag 'n' drop some files here, or click to select files</p>\r\n          }\r\n        </div>\r\n      )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}