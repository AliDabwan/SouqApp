{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useListbox, { defaultListboxReducer, ActionTypes } from '../useListbox';\nimport useMenuChangeNotifiers from '../MenuUnstyled/useMenuChangeNotifiers';\n\nfunction stateReducer(state, action) {\n  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {\n    return state;\n  }\n\n  const newState = defaultListboxReducer(state, action);\n\n  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.props.options[0]\n    });\n  }\n\n  return newState;\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base/react-menu/hooks-api/#use-menu)\n */\n\n\nexport default function useMenu() {\n  let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    listboxRef: listboxRefProp,\n    open = false,\n    onClose,\n    listboxId\n  } = parameters;\n  const [menuItems, setMenuItems] = React.useState({});\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const registerItem = React.useCallback((id, metadata) => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n\n      newState[id] = metadata;\n      return newState;\n    });\n  }, []);\n  const unregisterItem = React.useCallback(id => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n\n      delete newState[id];\n      return newState;\n    });\n  }, []);\n  const {\n    notifyHighlightChanged,\n    registerHighlightChangeHandler\n  } = useMenuChangeNotifiers();\n  const {\n    getOptionState,\n    getOptionProps,\n    getRootProps,\n    highlightedOption,\n    setHighlightedValue: setListboxHighlight\n  } = useListbox({\n    options: Object.keys(menuItems),\n    optionStringifier: id => {\n      var _menuItems$id$ref$cur;\n\n      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);\n    },\n    isOptionDisabled: id => {\n      var _menuItems$id;\n\n      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;\n    },\n    listboxRef: handleRef,\n    focusManagement: 'DOM',\n    id: listboxId,\n    stateReducer,\n    selectionLimit: 0,\n    disabledItemsFocusable: true\n  });\n  React.useEffect(() => {\n    notifyHighlightChanged(highlightedOption);\n  }, [highlightedOption, notifyHighlightChanged]);\n  const highlightFirstItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  const highlightLastItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  React.useEffect(() => {\n    if (!open) {\n      highlightFirstItem();\n    }\n  }, [open, highlightFirstItem]);\n\n  const createHandleKeyDown = otherHandlers => e => {\n    var _otherHandlers$onKeyD;\n\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);\n\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (e.key === 'Escape' && open) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n\n  const createHandleBlur = otherHandlers => e => {\n    var _otherHandlers$onBlur, _listboxRef$current;\n\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, e);\n\n    if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n\n  React.useEffect(() => {\n    var _listboxRef$current2; // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n\n\n    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {\n      var _menuItems$highlighte, _menuItems$highlighte2;\n\n      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();\n    }\n  }, [highlightedOption, menuItems]);\n\n  const getListboxProps = function () {\n    let otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const rootProps = getRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    }));\n    return _extends({}, otherHandlers, rootProps, {\n      role: 'menu'\n    });\n  };\n\n  const getItemState = React.useCallback(id => {\n    const {\n      disabled,\n      highlighted\n    } = getOptionState(id);\n    return {\n      disabled,\n      highlighted\n    };\n  }, [getOptionState]);\n  React.useDebugValue({\n    menuItems,\n    highlightedOption\n  });\n  const contextValue = React.useMemo(() => ({\n    getItemProps: getOptionProps,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerItem,\n    unregisterItem,\n    open\n  }), [getOptionProps, getItemState, registerHighlightChangeHandler, registerItem, unregisterItem, open]);\n  return {\n    contextValue,\n    getListboxProps,\n    highlightedOption,\n    highlightFirstItem,\n    highlightLastItem,\n    menuItems\n  };\n}","map":{"version":3,"sources":["D:/Ali/react/SouqApp/spa/node_modules/@mui/lab/node_modules/@mui/base/useMenu/useMenu.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","useListbox","defaultListboxReducer","ActionTypes","useMenuChangeNotifiers","stateReducer","state","action","type","blur","optionHover","setValue","newState","setHighlight","highlightedValue","props","options","length","useMenu","parameters","listboxRef","listboxRefProp","open","onClose","listboxId","menuItems","setMenuItems","useState","useRef","handleRef","registerItem","useCallback","id","metadata","previousState","unregisterItem","notifyHighlightChanged","registerHighlightChangeHandler","getOptionState","getOptionProps","getRootProps","highlightedOption","setHighlightedValue","setListboxHighlight","Object","keys","optionStringifier","_menuItems$id$ref$cur","label","ref","current","innerText","isOptionDisabled","_menuItems$id","disabled","focusManagement","selectionLimit","disabledItemsFocusable","useEffect","highlightFirstItem","highlightLastItem","createHandleKeyDown","otherHandlers","e","_otherHandlers$onKeyD","onKeyDown","call","defaultPrevented","key","createHandleBlur","_otherHandlers$onBlur","_listboxRef$current","onBlur","contains","relatedTarget","_listboxRef$current2","document","activeElement","_menuItems$highlighte","_menuItems$highlighte2","focus","getListboxProps","rootProps","role","getItemState","highlighted","useDebugValue","contextValue","useMemo","getItemProps"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAmB,IAAIC,UAAhC,QAAkD,YAAlD;AACA,OAAOC,UAAP,IAAqBC,qBAArB,EAA4CC,WAA5C,QAA+D,eAA/D;AACA,OAAOC,sBAAP,MAAmC,wCAAnC;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgBL,WAAW,CAACM,IAA5B,IAAoCF,MAAM,CAACC,IAAP,KAAgBL,WAAW,CAACO,WAAhE,IAA+EH,MAAM,CAACC,IAAP,KAAgBL,WAAW,CAACQ,QAA/G,EAAyH;AACvH,WAAOL,KAAP;AACD;;AACD,QAAMM,QAAQ,GAAGV,qBAAqB,CAACI,KAAD,EAAQC,MAAR,CAAtC;;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBL,WAAW,CAACU,YAA5B,IAA4CD,QAAQ,CAACE,gBAAT,KAA8B,IAA1E,IAAkFP,MAAM,CAACQ,KAAP,CAAaC,OAAb,CAAqBC,MAArB,GAA8B,CAApH,EAAuH;AACrH,WAAOpB,QAAQ,CAAC,EAAD,EAAKe,QAAL,EAAe;AAC5BE,MAAAA,gBAAgB,EAAEP,MAAM,CAACQ,KAAP,CAAaC,OAAb,CAAqB,CAArB;AADU,KAAf,CAAf;AAGD;;AACD,SAAOJ,QAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASM,OAAT,GAAkC;AAAA,MAAjBC,UAAiB,uEAAJ,EAAI;AAC/C,QAAM;AACJC,IAAAA,UAAU,EAAEC,cADR;AAEJC,IAAAA,IAAI,GAAG,KAFH;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKFL,UALJ;AAMA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4B5B,KAAK,CAAC6B,QAAN,CAAe,EAAf,CAAlC;AACA,QAAMP,UAAU,GAAGtB,KAAK,CAAC8B,MAAN,CAAa,IAAb,CAAnB;AACA,QAAMC,SAAS,GAAG7B,UAAU,CAACoB,UAAD,EAAaC,cAAb,CAA5B;AACA,QAAMS,YAAY,GAAGhC,KAAK,CAACiC,WAAN,CAAkB,CAACC,EAAD,EAAKC,QAAL,KAAkB;AACvDP,IAAAA,YAAY,CAACQ,aAAa,IAAI;AAC5B,YAAMtB,QAAQ,GAAGf,QAAQ,CAAC,EAAD,EAAKqC,aAAL,CAAzB;;AACAtB,MAAAA,QAAQ,CAACoB,EAAD,CAAR,GAAeC,QAAf;AACA,aAAOrB,QAAP;AACD,KAJW,CAAZ;AAKD,GANoB,EAMlB,EANkB,CAArB;AAOA,QAAMuB,cAAc,GAAGrC,KAAK,CAACiC,WAAN,CAAkBC,EAAE,IAAI;AAC7CN,IAAAA,YAAY,CAACQ,aAAa,IAAI;AAC5B,YAAMtB,QAAQ,GAAGf,QAAQ,CAAC,EAAD,EAAKqC,aAAL,CAAzB;;AACA,aAAOtB,QAAQ,CAACoB,EAAD,CAAf;AACA,aAAOpB,QAAP;AACD,KAJW,CAAZ;AAKD,GANsB,EAMpB,EANoB,CAAvB;AAOA,QAAM;AACJwB,IAAAA,sBADI;AAEJC,IAAAA;AAFI,MAGFjC,sBAAsB,EAH1B;AAIA,QAAM;AACJkC,IAAAA,cADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,iBAJI;AAKJC,IAAAA,mBAAmB,EAAEC;AALjB,MAMF1C,UAAU,CAAC;AACbe,IAAAA,OAAO,EAAE4B,MAAM,CAACC,IAAP,CAAYpB,SAAZ,CADI;AAEbqB,IAAAA,iBAAiB,EAAEd,EAAE,IAAI;AACvB,UAAIe,qBAAJ;;AACA,aAAOtB,SAAS,CAACO,EAAD,CAAT,CAAcgB,KAAd,KAAwB,CAACD,qBAAqB,GAAGtB,SAAS,CAACO,EAAD,CAAT,CAAciB,GAAd,CAAkBC,OAA3C,KAAuD,IAAvD,GAA8D,KAAK,CAAnE,GAAuEH,qBAAqB,CAACI,SAArH,CAAP;AACD,KALY;AAMbC,IAAAA,gBAAgB,EAAEpB,EAAE,IAAI;AACtB,UAAIqB,aAAJ;;AACA,aAAO,CAAC5B,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6B,CAAC4B,aAAa,GAAG5B,SAAS,CAACO,EAAD,CAA1B,KAAmC,IAAnC,GAA0C,KAAK,CAA/C,GAAmDqB,aAAa,CAACC,QAA/F,KAA4G,KAAnH;AACD,KATY;AAUblC,IAAAA,UAAU,EAAES,SAVC;AAWb0B,IAAAA,eAAe,EAAE,KAXJ;AAYbvB,IAAAA,EAAE,EAAER,SAZS;AAabnB,IAAAA,YAba;AAcbmD,IAAAA,cAAc,EAAE,CAdH;AAebC,IAAAA,sBAAsB,EAAE;AAfX,GAAD,CANd;AAuBA3D,EAAAA,KAAK,CAAC4D,SAAN,CAAgB,MAAM;AACpBtB,IAAAA,sBAAsB,CAACK,iBAAD,CAAtB;AACD,GAFD,EAEG,CAACA,iBAAD,EAAoBL,sBAApB,CAFH;AAGA,QAAMuB,kBAAkB,GAAG7D,KAAK,CAACiC,WAAN,CAAkB,MAAM;AACjD,QAAIa,MAAM,CAACC,IAAP,CAAYpB,SAAZ,EAAuBR,MAAvB,GAAgC,CAApC,EAAuC;AACrC0B,MAAAA,mBAAmB,CAAClB,SAAS,CAACmB,MAAM,CAACC,IAAP,CAAYpB,SAAZ,EAAuB,CAAvB,CAAD,CAAT,CAAqCO,EAAtC,CAAnB;AACD;AACF,GAJ0B,EAIxB,CAACP,SAAD,EAAYkB,mBAAZ,CAJwB,CAA3B;AAKA,QAAMiB,iBAAiB,GAAG9D,KAAK,CAACiC,WAAN,CAAkB,MAAM;AAChD,QAAIa,MAAM,CAACC,IAAP,CAAYpB,SAAZ,EAAuBR,MAAvB,GAAgC,CAApC,EAAuC;AACrC0B,MAAAA,mBAAmB,CAAClB,SAAS,CAACmB,MAAM,CAACC,IAAP,CAAYpB,SAAZ,EAAuBmB,MAAM,CAACC,IAAP,CAAYpB,SAAZ,EAAuBR,MAAvB,GAAgC,CAAvD,CAAD,CAAT,CAAqEe,EAAtE,CAAnB;AACD;AACF,GAJyB,EAIvB,CAACP,SAAD,EAAYkB,mBAAZ,CAJuB,CAA1B;AAKA7C,EAAAA,KAAK,CAAC4D,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACpC,IAAL,EAAW;AACTqC,MAAAA,kBAAkB;AACnB;AACF,GAJD,EAIG,CAACrC,IAAD,EAAOqC,kBAAP,CAJH;;AAKA,QAAME,mBAAmB,GAAGC,aAAa,IAAIC,CAAC,IAAI;AAChD,QAAIC,qBAAJ;;AACA,KAACA,qBAAqB,GAAGF,aAAa,CAACG,SAAvC,KAAqD,IAArD,GAA4D,KAAK,CAAjE,GAAqED,qBAAqB,CAACE,IAAtB,CAA2BJ,aAA3B,EAA0CC,CAA1C,CAArE;;AACA,QAAIA,CAAC,CAACI,gBAAN,EAAwB;AACtB;AACD;;AACD,QAAIJ,CAAC,CAACK,GAAF,KAAU,QAAV,IAAsB9C,IAA1B,EAAgC;AAC9BC,MAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,EAAlC;AACD;AACF,GATD;;AAUA,QAAM8C,gBAAgB,GAAGP,aAAa,IAAIC,CAAC,IAAI;AAC7C,QAAIO,qBAAJ,EAA2BC,mBAA3B;;AACA,KAACD,qBAAqB,GAAGR,aAAa,CAACU,MAAvC,KAAkD,IAAlD,GAAyD,KAAK,CAA9D,GAAkEF,qBAAqB,CAACJ,IAAtB,CAA2BJ,aAA3B,EAA0CC,CAA1C,CAAlE;;AACA,QAAI,EAAE,CAACQ,mBAAmB,GAAGnD,UAAU,CAAC8B,OAAlC,KAA8C,IAA9C,IAAsDqB,mBAAmB,CAACE,QAApB,CAA6BV,CAAC,CAACW,aAA/B,CAAxD,CAAJ,EAA4G;AAC1GnD,MAAAA,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,EAAlC;AACD;AACF,GAND;;AAOAzB,EAAAA,KAAK,CAAC4D,SAAN,CAAgB,MAAM;AACpB,QAAIiB,oBAAJ,CADoB,CAEpB;;;AACA,QAAI,CAACA,oBAAoB,GAAGvD,UAAU,CAAC8B,OAAnC,KAA+C,IAA/C,IAAuDyB,oBAAoB,CAACF,QAArB,CAA8BG,QAAQ,CAACC,aAAvC,CAAvD,IAAgHpC,iBAAiB,KAAK,IAA1I,EAAgJ;AAC9I,UAAIqC,qBAAJ,EAA2BC,sBAA3B;;AACAtD,MAAAA,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6B,CAACqD,qBAAqB,GAAGrD,SAAS,CAACgB,iBAAD,CAAlC,KAA0D,IAA1D,GAAiE,KAAK,CAAtE,GAA0E,CAACsC,sBAAsB,GAAGD,qBAAqB,CAAC7B,GAAtB,CAA0BC,OAApD,KAAgE,IAAhE,GAAuE,KAAK,CAA5E,GAAgF6B,sBAAsB,CAACC,KAAvB,EAAvL;AACD;AACF,GAPD,EAOG,CAACvC,iBAAD,EAAoBhB,SAApB,CAPH;;AAQA,QAAMwD,eAAe,GAAG,YAAwB;AAAA,QAAvBnB,aAAuB,uEAAP,EAAO;AAC9C,UAAMoB,SAAS,GAAG1C,YAAY,CAAC3C,QAAQ,CAAC,EAAD,EAAKiE,aAAL,EAAoB;AACzDU,MAAAA,MAAM,EAAEH,gBAAgB,CAACP,aAAD,CADiC;AAEzDG,MAAAA,SAAS,EAAEJ,mBAAmB,CAACC,aAAD;AAF2B,KAApB,CAAT,CAA9B;AAIA,WAAOjE,QAAQ,CAAC,EAAD,EAAKiE,aAAL,EAAoBoB,SAApB,EAA+B;AAC5CC,MAAAA,IAAI,EAAE;AADsC,KAA/B,CAAf;AAGD,GARD;;AASA,QAAMC,YAAY,GAAGtF,KAAK,CAACiC,WAAN,CAAkBC,EAAE,IAAI;AAC3C,UAAM;AACJsB,MAAAA,QADI;AAEJ+B,MAAAA;AAFI,QAGF/C,cAAc,CAACN,EAAD,CAHlB;AAIA,WAAO;AACLsB,MAAAA,QADK;AAEL+B,MAAAA;AAFK,KAAP;AAID,GAToB,EASlB,CAAC/C,cAAD,CATkB,CAArB;AAUAxC,EAAAA,KAAK,CAACwF,aAAN,CAAoB;AAClB7D,IAAAA,SADkB;AAElBgB,IAAAA;AAFkB,GAApB;AAIA,QAAM8C,YAAY,GAAGzF,KAAK,CAAC0F,OAAN,CAAc,OAAO;AACxCC,IAAAA,YAAY,EAAElD,cAD0B;AAExC6C,IAAAA,YAFwC;AAGxC/C,IAAAA,8BAHwC;AAIxCP,IAAAA,YAJwC;AAKxCK,IAAAA,cALwC;AAMxCb,IAAAA;AANwC,GAAP,CAAd,EAOjB,CAACiB,cAAD,EAAiB6C,YAAjB,EAA+B/C,8BAA/B,EAA+DP,YAA/D,EAA6EK,cAA7E,EAA6Fb,IAA7F,CAPiB,CAArB;AAQA,SAAO;AACLiE,IAAAA,YADK;AAELN,IAAAA,eAFK;AAGLxC,IAAAA,iBAHK;AAILkB,IAAAA,kBAJK;AAKLC,IAAAA,iBALK;AAMLnC,IAAAA;AANK,GAAP;AAQD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport useListbox, { defaultListboxReducer, ActionTypes } from '../useListbox';\nimport useMenuChangeNotifiers from '../MenuUnstyled/useMenuChangeNotifiers';\nfunction stateReducer(state, action) {\n  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {\n    return state;\n  }\n  const newState = defaultListboxReducer(state, action);\n  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.props.options[0]\n    });\n  }\n  return newState;\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/#hooks)\n *\n * API:\n *\n * - [useMenu API](https://mui.com/base/react-menu/hooks-api/#use-menu)\n */\nexport default function useMenu(parameters = {}) {\n  const {\n    listboxRef: listboxRefProp,\n    open = false,\n    onClose,\n    listboxId\n  } = parameters;\n  const [menuItems, setMenuItems] = React.useState({});\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(listboxRef, listboxRefProp);\n  const registerItem = React.useCallback((id, metadata) => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n      newState[id] = metadata;\n      return newState;\n    });\n  }, []);\n  const unregisterItem = React.useCallback(id => {\n    setMenuItems(previousState => {\n      const newState = _extends({}, previousState);\n      delete newState[id];\n      return newState;\n    });\n  }, []);\n  const {\n    notifyHighlightChanged,\n    registerHighlightChangeHandler\n  } = useMenuChangeNotifiers();\n  const {\n    getOptionState,\n    getOptionProps,\n    getRootProps,\n    highlightedOption,\n    setHighlightedValue: setListboxHighlight\n  } = useListbox({\n    options: Object.keys(menuItems),\n    optionStringifier: id => {\n      var _menuItems$id$ref$cur;\n      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);\n    },\n    isOptionDisabled: id => {\n      var _menuItems$id;\n      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;\n    },\n    listboxRef: handleRef,\n    focusManagement: 'DOM',\n    id: listboxId,\n    stateReducer,\n    selectionLimit: 0,\n    disabledItemsFocusable: true\n  });\n  React.useEffect(() => {\n    notifyHighlightChanged(highlightedOption);\n  }, [highlightedOption, notifyHighlightChanged]);\n  const highlightFirstItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  const highlightLastItem = React.useCallback(() => {\n    if (Object.keys(menuItems).length > 0) {\n      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);\n    }\n  }, [menuItems, setListboxHighlight]);\n  React.useEffect(() => {\n    if (!open) {\n      highlightFirstItem();\n    }\n  }, [open, highlightFirstItem]);\n  const createHandleKeyDown = otherHandlers => e => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (e.key === 'Escape' && open) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n  const createHandleBlur = otherHandlers => e => {\n    var _otherHandlers$onBlur, _listboxRef$current;\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, e);\n    if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {\n      onClose == null ? void 0 : onClose();\n    }\n  };\n  React.useEffect(() => {\n    var _listboxRef$current2;\n    // set focus to the highlighted item (but prevent stealing focus from other elements on the page)\n    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {\n      var _menuItems$highlighte, _menuItems$highlighte2;\n      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();\n    }\n  }, [highlightedOption, menuItems]);\n  const getListboxProps = (otherHandlers = {}) => {\n    const rootProps = getRootProps(_extends({}, otherHandlers, {\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers)\n    }));\n    return _extends({}, otherHandlers, rootProps, {\n      role: 'menu'\n    });\n  };\n  const getItemState = React.useCallback(id => {\n    const {\n      disabled,\n      highlighted\n    } = getOptionState(id);\n    return {\n      disabled,\n      highlighted\n    };\n  }, [getOptionState]);\n  React.useDebugValue({\n    menuItems,\n    highlightedOption\n  });\n  const contextValue = React.useMemo(() => ({\n    getItemProps: getOptionProps,\n    getItemState,\n    registerHighlightChangeHandler,\n    registerItem,\n    unregisterItem,\n    open\n  }), [getOptionProps, getItemState, registerHighlightChangeHandler, registerItem, unregisterItem, open]);\n  return {\n    contextValue,\n    getListboxProps,\n    highlightedOption,\n    highlightFirstItem,\n    highlightLastItem,\n    menuItems\n  };\n}"]},"metadata":{},"sourceType":"module"}