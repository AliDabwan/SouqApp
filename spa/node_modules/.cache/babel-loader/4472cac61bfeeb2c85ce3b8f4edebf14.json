{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\checkout\\\\InputBaseComponentProps.tsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useRef, useImperativeHandle } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StripeInput = /*#__PURE__*/forwardRef(_c = _s(function StripeInput(_ref, ref) {\n  _s();\n\n  let {\n    component: Component,\n    ...props\n  } = _ref;\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    focus: () => elementRef.current.focus\n  }));\n  return /*#__PURE__*/_jsxDEV(Component, {\n    onReady: element => elementRef.current = element,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}, \"Beo0+aZ8hKq6/qHkVlUlM0TgBAc=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = StripeInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StripeInput$forwardRef\");\n$RefreshReg$(_c2, \"StripeInput\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/checkout/InputBaseComponentProps.tsx"],"names":["forwardRef","useRef","useImperativeHandle","StripeInput","ref","component","Component","props","elementRef","focus","current","element"],"mappings":";;;AACA,SAASA,UAAT,EAA0BC,MAA1B,EAAkCC,mBAAlC,QAA6D,OAA7D;;AAIA,OAAO,MAAMC,WAAW,gBAAGH,UAAU,SAAC,SAASG,WAAT,OAClCC,GADkC,EACf;AAAA;;AAAA,MADoC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GACpC;AACnB,QAAMC,UAAU,GAAGP,MAAM,EAAzB;AAEAC,EAAAA,mBAAmB,CAACE,GAAD,EAAM,OAAO;AAC5BK,IAAAA,KAAK,EAAE,MAAMD,UAAU,CAACE,OAAX,CAAmBD;AADJ,GAAP,CAAN,CAAnB;AAIA,sBACI,QAAC,SAAD;AACI,IAAA,OAAO,EAAGE,OAAD,IAAkBH,UAAU,CAACE,OAAX,GAAqBC,OADpD;AAAA,OAEQJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAdoC;AAAA,UAIjCL,mBAJiC;AAAA,GAA9B;MAAMC,W","sourcesContent":["import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useRef, useImperativeHandle } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props,\r\n    ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n});"]},"metadata":{},"sourceType":"module"}