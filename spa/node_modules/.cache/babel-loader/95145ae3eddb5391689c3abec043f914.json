{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\app\\\\layout\\\\Header.tsx\",\n    _s = $RefreshSig$();\n\nimport { ShoppingCart } from '@mui/icons-material';\nimport { Badge, Box, IconButton, List, ListItem } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useAppSelector } from '../store/configureStore';\nimport SignedInMenu from './SignedInMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst midLinks = [{\n  title: 'catalog',\n  path: '/catalog'\n}, {\n  title: 'about',\n  path: '/about'\n}, {\n  title: 'contact',\n  path: '/contact'\n}];\nconst rightLinks = [{\n  title: 'login',\n  path: '/login'\n}, {\n  title: 'register',\n  path: '/register'\n}];\nconst linkStyle = {\n  color: 'grey.300',\n  typography: 'h6',\n  '&.hover,&.active': {\n    color: 'inherit'\n  }\n};\nexport default function Header() {\n  _s();\n\n  var _user$roles;\n\n  const {\n    user\n  } = useAppSelector(state => state.account); // const {basket}=useSouqContext();\n\n  const {\n    basket\n  } = useAppSelector(state => state.basket);\n  const itemCounts = basket === null || basket === void 0 ? void 0 : basket.items.reduce((sum, item) => sum + item.quantity, 0);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          fontWeight: \"bolder\",\n          variant: \"h5\",\n          component: NavLink,\n          to: \"/\",\n          sx: {\n            color: 'inherit',\n            textDecoration: 'none'\n          },\n          children: \"Souqq\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            display: 'flex'\n          },\n          children: [midLinks.map(_ref => {\n            let {\n              title,\n              path\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              component: NavLink,\n              to: path,\n              sx: linkStyle,\n              children: title.toUpperCase()\n            }, path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 25\n            }, this);\n          }), user && ((_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.includes('Admin')) && /*#__PURE__*/_jsxDEV(ListItem, {\n            component: NavLink,\n            to: '../inventory',\n            sx: linkStyle,\n            children: \"INVENTORY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            component: Link,\n            to: \"basket\",\n            size: \"large\",\n            sx: {\n              color: 'inherit'\n            },\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              badgeContent: itemCounts,\n              color: \"secondary\",\n              children: /*#__PURE__*/_jsxDEV(ShoppingCart, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this), user ? /*#__PURE__*/_jsxDEV(SignedInMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              display: 'flex'\n            },\n            children: rightLinks.map(_ref2 => {\n              let {\n                title,\n                path\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                component: NavLink,\n                to: path,\n                sx: linkStyle,\n                children: title.toUpperCase()\n              }, path, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Header, \"vA53UDxaJFNOV6wVf8vKIipt3rk=\", false, function () {\n  return [useAppSelector, useAppSelector];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/app/layout/Header.tsx"],"names":["ShoppingCart","Badge","Box","IconButton","List","ListItem","AppBar","Toolbar","Typography","Link","NavLink","useAppSelector","SignedInMenu","midLinks","title","path","rightLinks","linkStyle","color","typography","Header","user","state","account","basket","itemCounts","items","reduce","sum","item","quantity","handleOpenNavMenu","event","setAnchorElNav","currentTarget","handleOpenUserMenu","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","display","justifyContent","alignItems","textDecoration","map","toUpperCase","roles","includes"],"mappings":"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","sourcesContent":["import { ShoppingCart } from '@mui/icons-material'\r\nimport { Avatar, Badge, Box, Button, Container, IconButton, List, ListItem, Menu, MenuItem, Tooltip } from '@mui/material'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\nimport { settings } from 'cluster'\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }]\r\nconst linkStyle = {\r\n    color: 'grey.300',\r\n    typography: 'h6',\r\n    '&.hover,&.active': {\r\n        color: 'inherit'\r\n    }\r\n}\r\nexport default function Header() {\r\n\r\n\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    const itemCounts=basket?.items.reduce((sum,item)=>sum+item.quantity,0);\r\n\r\n    const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElNav(event.currentTarget);\r\n      };\r\n      const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorElUser(event.currentTarget);\r\n      };\r\n    \r\n      const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n      };\r\n    \r\n      const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n      };\r\n    \r\n    return (\r\n\r\n        <>\r\n       {/* <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar> */}\r\n\r\n\r\n        \r\n        <AppBar position=\"fixed\" color=\"primary\" >\r\n\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography\r\n                    fontWeight=\"bolder\"\r\n                    variant=\"h5\"\r\n                    component={NavLink}\r\n                    to=\"/\"\r\n                    sx={{ color: 'inherit', textDecoration: 'none' }}\r\n                >\r\n                    Souqq\r\n                </Typography>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={linkStyle}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to='basket' size=\"large\" sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCounts} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        user ?\r\n                        (<SignedInMenu/>):\r\n                        (\r\n\r\n                            <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={linkStyle}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        )\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                  \r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}