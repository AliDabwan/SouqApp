{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learn\\\\react\\\\SouqApp\\\\spa\\\\src\\\\features\\\\catalog\\\\Catalog.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport Loader from \"../../app/layout/Loader\";\nimport ProductList from \"./ProductList\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\";\nimport { Grid, Paper } from \"@mui/material\";\nimport ProductSearch from \"./ProductSearch\";\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\";\nimport CheckBoxButton from \"../../app/components/CheckBoxButton\";\nimport AppPagination from \"../../app/components/AppPagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortOption = [{\n  value: 'name',\n  label: 'Alphabetical'\n}, {\n  value: 'lowprice',\n  label: 'Price- Low To High'\n}, {\n  value: 'highprice',\n  label: 'Price- High To Low'\n}];\nexport default function Catalog() {\n  _s();\n\n  // const [products, setProducts] = useState<Product[]>([])// context\n  const products = useAppSelector(productSelectors.selectAll);\n  const dispatch = useAppDispatch();\n  const {\n    status,\n    productsLoaded,\n    filtersLoaded,\n    brands,\n    types,\n    productParams,\n    paginationData\n  } = useAppSelector(state => state.catalog);\n  useEffect(() => {\n    // agent.Catalog.list()\n    //     .then(products => setProducts(products))\n    //     .catch(error => console.log(error))\n    //     .finally(() => setLoading(false))\n    if (!productsLoaded) {\n      dispatch(fetchProductsAsync());\n    }\n  }, [productsLoaded, dispatch]);\n  useEffect(() => {\n    if (!filtersLoaded) {\n      dispatch(fetchfiltersAsync());\n    }\n  }, [filtersLoaded, dispatch]); // if (status.includes('pending')||!paginationData)\n\n  if (!filtersLoaded) return /*#__PURE__*/_jsxDEV(Loader, {\n    message: \"Loading Products...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      sx: {\n        mt: 3\n      },\n      item: true,\n      xs: 6,\n      sm: 2.2,\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(ProductSearch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(RadioButtonGroup, {\n          selectedValue: productParams.orderBy,\n          options: sortOption,\n          onChange: e => dispatch(setProductParams({\n            orderBy: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckBoxButton, {\n          items: types,\n          checked: productParams.types,\n          onChange: items => dispatch(setProductParams({\n            types: items\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 2,\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckBoxButton, {\n          items: brands,\n          checked: productParams.brands,\n          onChange: items => dispatch(setProductParams({\n            brands: items\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      sx: {\n        mt: 3\n      },\n      item: true,\n      xs: 6,\n      sm: 9.8,\n      children: /*#__PURE__*/_jsxDEV(ProductList, {\n        products: products\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 2.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 9.8,\n      children: paginationData && /*#__PURE__*/_jsxDEV(AppPagination, {\n        paginationData: paginationData,\n        onPageChange: page => dispatch(setPageNumber({\n          pageNumber: page\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Catalog, \"z69MZT34CMjUA6NbejruiXRTfVA=\", false, function () {\n  return [useAppSelector, useAppDispatch, useAppSelector];\n});\n\n_c = Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/src/features/catalog/Catalog.tsx"],"names":["useEffect","Loader","ProductList","useAppDispatch","useAppSelector","fetchProductsAsync","fetchfiltersAsync","productSelectors","setPageNumber","setProductParams","Grid","Paper","ProductSearch","RadioButtonGroup","CheckBoxButton","AppPagination","sortOption","value","label","Catalog","products","selectAll","dispatch","status","productsLoaded","filtersLoaded","brands","types","productParams","paginationData","state","catalog","mt","mb","p","orderBy","e","target","items","page","pageNumber"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\"\r\nimport Loader from \"../../app/layout/Loader\"\r\nimport ProductList from \"./ProductList\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors, setPageNumber, setProductParams } from \"./catalogSlice\"\r\nimport { Grid, Paper } from \"@mui/material\"\r\nimport ProductSearch from \"./ProductSearch\"\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\"\r\nimport CheckBoxButton from \"../../app/components/CheckBoxButton\"\r\nimport AppPagination from \"../../app/components/AppPagination\"\r\n\r\nconst sortOption =[\r\n   { value:'name', label:'Alphabetical'},\r\n   { value:'lowprice', label:'Price- Low To High'},\r\n   { value:'highprice', label:'Price- High To Low'},\r\n\r\n\r\n]\r\nexport default function Catalog() {\r\n    // const [products, setProducts] = useState<Product[]>([])// context\r\n    const products=useAppSelector(productSelectors.selectAll);\r\n    const dispatch=useAppDispatch();\r\n    const {status,productsLoaded,filtersLoaded,brands,types,productParams,paginationData}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // agent.Catalog.list()\r\n        //     .then(products => setProducts(products))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n\r\n        if (!productsLoaded) {\r\n            dispatch(fetchProductsAsync())\r\n            \r\n        }\r\n\r\n\r\n    }\r\n        , [productsLoaded,dispatch])\r\n\r\n        useEffect(() => {\r\n\r\n           \r\n            if (!filtersLoaded) {\r\n                dispatch(fetchfiltersAsync())\r\n                \r\n            }\r\n    \r\n    \r\n        }\r\n            , [filtersLoaded,dispatch])\r\n    // if (status.includes('pending')||!paginationData)\r\n    if(!filtersLoaded)\r\n     return <Loader message='Loading Products...' />\r\n    return (\r\n        <Grid  container spacing={2}>\r\n            <Grid sx={{mt:3}} item xs={6} sm={2.2} >\r\n                <Paper sx={{mb:2}}>\r\n                  <ProductSearch/>\r\n\r\n\r\n                </Paper>\r\n                <Paper sx={{mb:2,p:2}}>\r\n               <RadioButtonGroup \r\n               selectedValue={productParams.orderBy}\r\n               options={sortOption}\r\n               onChange={(e)=>dispatch(setProductParams({orderBy:e.target.value}))}\r\n               />\r\n\r\n                </Paper> \r\n                <Paper sx={{mb:2,p:2}}>\r\n\r\n                    <CheckBoxButton \r\n                    items={types}\r\n                    checked={productParams.types}\r\n                    onChange={(items:string[])=>dispatch(setProductParams({types:items}))}\r\n                    />\r\n              \r\n\r\n                </Paper>\r\n\r\n                <Paper sx={{mb:2,p:2}}>\r\n                        {/* <FormGroup>\r\n                {\r\n                                types.map(type=>(\r\n                                    <FormControlLabel key={type} label={type} control={<Checkbox/>} />\r\n\r\n                                ))\r\n\r\n                                }\r\n                        </FormGroup> */}\r\n                        <CheckBoxButton \r\n                    items={brands}\r\n                    checked={productParams.brands}\r\n                    onChange={(items:string[])=>dispatch(setProductParams({brands:items}))}\r\n                    />\r\n             \r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <Grid sx={{mt:3}} item xs={6} sm={9.8} >\r\n            <ProductList products={products}></ProductList>\r\n            </Grid>\r\n            <Grid item xs={6} sm={2.2}/>\r\n            <Grid item xs={6} sm={9.8}>\r\n                {paginationData&&\r\n                  <AppPagination\r\n                  paginationData={paginationData}\r\n                  onPageChange={(page:number)=>dispatch(setPageNumber({pageNumber:page}))}\r\n                  />\r\n                }\r\n              \r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}