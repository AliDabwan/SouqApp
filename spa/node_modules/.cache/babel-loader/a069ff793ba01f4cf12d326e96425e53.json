{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"component\", \"label\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from '../useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUnstyledUtilityClass));\n}\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/react-menu/components-api/#menu-item-unstyled)\n */\n\n\nconst MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n\n  const {\n    children,\n    disabled: disabledProp = false,\n    component,\n    label,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    disabled: disabledProp,\n    ref,\n    label\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default MenuItemUnstyled;","map":{"version":3,"sources":["D:/Learn/react/SouqApp/spa/node_modules/@mui/lab/node_modules/@mui/base/MenuItemUnstyled/MenuItemUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUnstyledUtilityClass","useMenuItem","composeClasses","useSlotProps","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","disabled","focusVisible","slots","root","MenuItemUnstyled","forwardRef","props","ref","_ref","children","disabledProp","component","label","slotProps","other","getRootProps","highlighted","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","process","env","NODE_ENV","propTypes","node","bool","string","shape","oneOfType","func","object"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"component\", \"label\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUnstyledUtilityClass } from './menuItemUnstyledClasses';\nimport useMenuItem from '../useMenuItem';\nimport composeClasses from '../composeClasses';\nimport useSlotProps from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUnstyledUtilityClass));\n}\n\n/**\n *\n * Demos:\n *\n * - [Unstyled Menu](https://mui.com/base/react-menu/)\n *\n * API:\n *\n * - [MenuItemUnstyled API](https://mui.com/base/react-menu/components-api/#menu-item-unstyled)\n */\nconst MenuItemUnstyled = /*#__PURE__*/React.forwardRef(function MenuItemUnstyled(props, ref) {\n  var _ref;\n  const {\n      children,\n      disabled: disabledProp = false,\n      component,\n      label,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    disabled: disabledProp,\n    ref,\n    label\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_ref = component != null ? component : slots.root) != null ? _ref : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItemUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default MenuItemUnstyled;"]},"metadata":{},"sourceType":"module"}