<<<<<<<< HEAD:wwwroot/static/js/main.e83da1e4.chunk.js.map
{"version":3,"sources":["app/models/PaginationData.ts","features/contact/counterSlice.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutUs.tsx","app/layout/Loader.tsx","app/helper/helper.ts","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckBoxButton.tsx","app/components/AppPagination.tsx","app/hooks/useProducts.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactUs.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Register.tsx","features/account/Login.tsx","app/layout/ProtectedRout.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckBox.tsx","features/checkout/AddressForm.tsx","features/checkout/InputBaseComponentProps.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppSelectList.tsx","app/components/AppDropZone.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","paginationData","this","counterSlice","createSlice","name","initialState","data","title","reducers","increment","state","action","payload","decrement","actions","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","condition","Cookies","addBasketItemAsync","productId","quantity","parseFloat","toString","addItem","removeBasketItemAsync","deleteItem","basketSlice","basket","status","setBasket","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","dispatch","setPaginationData","fetchProductAsync","details","fetchfiltersAsync","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","resetProductParams","setPageNumber","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","SingInUser","Account","login","userDto","user","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","removeItem","history","push","roles","atob","token","split","toast","SouqStore","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","key","flat","Promise","reject","responseBody","requests","url","then","body","post","delete","put","createFormData","product","formData","FormData","id","Errors","get400Error","get401Error","get404Error","getValidationError","get500Error","values","register","fetchAddress","Orders","fetch","create","Payment","createPaymentIntent","Admin","createProduct","updateProduct","deleteProduct","AboutUs","useState","validationErrors","setValidationErrors","Container","sx","mt","Typography","variant","gutterBottom","color","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","Loader","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","height","CircularProgress","size","position","top","currencyFormat","amount","toFixed","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","brand","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","component","image","pictureUrl","alt","objectFit","CardContent","textAlign","price","type","CardActions","style","LoadingButton","loading","Link","to","ProductCardSkeleton","Grid","item","xs","Skeleton","animation","width","marginBottom","paddingBottom","margin","ProductList","products","container","rowSpacing","columnSpacing","sm","lg","ProductSearch","setsearchTerm","debounceSearch","debounce","event","target","value","TextField","label","onChange","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckBoxButton","checked","checkedItems","setcheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","ml","Pagination","shape","count","page","e","useProducts","selectAll","useEffect","sortOption","spacing","Paper","mb","p","NotFound","src","ProductDetails","productStatus","useParams","selectById","setQuantity","find","document","background","includes","marginTop","md","Divider","borderBottomWidth","my","TableContainer","Table","TableHead","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactUs","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","typography","currentTarget","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","linkStyle","Header","itemCounts","reduce","sum","AppBar","Toolbar","NavLink","textDecoration","IconButton","Badge","badgeContent","ShoppingCart","ServerError","navigate","useNavigate","useLocation","detail","BasketSummary","subtotal","deliveryFee","TableBody","colSpan","align","fontStyle","BasketTable","isBasket","handleRemoveItem","minWidth","row","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","useForm","mode","handleSubmit","setError","formState","isSubmitting","isValid","dispach","maxWidth","flexDirection","m","onSubmit","success","Username","username","Password","password","forEach","handleApiErrors","noValidate","autoFocus","required","helperText","pattern","location","submitForm","requestStatus","from","pathname","ProtectedRout","children","some","r","toastId","OrderDetails","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","orderDate","total","endIcon","DoneAll","AppTextInput","props","useController","defaultValue","fieldState","field","multiline","rows","AppCheckBox","AddressForm","useFormContext","isDirty","StripeInput","forwardRef","ref","Component","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","country","postalCode","phone","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidatoinSchema","methods","resolver","yupResolver","reset","getValues","saveAddress","handleNext","submitOrder","handleBack","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","stripePromise","loadStripe","CheckoutWrapper","AppSelectList","InputLabel","Select","index","FormHelperText","AppDropZone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","productValidationSchema","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","disptach","revokeObjectURL","handleSubmitData","px","py","mx","marginLeft","maxHeight","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","myRols","initApp","theme","autoClose","hideProgressBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.e83da1e4.chunk.js","sourcesContent":["export interface PaginationData {\r\n    currentPage: number\r\n    totalPages: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\nexport class PaginatedResponse<T>{\r\n    items: T;\r\n    paginationData: PaginationData;\r\n    constructor(items: T, paginationData: PaginationData) {\r\n        this.items = items;\r\n        this.paginationData = paginationData;\r\n    }\r\n}","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport interface CounterState{\r\n\r\n    data:number,\r\n    title:string\r\n}\r\n\r\nconst initialState:CounterState={\r\n    data:40,\r\n    title:'Counter Reducer By Redux toolkit'\r\n}\r\n\r\n\r\nexport const counterSlice=createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment:(state,action)=>{\r\n            state.data+=action.payload\r\n        },\r\n        decrement:(state,action)=>{\r\n            state.data-=action.payload\r\n        }\r\n    }\r\n})\r\nexport const {increment,decrement}=counterSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport { Basket } from '../../app/models/basket';\r\nimport agent from '../../app/api/agent';\r\nimport Cookies from 'js-cookie';\r\n//rxslice    snippit\r\n\r\n\r\n\r\n\r\nexport interface BasketState{\r\n\r\n    basket:Basket|null\r\n    status:string\r\n}\r\nconst initialState:BasketState = {\r\n    basket:null,\r\n    status:'idle'\r\n\r\n}\r\n\r\nexport const fetchBasketAsync=createAsyncThunk<Basket>(\r\n  'basket/fetchBasketAsync',\r\n  async(_,thunkAPI)=>{\r\n    try {\r\n      return await agent.Basket.get();\r\n     \r\n      \r\n    } \r\n    catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  },{\r\n    condition:()=>{\r\n      if(!Cookies.get('buyerId')) return false;\r\n    }\r\n  }\r\n)\r\n\r\n// in async we use thunkAPI for problems\r\nexport const addBasketItemAsync=createAsyncThunk<Basket,{productId:number,quantity?:number}>(\r\n\r\n  'basket/addBasketItemAsync',\r\n  async({productId,quantity=1},thunkAPI)=>{\r\n    try {\r\n      // console.log('quantity is'+quantity)\r\n\r\n      if(parseFloat(quantity.toString()) ===0){\r\n        quantity=1;\r\n        // console.log('quantity 1')\r\n\r\n      }\r\n      \r\n      \r\n      return await agent.Basket.addItem(productId,quantity);\r\n    } catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync=createAsyncThunk<void,{productId:number,quantity:number,name?:string}>(\r\n\r\n  'basket/removeBasketItemAsync',\r\n  async({productId,quantity},thunkAPI)=>{\r\n    try {\r\n      return await agent.Basket.deleteItem(productId,quantity);\r\n    } catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  }\r\n)\r\n\r\n\r\nconst basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket:(state,action)=>{\r\n        state.basket=action.payload\r\n    },\r\n    clearBasket:(state)=>{\r\n      state.basket=null;\r\n    }\r\n    // removeItem:(state,action)=>{\r\n    //     const {productId,quantity}=action.payload;\r\n    //     const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n    //     if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n    //     state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n    //     if(state.basket?.items[itemIndex].quantity===0)\r\n    //     state.basket.items.splice(itemIndex,1);\r\n    // }\r\n\r\n  },\r\n  extraReducers: (builder=> {\r\n    \r\n    // add\r\n    builder.addCase(addBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingAddItem'+action.meta.arg.productId;\r\n      // console.log(action)\r\n    });\r\n\r\n\r\n    ///delete \r\n\r\n    builder.addCase(removeBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingRemoveItem'+action.meta.arg.productId+action.meta.arg.name;\r\n      // console.log(action)\r\n    });\r\n    builder.addCase(removeBasketItemAsync.fulfilled,(state,action)=>{\r\n      state.status='idle';\r\n      const {productId,quantity}=action.meta.arg;\r\n\r\n      const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n      if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n      state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n      if(state.basket?.items[itemIndex].quantity===0)\r\n      state.basket.items.splice(itemIndex,1);\r\n\r\n\r\n    });\r\n    builder.addCase(removeBasketItemAsync.rejected,(state,action)=>{\r\n      state.status='idle';\r\n      console.log(action.payload);\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n    builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled,fetchBasketAsync.fulfilled), (state,action)=>{\r\n      state.status='idle';\r\n      state.basket=action.payload;\r\n    });\r\n    \r\n    builder.addMatcher(isAnyOf(addBasketItemAsync.rejected,fetchBasketAsync.rejected), (state,action)=>{\r\n      state.status='idle';\r\n      console.log(action.payload);\r\n    });\r\n\r\n  })\r\n\r\n}); \r\n\r\nexport const {setBasket,clearBasket} = basketSlice.actions\r\n\r\nexport default basketSlice.reducer","import { createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { RootState } from \"../../app/store/configureStore\";\r\nimport { PaginationData } from \"../../app/models/PaginationData\";\r\n\r\ntype CatalogState={\r\n  productsLoaded:boolean,\r\n  filtersLoaded:boolean,\r\n  status:string,\r\n  brands:string[],\r\n  types:string[],\r\n  productParams:ProductParams\r\n  paginationData:PaginationData|null\r\n}\r\nconst productsAdapter=createEntityAdapter<Product>();\r\n\r\nconst getAxiosParams=(productParams:ProductParams)=>{\r\n  const params=new URLSearchParams();\r\n  params.append('pageNumber',productParams.pageNumber.toString())\r\n  params.append('pageSize',productParams.pageSize.toString())\r\n  params.append('orderBy',productParams.orderBy)\r\n if(productParams.searchTerm) params.append('searchTerm',productParams.searchTerm)\r\n if(productParams.brands.length>0) params.append('brands',productParams.brands.toString())\r\n if(productParams.types.length>0) params.append('types',productParams.types.toString())\r\nreturn params\r\n\r\n}\r\n\r\nexport const fetchProductsAsync=createAsyncThunk<Product[],void,{state:RootState}>(\r\n\r\n    'catalog/fetchProductsAsync',\r\n    async(_,thunkAPI)=>{\r\n      const params=getAxiosParams(thunkAPI.getState().catalog.productParams); // this method get the global state or redux state\r\n\r\n      try {\r\n        const response= await agent.Catalog.list(params);\r\n        thunkAPI.dispatch(setPaginationData(response.paginationData))\r\n        return response.items;\r\n      } catch (error:any) {\r\n        return thunkAPI.rejectWithValue({error:error.data})\r\n      }\r\n  \r\n    }\r\n  )\r\n\r\n\r\n  export const fetchProductAsync=createAsyncThunk<Product,string>(\r\n\r\n    'catalog/fetchProductAsync',\r\n    async(productId,thunkAPI)=>{\r\n      try {\r\n        return await agent.Catalog.details(productId);\r\n      } catch (error:any) {\r\n       return thunkAPI.rejectWithValue({error:error.data})\r\n      }\r\n  \r\n    }\r\n  )\r\n  \r\n  export const fetchfiltersAsync=createAsyncThunk(\r\n\r\n    'catalog/fetchfiltersAsync',\r\n    async(_,thunkAPI)=>{\r\n      try {\r\n        return await agent.Catalog.fetchFilters();\r\n      } catch (error:any) {\r\n       return thunkAPI.rejectWithValue({error:error.data})\r\n      }\r\n  \r\n    }\r\n  )\r\n  \r\n  const initParams=()=>({\r\n\r\n    pageNumber:1,\r\n    pageSize:8,\r\n    orderBy:'name',\r\n    types:[],\r\n    brands:[]\r\n  })\r\n\r\n  const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState:productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded:false,\r\n        filtersLoaded:false,\r\n        status:'idle',\r\n        brands:[],\r\n        types:[],\r\n        productParams:initParams(),\r\n        paginationData:null\r\n         \r\n\r\n        \r\n    }), // get initialstate return all collections ids and entities inside coll\r\n    reducers: {\r\n      setProductParams:(state,action)=>{\r\n        state.productsLoaded=false;\r\n        state.productParams={...state.productParams,...action.payload,pageNumber:1}\r\n      },\r\n      resetProductParams:(state)=>{\r\n        state.productParams=initParams();\r\n      },\r\n      setPageNumber:(state,action)=>{\r\n        state.productsLoaded=false;\r\n        state.productParams={...state.productParams,...action.payload}\r\n      },\r\n    \r\n    setPaginationData:(state,action)=>{\r\n      state.paginationData=action.payload;\r\n    },\r\n    setProduct:(state,action)=>{\r\n      productsAdapter.upsertOne(state,action.payload);\r\n      state.productsLoaded=false;\r\n    },\r\n    removeProduct:(state,action)=>{\r\n      productsAdapter.removeOne(state,action.payload);\r\n    }\r\n    },\r\n    extraReducers: (builder=> {\r\n    \r\n        // GetAllListProducts\r\n        builder.addCase(fetchProductsAsync.pending, (state)=>{\r\n          state.status='pendingFetchProductsAsync';\r\n          // console.log(action)\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled,(state,action)=>{\r\n          state.status='idle';\r\n          productsAdapter.setAll(state,action.payload);\r\n          state.productsLoaded = true;\r\n\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected,(state,action)=>{\r\n          state.status='idle'\r\n          console.log(action.payload)\r\n\r\n        });\r\n\r\n        //get single product\r\n        builder.addCase(fetchProductAsync.pending, (state)=>{\r\n            state.status='pendingFetchProductAsync';\r\n            // console.log(action)\r\n          });\r\n          builder.addCase(fetchProductAsync.fulfilled,(state,action)=>{\r\n            state.status='idle';\r\n            productsAdapter.upsertOne(state,action.payload);\r\n  \r\n          });\r\n          builder.addCase(fetchProductAsync.rejected,(state,action)=>{\r\n            state.status='idle'\r\n            console.log(action)\r\n          });\r\n    \r\n\r\n          //filter single product\r\n        builder.addCase(fetchfiltersAsync.pending, (state)=>{\r\n          state.status='pendingFetchFiltersAsync';\r\n          // console.log(action)\r\n        });\r\n        builder.addCase(fetchfiltersAsync.fulfilled,(state,action)=>{\r\n          state.status='idle';\r\n          state.filtersLoaded=true;\r\n          state.brands=action.payload.brands;\r\n          state.types=action.payload.types;\r\n\r\n        });\r\n        builder.addCase(fetchfiltersAsync.rejected,(state,action)=>{\r\n          state.status='idle'\r\n        });\r\n  \r\n    \r\n       \r\n    \r\n      })\r\n  });\r\n  \r\n\r\nexport const productSelectors=productsAdapter.getSelectors((state:RootState)=>state.catalog);\r\n\r\nexport const {resetProductParams,setProductParams,setPaginationData,setPageNumber,setProduct,removeProduct}=catalogSlice.actions;\r\n//   export const {} = catalogSlice.actions\r\n  \r\n  export default catalogSlice.reducer","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport { User } from '../../app/models/user';\r\nimport { FieldValues } from 'react-hook-form';\r\nimport agent from '../../app/api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState{\r\n    user:User | null\r\n\r\n\r\n\r\n}\r\n\r\nconst initialState :AccountState= {\r\n    user:null\r\n\r\n}\r\n\r\nexport const SingInUser=createAsyncThunk<User,FieldValues>(\r\n    'account/SingInUser',\r\n    async(data,thunkAPI)=>{\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket,...user}=userDto;\r\n            if(basket)thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n)\r\n\r\nexport const fetchCurrentUser=createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async(_,thunkAPI)=>{\r\n\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket,...user}=userDto;\r\n            if(basket)thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    },{\r\n        condition:()=>{\r\n            if(!localStorage.getItem('user'))return false;\r\n        }\r\n    }\r\n\r\n\r\n)\r\n\r\n\r\n\r\n\r\nconst accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    signOut:(state)=>{\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        history.push('../')\r\n    },\r\n    setUser:(state,action)=>{\r\n        let claims=JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        let roles=claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n        state.user={...action.payload,roles:typeof(roles)==='string'?[roles]:roles};\r\n        \r\n    }\r\n  },\r\n  extraReducers:(builder =>{\r\n\r\n    builder.addCase(fetchCurrentUser.rejected,(state)=>{\r\n\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        toast.error('Session Expired ! please login again');\r\n        history.push('../')\r\n\r\n\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.fulfilled,fetchCurrentUser.fulfilled),\r\n    (state,action)=>{\r\n\r\n        let claims=JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        let roles=claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n        state.user={...action.payload,roles:typeof(roles)==='string'?[roles]:roles};\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.rejected),\r\n    (state,action)=>{\r\n\r\n        console.log(action.payload) ;\r\n    });\r\n\r\n    \r\n\r\n  })\r\n  \r\n});\r\n\r\nexport const {signOut,setUser} = accountSlice.actions\r\n\r\nexport default accountSlice.reducer","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport basketSlice from \"../../features/basket/basketSlice\";\r\nimport catalogSlice from \"../../features/catalog/catalogSlice\";\r\nimport accountSlice from \"../../features/account/accountSlice\";\r\n\r\n\r\n// here the stor come from counter roducer\r\n// export const configureStore=()=>{\r\n\r\n\r\n//     return createStore(counterReducer)\r\n// }\r\n\r\n// here the store come from counter slice using  tool kit\r\nexport const SouqStore=configureStore({\r\n    reducer:{\r\n        counter:counterSlice.reducer,\r\n        basket:basketSlice,\r\n        catalog:catalogSlice,\r\n        account:accountSlice\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport type RootState=ReturnType<typeof SouqStore.getState>;\r\nexport  type AppDispatch=typeof SouqStore.dispatch;\r\nexport const  useAppDispatch=()=>useDispatch<AppDispatch>();\r\nexport const useAppSelector:TypedUseSelectorHook<RootState>=useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/PaginationData\";\r\nimport { SouqStore } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n// axios.defaults.baseURL = 'http://localhost:5000/api/';\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\naxios.defaults.withCredentials=true;\r\n\r\naxios.interceptors.request.use(config=>{\r\n    const token=SouqStore.getState().account.user?.token;\r\n    if(token)config.headers!.Authorization=`Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n\r\n    if(process.env.NODE_ENV==='development')await sleep();\r\n\r\n    const pagination=response.headers['pagination'];\r\n    if(pagination){\r\n        response.data=new PaginatedResponse(response.data,JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat()\r\n            }\r\n            toast.error(data.title)\r\n            break;\r\n        case 401:\r\n            toast.error(data.title)\r\n           \r\n            break;\r\n            case 403:\r\n                toast.error('You are not authorized to do this !')\r\n               \r\n                break;\r\n        case 500:\r\n            history.push('server-error', { error: data })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\nconst requests = {\r\n    get: (url: string,params?:URLSearchParams) => axios.get(url,{params:params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm:(url:string,data:FormData)=>\r\n        axios.post(url,data,{\r\n            headers:{'Content-type':'multipart/from-data'}\r\n        }).then(responseBody)\r\n    ,\r\n    putForm:(url:string,data:FormData)=>\r\n        axios.put(url,data,{\r\n            headers:{'Content-type':'multipart/from-data'}\r\n        }).then(responseBody)\r\n    \r\n}\r\nconst createFormData=(product:any)=>{\r\n    let formData=new FormData();\r\n    for (const key in product) {\r\n      \r\n        formData.append(key,product[key])\r\n    }\r\n    return formData;\r\n\r\n}\r\n //to return void use {} after arrow func \r\n //to return promise delete {} after arrow func\r\nconst Admin={\r\n    createProduct:(product:any)=>requests.postForm('products',createFormData(product)),\r\n    updateProduct:(product:any)=>requests.putForm('products',createFormData(product)),\r\n\r\n    deleteProduct:(id:number)=>requests.delete(`products/${id}`)\r\n\r\n\r\n\r\n}\r\nconst Catalog = {\r\n    list: (params:URLSearchParams) => requests.get('products',params),\r\n    details: (id: string) => requests.get(`products/${id}`),\r\n    fetchFilters:()=>requests.get('products/filters')\r\n}\r\n \r\nconst Errors = {\r\n    get400Error: () => requests.get('error/bad-request'),\r\n    get401Error: () => requests.get('error/unauthorized'),\r\n    get404Error: () => requests.get('error/not-found'),\r\n    getValidationError: () => requests.get('error/validation-error'),\r\n    get500Error: () => requests.get('error/server-error')\r\n}\r\nconst Basket={\r\n    get:()=>requests.get('basket'),\r\n    addItem:(productId:number,quantity=1)=>requests.post(`basket?productId=${productId}&quantity=${quantity}`,{}),\r\n    deleteItem:(productId:number,quantity=1)=>requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\nconst Account={\r\n    login:(values:any)=>requests.post('account/login',values),\r\n    register:(values:any)=>requests.post('account/register',values),\r\n    currentUser:()=>requests.get('account/currentUser'),\r\n    fetchAddress:()=>requests.get('account/savedAddress')\r\n\r\n\r\n}\r\n\r\nconst Orders={\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: string) => requests.get(`orders/${id}`),\r\n    create:(values:any)=>requests.post('orders',values)\r\n\r\n\r\n}\r\nconst Payment={\r\n    createPaymentIntent:()=>requests.post('payment',{})\r\n\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    Errors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payment,\r\n    Admin\r\n}\r\n\r\nexport default agent;","import Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport ButtonGroup from '@mui/material/ButtonGroup'\r\nimport Button from '@mui/material/Button'\r\nimport agent from '../../app/api/agent'\r\nimport { useState } from 'react'\r\nimport { Alert, AlertTitle, List, ListItem, ListItemText } from '@mui/material'\r\n\r\nexport default function AboutUs() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n    const getValidationErrors = () => {\r\n        agent.Errors.getValidationError()\r\n            .then(() => console.log('will not appear'))\r\n            .catch(error => setValidationErrors(error))\r\n    }\r\n    return (\r\n        <Container sx={{ mt: 10 }}>\r\n            <Typography variant=\"h3\" gutterBottom color=\"initial\">Errors Testing</Typography>\r\n            <ButtonGroup color=\"primary\" fullWidth>\r\n                <Button variant='contained' onClick={() => agent.Errors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.Errors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.Errors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={getValidationErrors}>Test Validation Error</Button>\r\n                <Button variant='contained' onClick={() => agent.Errors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n            </ButtonGroup>\r\n            {\r\n                validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {\r\n                            validationErrors.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>{error}</ListItemText>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ntype Props = {\r\n    message?: string\r\n}\r\nexport default function Loader({ message = 'Loading...' }: Props) {\r\n    return (\r\n        <Backdrop open invisible>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height=\"100vh\">\r\n                <CircularProgress size={100} />\r\n                <Typography sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }} variant=\"h4\" color=\"initial\">\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}\r\n","export const currencyFormat=(amount:number)=>(amount/100).toFixed(2)+' USD '","import { Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader, Avatar } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ntype Props = {\r\n    product: Product\r\n}\r\nexport default function ProductCard({ product }: Props) {\r\n    // const [lodaing, setLodaing] = useState(false); local using befor async thunk\r\n    const {status}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    // const {setBasket}=useSouqContext();\r\n    const dispatch=useAppDispatch();\r\n\r\n\r\n\r\n    // const handleAddItem=(productId:number)=>{\r\n    //     setLodaing(true);\r\n    //     agent.Basket.addItem(productId).then(basket=>dispatch(setBasket(basket)))\r\n\r\n    //     .catch(error=>console.log(error))\r\n    //     .finally(()=>setLodaing(false));\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'primary.dark' }}>\r\n                        {product.brand.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{ variant: \"body2\", sx: { fontWeight: 'bolder', color: 'primary.dark' } }}\r\n\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={product.pictureUrl}\r\n                alt={product.name}\r\n                title={product.name}\r\n                sx={{ objectFit: 'contain' }}\r\n            />\r\n            <CardContent>\r\n                \r\n                <Typography fontWeight=\"bolder\" textAlign=\"center\" gutterBottom variant=\"h5\" color=\"primary.dark\">\r\n                    {/* {(product.price / 100).toFixed(2)} EGP */}\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography fontWeight=\"bolder\" textAlign=\"center\" variant=\"body1\" color=\"text.secondary\">\r\n                    {product.brand}<br/>\r\n                    {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n\r\n                <LoadingButton loading={status==='pendingAddItem'+product.id}\r\n                // onClick={()=>handleAddItem(product.id)}\r\n                onClick={()=>dispatch( addBasketItemAsync({productId:product.id}))}\r\n\r\n                sx={{ fontWeight: 'bolder' }} \r\n                size=\"small\">Add To Cart</LoadingButton>\r\n                \r\n                <Button\r\n                    sx={{ fontWeight: 'bolder' }}\r\n                    size=\"small\"\r\n                    component={Link}\r\n                    to={`/catalog/${product.id}`}\r\n                >View Product</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 267 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent >\r\n                <Skeleton animation=\"wave\" height={10} width=\"70%\" style={{ paddingBottom: 5, margin: 'auto' }} />\r\n                <Skeleton animation=\"wave\" height={10} width=\"50%\" style={{ paddingBottom: 3, margin: 'auto' }} />\r\n                <Skeleton animation=\"wave\" height={10} width=\"50%\" style={{ paddingBottom: 3, margin: 'auto' }} />\r\n            </CardContent>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"40%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ntype Props = {\r\n    products: Product[]\r\n}\r\nexport default function ProductList({ products }: Props) {\r\n\r\n    const {productsLoaded}=useAppSelector(state=>state.catalog);\r\n\r\n    return (\r\n        <Grid sx={{ mt: 1 }} container rowSpacing={2} columnSpacing={2}>\r\n            {\r\n                products.map(product => (\r\n                    <Grid key={product.id} item xs={12} sm={4} lg={3}>\r\n                        {!productsLoaded ?(\r\n                            <ProductCardSkeleton/>\r\n\r\n                        ):\r\n                        (\r\n                            <ProductCard product={product}></ProductCard>\r\n\r\n                        )\r\n\r\n                        }\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n","import { TextField, debounce } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams}=useAppSelector(state=>state.catalog);\r\n\r\n    const [searchTerm, setsearchTerm] = useState(productParams.searchTerm)\r\n\r\n    const dispatch=useAppDispatch();\r\n    const debounceSearch=debounce((event:any)=>{\r\n        dispatch(setProductParams({searchTerm:event.target.value})) //يمثل القيمة الموجودة في الحقل \r\n\r\n\r\n    },1000) // to delay\r\n  return (\r\n    <>\r\n      <TextField variant=\"outlined\"\r\n                     label='Search Product'\r\n                     fullWidth\r\n                     value={searchTerm||''}\r\n                     onChange={(event:any)=>{\r\n                        // dispatch(setProductParams({searchTerm:event.target.value})) //يمثل القيمة الموجودة في الحقل \r\n                        setsearchTerm(event.target.value);\r\n                        debounceSearch(event);\r\n                   \r\n                    }}\r\n                     />\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n","import { FormControl, FormControlLabel, Radio, RadioGroup } from '@mui/material'\r\n\r\n\r\ntype Props={\r\n    options:any[]\r\n    onChange:(event:any)=>void\r\n    selectedValue:string\r\n\r\n}\r\n\r\nexport default function RadioButtonGroup({onChange,options,selectedValue}:Props) {\r\n  return (\r\n    <FormControl component=\"fieldset\" >\r\n    <RadioGroup onChange={onChange} value={selectedValue}\r\n     >\r\n            {\r\n                options.map(({value,label})=>(\r\n                    <FormControlLabel key={value} value={value} label={label} control={<Radio/>} />\r\n\r\n                ))\r\n\r\n            }\r\n       \r\n    </RadioGroup>\r\n</FormControl>\r\n  )\r\n}\r\n","import { Checkbox, FormControlLabel, FormGroup } from '@mui/material'\r\nimport { useState } from 'react'\r\n\r\n\r\ntype Props={\r\n\r\n    items:string[]\r\n    checked?:string[],\r\n    onChange:(items:string[])=>void\r\n}\r\nexport default function CheckBoxButton({items,onChange,checked}:Props) {\r\n\r\n    const [checkedItems, setcheckedItems] = useState(checked||[])\r\n\r\n    const handleChecked=(value:string)=>{\r\n        const currentIndex=checkedItems.findIndex(item=>item===value);\r\n        let newChecked:string []=[];\r\n        if(currentIndex===-1)newChecked=[...checkedItems,value]\r\n        else newChecked=checkedItems.filter(item=>item!==value);\r\n        setcheckedItems(newChecked);\r\n\r\n        onChange(newChecked);\r\n    }\r\n  return (\r\n    <FormGroup>\r\n                   \r\n    {\r\n       \r\n        items.map(item=>(\r\n            <FormControlLabel key={item}\r\n             label={item}\r\n             control={<Checkbox\r\n             checked={checkedItems.indexOf(item)!==-1}\r\n             onClick={()=>handleChecked(item)}\r\n             \r\n             />} />\r\n\r\n        ))\r\n\r\n    }\r\n\r\n\r\n</FormGroup>\r\n  )\r\n}\r\n","import { Box, Pagination, Typography } from \"@mui/material\";\r\nimport { PaginationData } from \"../models/PaginationData\";\r\n\r\n\r\ntype Props={\r\n    paginationData:PaginationData\r\n    onPageChange:(page:number)=>void\r\n}\r\nexport default function AppPagination({paginationData,onPageChange}:Props) {\r\n    const {currentPage,pageSize,totalCount,totalPages}=paginationData\r\n  return (\r\n<Box sx={{mt:-1}} display='flex' justifyContent='space-between' alignItems='center'>\r\n                    <Typography sx={{ml:1}} > \r\n                    Displaying {(currentPage - 1) * pageSize + 1} -\r\n                    {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize }\r\n                     of {totalCount} items\r\n                    </Typography>\r\n                    <Pagination \r\n                    shape=\"rounded\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    count={totalPages}\r\n                    page={currentPage}\r\n                    onChange={(e,page)=>onPageChange(page)}\r\n                    />\r\n                </Box>  )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors } from \"../../features/catalog/catalogSlice\";\r\n\r\nexport default function useProducts() {\r\n    const products=useAppSelector(productSelectors.selectAll);\r\n    const dispatch=useAppDispatch();\r\n    const {productsLoaded,filtersLoaded,brands,types,paginationData}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => { \r\n\r\n        // agent.Catalog.list()\r\n        //     .then(products => setProducts(products))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n\r\n        if (!productsLoaded) {\r\n            dispatch(fetchProductsAsync())\r\n            \r\n        }\r\n\r\n\r\n    }\r\n        , [productsLoaded,dispatch])\r\n\r\n        useEffect(() => {\r\n\r\n           \r\n            if (!filtersLoaded) {\r\n                dispatch(fetchfiltersAsync())\r\n                \r\n            }\r\n    \r\n    \r\n        }\r\n            , [filtersLoaded,dispatch])\r\n\r\n        return{\r\n            products,productsLoaded,filtersLoaded,brands,types,paginationData\r\n        }\r\n}\r\n","import Loader from \"../../app/layout/Loader\"\r\nimport ProductList from \"./ProductList\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { setPageNumber, setProductParams } from \"./catalogSlice\"\r\nimport { Grid, Paper } from \"@mui/material\"\r\nimport ProductSearch from \"./ProductSearch\"\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\"\r\nimport CheckBoxButton from \"../../app/components/CheckBoxButton\"\r\nimport AppPagination from \"../../app/components/AppPagination\"\r\nimport useProducts from \"../../app/hooks/useProducts\"\r\n\r\nconst sortOption =[\r\n   { value:'name', label:'Alphabetical'},\r\n   { value:'lowprice', label:'Price- Low To High'},\r\n   { value:'highprice', label:'Price- High To Low'},\r\n\r\n\r\n]\r\nexport default function Catalog() {\r\n\r\n    const {products,filtersLoaded,brands,types,paginationData}=useProducts();\r\n    // const [products, setProducts] = useState<Product[]>([])// context\r\n    const dispatch=useAppDispatch();\r\n    const {productParams}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n        \r\n    // if (status.includes('pending')||!paginationData)\r\n    if(!filtersLoaded)\r\n     return <Loader message='Loading Products...' />\r\n    return (\r\n        <Grid  container spacing={2}>\r\n            <Grid sx={{mt:3}} item xs={6} sm={2.2} >\r\n                <Paper sx={{mb:2}}>\r\n                  <ProductSearch/>\r\n\r\n\r\n                </Paper>\r\n                <Paper sx={{mb:2,p:2}}>\r\n               <RadioButtonGroup \r\n               selectedValue={productParams.orderBy}\r\n               options={sortOption}\r\n               onChange={(e)=>dispatch(setProductParams({orderBy:e.target.value}))}\r\n               />\r\n\r\n                </Paper> \r\n                <Paper sx={{mb:2,p:2}}>\r\n\r\n                    <CheckBoxButton \r\n                    items={types}\r\n                    checked={productParams.types}\r\n                    onChange={(items:string[])=>dispatch(setProductParams({types:items}))}\r\n                    />\r\n              \r\n\r\n                </Paper>\r\n\r\n                <Paper sx={{mb:2,p:2}}>\r\n                        {/* <FormGroup>\r\n                {\r\n                                types.map(type=>(\r\n                                    <FormControlLabel key={type} label={type} control={<Checkbox/>} />\r\n\r\n                                ))\r\n\r\n                                }\r\n                        </FormGroup> */}\r\n                        <CheckBoxButton \r\n                    items={brands}\r\n                    checked={productParams.brands}\r\n                    onChange={(items:string[])=>dispatch(setProductParams({brands:items}))}\r\n                    />\r\n             \r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <Grid sx={{mt:3}} item xs={6} sm={9.8} >\r\n\r\n            <ProductList products={products}></ProductList>\r\n            \r\n            </Grid>\r\n            <Grid item xs={6} sm={2.2}/>\r\n            <Grid item xs={6} sm={9.8}>\r\n                {paginationData&&\r\n                  <AppPagination\r\n                  paginationData={paginationData}\r\n                  onPageChange={(page:number)=>dispatch(setPageNumber({pageNumber:page}))}\r\n                  />\r\n                }\r\n              \r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","import { Box, Button, Paper, Typography } from '@mui/material'\r\nimport Container from '@mui/material/Container'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 450, mt: 17, textAlign: \"center\" }}>\r\n            <Typography gutterBottom variant=\"h3\" color=\"initial\">\r\n                Sorry, what you are looking for not found!\r\n            </Typography>\r\n            <Box component=\"img\"\r\n                sx={{\r\n                    mb: 2,\r\n                    height: 300,\r\n                    width: \"100%\"\r\n                }}\r\n                src={'../images/404.png'}\r\n            />\r\n            <Button variant=\"contained\" component={Link} to='../catalog'>Go Back to Catalog</Button>\r\n        </Container>\r\n    )\r\n}\r\n","import Typography from '@mui/material/Typography'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router'\r\nimport Grid from '@mui/material/Grid'\r\nimport { Divider, Table, TableCell, TableContainer, TableHead, TableRow, TextField } from '@mui/material';\r\nimport NotFound from '../../app/errors/NotFound';\r\nimport Loader from '../../app/layout/Loader';\r\nimport { currencyFormat } from '../../app/helper/helper';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport {  addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice';\r\nimport { fetchProductAsync, productSelectors } from './catalogSlice';\r\n\r\nexport default function ProductDetails() {\r\n\r\n    // const {basket,setBasket,removeItem}=useSouqContext(); context api\r\n    const {status:productStatus}=useAppSelector(state=>state.catalog); // redux\r\n\r\n    const {basket,status}=useAppSelector(state=>state.basket); // redux\r\n    const dispatch=useAppDispatch();\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    // const [product, setProduct] = useState<Product | null>(null);\r\n    const product=useAppSelector(state=>productSelectors.selectById(state,id!));\r\n\r\n\r\n    // const [loading, setLoading] = useState(true);\r\n\r\n    const [quantity,setQuantity]= useState(0);\r\n    // const [submitting,setSubmitting]= useState(false);\r\n\r\n    const item=basket?.items.find(i=>i.productId===product?.id);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        document.body.style.background = 'inherit'\r\n        if(item)setQuantity(item.quantity);\r\n        // agent.Catalog.details(id!)\r\n        //     .then(product => setProduct(product))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n        if(!product)dispatch(fetchProductAsync(id!));\r\n\r\n\r\n\r\n\r\n    }, [id,item,product,dispatch])\r\n    useEffect(() => {\r\n        return () => {\r\n            document.body.style.background = '#e7e7e7'\r\n        }\r\n    }, [])\r\n\r\n    const handleInputAddChange= (event: any) =>{\r\n        console.log('add');\r\n\r\n        if(event.target.value>0)\r\n        setQuantity(event?.target.value);\r\n\r\n\r\n    }\r\n    const handleInputUpdateChange= (event: any) =>{\r\n        console.log('update');\r\n\r\n        if(event.target.value>=0)\r\n        setQuantity(event?.target.value);\r\n\r\n    }\r\n\r\n\r\n\r\n    // const handleUpdateCartUsingContext=()=>{\r\n    //     setSubmitting(true);\r\n    //     if(!item || quantity>item.quantity){\r\n          \r\n           \r\n    //         var updatedQuantity=item?quantity-item.quantity:quantity;\r\n    //         if(updatedQuantity==0){\r\n    //             updatedQuantity=1;\r\n    //         }\r\n\r\n\r\n    //         agent.Basket.addItem(product?.id!,updatedQuantity)\r\n    //         .then(basket=>dispatch(setBasket(basket)))\r\n    //         .catch(error=>console.log(error))\r\n    //         .finally(()=>setSubmitting(false)\r\n    //         )\r\n    //     }else{\r\n            \r\n    //         const updatedQuantity=item.quantity-quantity;\r\n    //         agent.Basket.deleteItem(product?.id!,updatedQuantity)\r\n    //         .then(()=>dispatch(removeItem({productId: product?.id!,quantity: updatedQuantity}))) // update the context\r\n    //         .catch(error=>console.log(error))\r\n    //         .finally(()=>  setSubmitting(false)\r\n        \r\n    //         )\r\n    //     }\r\n\r\n    // } \r\n\r\n    const handleUpdateCart=()=>{\r\n        if(!item || quantity>item.quantity){\r\n          \r\n        //    var defzero=0;\r\n            var updatedQuantity=item?quantity-item.quantity:quantity;\r\n            if(updatedQuantity===0){\r\n                updatedQuantity=1;\r\n            }\r\n\r\n\r\n            dispatch( addBasketItemAsync({productId:product?.id!,quantity:updatedQuantity}))\r\n                }else{\r\n            \r\n            const updatedQuantity=item.quantity-quantity;\r\n            \r\n            dispatch( removeBasketItemAsync({productId:product?.id!,quantity:updatedQuantity}))\r\n\r\n            \r\n        } \r\n\r\n    } \r\n    // const doFainal=()=>{ \r\n      \r\n\r\n    //     history.push('../basket');\r\n\r\n\r\n    // }\r\n    if (productStatus.includes('pending')) return (\r\n        <Loader message='Loading Product...' />\r\n    )\r\n    if (!product) return (\r\n        <NotFound />\r\n    )\r\n    return (\r\n        <Grid container spacing={6} marginTop={0}>\r\n            <Grid item xs={12} md={6}>\r\n                <img src={product.pictureUrl} alt={product.name} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h4\" color=\"initial\">{product.name}</Typography>\r\n                <Divider sx={{ borderBottomWidth: 'medium', my: 2 }} variant=\"fullWidth\" />\r\n                <Typography fontWeight=\"bolder\" color=\"primary.dark\" variant=\"h4\">\r\n                    {/* {(product.price / 100).toFixed(2)} EGP */}\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>In Stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} marginTop={1}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                        onChange={item?handleInputUpdateChange:handleInputAddChange}\r\n                          label=\"Quantity in cart\"\r\n                          variant='outlined'\r\n                          type='number'\r\n                          fullWidth\r\n                          value={quantity}\r\n                        />\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton \r\n                       \r\n                    \r\n\r\n                        sx={{height:'55px'}}\r\n                        color='primary'\r\n                        size='large'\r\n                        variant='contained'\r\n                        fullWidth\r\n                        loading={(status.includes('pending'))}\r\n                        disabled={(item?.quantity===quantity)||(!item&&quantity===0)}\r\n                        onClick={handleUpdateCart}\r\n                        >\r\n                            {item?'Update Quantity':'Add To Cart'}\r\n\r\n                        </LoadingButton>\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import Typography from '@mui/material/Typography'\r\nimport { ButtonGroup, Button } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { decrement, increment } from './counterSlice';\r\nexport default function ContactUs() {\r\n\r\n    // const {data,title}=useSelector((state:CounterState)=>state);\r\n\r\n    // const dispatch=useDispatch();\r\n\r\n    const dispatch=useAppDispatch();\r\n    const {data,title}=useAppSelector(state=>state.counter);\r\n\r\n\r\n    return (\r\n        <>\r\n         <Typography gutterBottom  marginTop={10} variant=\"h2\" color=\"initial\">\r\n         data:  {data}\r\n        </Typography>\r\n        <Typography variant=\"h2\" color=\"initial\">\r\n         title:  {title}\r\n        </Typography>\r\n        <ButtonGroup sx={{mt:2}}>\r\n\r\n            {/* <Button onClick={()=>dispatch({ type: DECREMENT_COUNTER })} variant=\"contained\" color=\"primary\">Decrement</Button>\r\n            <Button onClick={()=>dispatch({ type: INCREMENT_COUNTER })} variant=\"contained\" color=\"secondary\">Increment</Button> */}\r\n\r\n            <Button onClick={()=>dispatch(decrement(1) )} variant=\"contained\" color=\"primary\">Decrement</Button>\r\n            <Button onClick={()=>dispatch(increment(1))} variant=\"contained\" color=\"secondary\">Increment</Button>\r\n\r\n            <Button onClick={()=>dispatch(increment(5))} variant=\"contained\" color=\"secondary\">Increment 5</Button>\r\n\r\n        </ButtonGroup>\r\n\r\n        </>\r\n       \r\n    ) \r\n}\r\n","import { Button, Menu, Fade, MenuItem } from '@mui/material';\r\nimport React from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\nimport { signOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch=useAppDispatch();\r\n    const {user}=useAppSelector(state=>state.account)\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Button\r\n        color='inherit'\r\n        sx={{typography:'h6'}}\r\n          onClick={handleClick}\r\n        >\r\n          {user?.email}\r\n        </Button>\r\n        <Menu\r\n        \r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Fade}\r\n        >\r\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n          <MenuItem onClick={handleClose} component={Link} to='../orders'>My Orders</MenuItem>\r\n          <MenuItem onClick={()=>\r\n          { \r\n            dispatch(signOut())\r\n            dispatch(clearBasket())\r\n        \r\n            }\r\n           \r\n            \r\n            }>Logout</MenuItem>\r\n        </Menu>\r\n      </>\r\n    );\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material'\r\nimport { Badge, Box, IconButton, List, ListItem } from '@mui/material'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }]\r\nconst linkStyle = {\r\n    color: 'grey.300',\r\n    typography: 'h6',\r\n    '&.hover,&.active': {\r\n        color: 'inherit'\r\n    }\r\n}\r\nexport default function Header() {\r\n\r\n\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    const itemCounts=basket?.items.reduce((sum,item)=>sum+item.quantity,0);\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\">\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography\r\n                    fontWeight=\"bolder\"\r\n                    variant=\"h5\"\r\n                    component={NavLink}\r\n                    to=\"/\"\r\n                    sx={{ color: 'inherit', textDecoration: 'none' }}\r\n                >\r\n                    SOUQ\r\n                </Typography>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={linkStyle}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            Inventory\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to='basket' size=\"large\" sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCounts} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        user ?\r\n                        (<SignedInMenu/>):\r\n                        (\r\n\r\n                            <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={linkStyle}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        )\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                  \r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { Divider, Paper, Typography, Button } from '@mui/material'\r\nimport Container from '@mui/material/Container'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nexport default function ServerError() {\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    return (\r\n        <Container sx={{ mt: 10 }} component={Paper} >\r\n            {\r\n                state?.error ? (\r\n                    <>\r\n                        <Typography variant=\"h4\" color=\"error\" gutterBottom>{state.error.title}</Typography>\r\n                        <Divider />\r\n                        <Typography variant=\"body1\" color=\"initial\">{state.error.detail || 'Internal server error'}</Typography>\r\n                    </>\r\n                ) : (\r\n                    <Typography variant=\"h5\" gutterBottom color=\"initial\">Server Error</Typography>\r\n                )\r\n            }\r\n            <Button onClick={() => navigate(-1)} color=\"primary\">\r\n                Go back\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\n\r\ntype Props={\r\n    subtotal?:number,\r\n    itemCounts?:number\r\n\r\n}\r\nexport default function BasketSummary({subtotal,itemCounts}:Props) {\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket); // redux\r\n\r\n\r\n    // ??0 if null return 0\r\n    if(subtotal===undefined)\r\n     subtotal = basket?.items.reduce((sum,item)=>sum+(item.quantity*item.price),0)??0;\r\n    //  toast.success('sub is :'+subtotal);\r\n    const deliveryFee = (subtotal>100000 || subtotal===0) ?0:2000;\r\n    // toast.success('deliveryFee is :'+deliveryFee);\r\n\r\n    if(itemCounts===undefined)\r\n     itemCounts=basket?.items.reduce((count,item)=>count+item.quantity,0)??0;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                    <TableRow>\r\n                            <TableCell colSpan={2}>Total Qty</TableCell>\r\n                            <TableCell align=\"right\">{itemCounts}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        {/* <TableRow>\r\n                            <TableCell colSpan={2}>reaTotall</TableCell>\r\n                            <TableCell align=\"right\">{subtotal}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>realFee</TableCell>\r\n                            <TableCell align=\"right\">{deliveryFee}</TableCell>\r\n                        </TableRow> */}\r\n\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{ currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                     \r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: 'italic' }}>*Orders over 1000 USD qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n           \r\n        </> \r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"./basketSlice\";\r\n\r\n\r\n\r\ntype Props={\r\n    items:BasketItem[]\r\n    isBasket?:boolean\r\n}\r\nexport default function BasketTable({items,isBasket=true}:Props) {\r\n    \r\n    const {status}=useAppSelector(state=>state.basket); // redux\r\n    const dispatch=useAppDispatch();\r\n    const handleAddItem=(productId:number)=>{\r\n      \r\n        dispatch( addBasketItemAsync({productId:productId}))\r\n  \r\n  \r\n  \r\n    }\r\n      const handleRemoveItem=(productId:number,quantity=1,name:string)=>{\r\n        dispatch( removeBasketItemAsync({productId:productId,quantity:quantity,name}))\r\n  \r\n      }\r\n  return (\r\n    <TableContainer  sx={{mt:10}}  component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} >\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Product</TableCell>\r\n          <TableCell align=\"center\">Price</TableCell>\r\n          <TableCell align=\"center\">Quantity</TableCell>\r\n          <TableCell align=\"center\">SubTotal</TableCell>\r\n          {isBasket && \r\n                    <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          }\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {items.map((row) => (\r\n          <TableRow\r\n            key={row.productId}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              <Box\r\n              sx={{color:'inherit',textDecoration:'inherit'}}\r\n              component={Link}\r\n              to={`../catalog/${row.productId}`}\r\n               display={'flex'}\r\n               alignItems={'center'}>\r\n                <img src={row.pictureUrl} alt={row.name} style={{height:50,marginRight:20}} />\r\n                <span>{row.name}</span>\r\n\r\n              </Box>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              {\r\n                currencyFormat(row.price)\r\n            }\r\n\r\n           \r\n              </TableCell>\r\n         \r\n              \r\n            <TableCell align=\"center\">\r\n            {isBasket && \r\n            <LoadingButton \r\n              // loading={status.loading&&status.name==='rem'+row.productId}\r\n              loading={(status==='pendingRemoveItem'+row.productId+'rem')}\r\n\r\n              onClick={()=>handleRemoveItem(row.productId,1,'rem')}\r\n              color='error'\r\n              sx={{ fontWeight: 'bolder' }} \r\n              size=\"small\"> \r\n                <Remove/>\r\n                </LoadingButton>\r\n                }\r\n              {row.quantity}\r\n              {isBasket && \r\n              <LoadingButton \r\n              // loading={status.loading&&status.name==='add'+row.productId}\r\n              loading={(status==='pendingAddItem'+row.productId)}\r\n\r\n              onClick={()=>handleAddItem(row.productId)}\r\n              color='secondary'\r\n              sx={{ fontWeight: 'bolder' }} \r\n              size=\"small\">\r\n                <Add/>\r\n                </LoadingButton>\r\n                    }\r\n            \r\n            </TableCell>\r\n            \r\n                \r\n            <TableCell align=\"center\">{currencyFormat((row.price * row.quantity))}</TableCell>\r\n            <TableCell align=\"center\">\r\n            {isBasket && \r\n            <LoadingButton \r\n              //  loading={status.loading&&status.name==='del'+row.productId}\r\n              loading={(status==='pendingRemoveItem'+row.productId+'del')}\r\n\r\n               onClick={()=>handleRemoveItem(row.productId,row.quantity,'del')}\r\n                color='error'>\r\n                <Delete/>\r\n                </LoadingButton>\r\n\r\n            }\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>  )\r\n}\r\n","import { Grid, Button } from '@mui/material';\r\nimport BasketSummary from './BasketSummary';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketTable from './BasketTable';\r\n\r\nexport default function BasketPage() {\r\n\r\n    // const [loading, setLoading] = useState(true);\r\n    // const [basket, setBasket] = useState<Basket|null>(null);\r\n    //  useEffect(() => {\r\n\r\n    //   agent.Basket.get().then(basket=>setBasket(basket))\r\n    //   .catch(error=>console.log(error))\r\n    //   .finally(()=>setLoading(false))\r\n    // }, [])\r\n    \r\n    // if(loading)return<Loader message=\"Loading basket....!!!\" />\r\n\r\n      // const {basket,setBasket,removeItem}=useSouqContext();\r\n\r\n      const {basket}=useAppSelector(state=>state.basket); // redux\r\n\r\n\r\n      //NEW TYPES FOR VARIABLES IMPORTANT ***ALI_23_04_15\r\n      // const [status, setStatus] = useState({\r\n      //   loading:false,\r\n      //   name:''\r\n\r\n      // });\r\n      \r\n      \r\n    //   const handleAddItemusingContext=(productId:number,name:string)=>{\r\n    //     setStatus({loading:true,name:name});\r\n\r\n    //     agent.Basket.addItem(productId).then(basket=>dispatch( setBasket(basket)))\r\n    //     .catch(error=>console.log(error))\r\n    //     .finally(()=>setStatus({loading:false,name:''}));\r\n\r\n\r\n    // }\r\n    \r\n    // const handleRemoveItemusingContext=(productId:number,quantity=1,name:string)=>{\r\n    //   setStatus({loading:true,name:name});\r\n    //   agent.Basket.deleteItem(productId,quantity)\r\n    //   .then(()=>dispatch( removeItem({productId,quantity})))\r\n    //   .catch(error=>console.log(error))\r\n    //   .finally(()=>setStatus({loading:false,name:''}));\r\n    // }\r\n\r\n\r\n  //   const handleAddItem=(productId:number)=>{\r\n      \r\n  //     dispatch( addBasketItemAsync({productId:productId}))\r\n\r\n\r\n\r\n  // }\r\n  //   const handleRemoveItem=(productId:number,quantity=1,name:string)=>{\r\n  //     dispatch( removeBasketItemAsync({productId:productId,quantity:quantity,name}))\r\n\r\n  //   }\r\n   \r\n\r\n    if(!basket || basket.items.length===0)\r\n    return  <Navigate to=\"../\" />\r\n    // <Typography sx={{mt:10}} variant=\"h3\" color=\"initial\"> Basket is empty</Typography>\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <Typography sx={{mt:10}}  variant=\"h4\" color=\"initial\"> Buyer Id is :{basket.buyerId}</Typography> */}\r\n        <BasketTable items={basket.items} />\r\n       \r\n      <Grid container spacing={0} sx={{mt:1}}>\r\n                  <Grid item xs={6}  />\r\n                  <Grid item xs={6}>\r\n                      <BasketSummary/>\r\n                      <Button  component={Link}\r\n                to={'../checkout'}\r\n                variant='contained'\r\n                size='large'\r\n                fullWidth>\r\n                  Check Out\r\n\r\n                      </Button>\r\n                  \r\n                  </Grid>\r\n                \r\n      </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { toast } from 'react-toastify';\r\nimport { SingInUser } from './accountSlice';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function Login() {\r\n  \r\n    // const [validationErrors, setValidationErrors] = useState([])\r\n    const {register,handleSubmit,setError,formState:{isSubmitting,isValid,errors}}=useForm({\r\n        mode:'all'\r\n    });\r\n    const {user}=useAppSelector(state=>state.account);\r\n\r\n\r\n    const dispach=useAppDispatch();\r\n    const navigate=useNavigate();\r\n\r\n\r\n    const handleApiErrors=(errors:string[])=>{\r\n        if(errors){\r\n            errors.forEach(error=>{\r\n                if(error.includes('Password')){\r\n                    setError('password',{message:error});\r\n                }else if (error.includes('Email')){\r\n                    setError('email',{message:error});\r\n                }\r\n                else if (error.includes('Username')){\r\n                    setError('username',{message:error});\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(user) navigate('../');\r\n \r\n    }, [user,navigate])\r\n    \r\n\r\n\r\n  return (\r\n    // <ThemeProvider theme={defaultTheme}>\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n        {/* <CssBaseline /> */}\r\n        <Box\r\n          sx={{\r\n            marginTop: 13,\r\n            p:3,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n            {/* <AppRegistration /> */}\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Register\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit((data:FieldValues)=>\r\n\r\n            agent.Account.register(data)\r\n            .then(async()=>{\r\n                toast.success('Registeration Successful');\r\n                \r\n            await dispach(SingInUser({Username:data.username,Password:data.password}));\r\n            navigate('../');\r\n\r\n\r\n            })\r\n            \r\n            .catch(error=>handleApiErrors(error))\r\n            )} noValidate sx={{ mt: 1 }}>\r\n\r\n                {\r\n    \r\n\r\n\r\n                }\r\n\r\n\r\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n          </Avatar>\r\n            <TextField\r\n            \r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Username\"\r\n            //   autoComplete=\"email\"\r\n              autoFocus\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('username',{required:true})}\r\n            error={!!errors.username}\r\n            helperText={errors?.username?.message}\r\n            />\r\n             <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Email\"\r\n            //   autoComplete=\"email\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('email',{\r\n                required:true,\r\n                pattern:{\r\n                    value:/^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                    message:'Not a valid Email Address'\r\n                }\r\n                })}\r\n            error={!!errors.email}\r\n            helperText={errors?.email?.message}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n            //   name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n                {...register('password',\r\n                        {required:'كلمة المرور مطلوبة',\r\n                            pattern:{\r\n                                value:/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.*\\s).{8,}$/,\r\n                                message:'Not a valid Password'\r\n                            }\r\n                        \r\n                        }\r\n                    )\r\n                }\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message}\r\n\r\n\r\n\r\n            //   autoComplete=\"current-password\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.password}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n             {/* {\r\n                validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {\r\n                            validationErrors.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>{error}</ListItemText>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Alert>\r\n            } */}\r\n\r\n            \r\n            <LoadingButton\r\n            disabled={!isValid}\r\n            loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Register\r\n            </LoadingButton>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Typography \r\n                component={Link}\r\n                to={\"../login\"}\r\n               sx={{fontWeight:'bold',color:'primary.main',textDecoration:'none'}}\r\n                >\r\n                  {\"Already have an account? Sign In\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\r\n      </Container>\r\n    // { </ThemeProvider> }\r\n  );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { SingInUser } from './accountSlice';\r\nimport { useEffect } from 'react';\r\n\r\n// function Copyright(props: any) {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n// const defaultTheme = createTheme();\r\n\r\nexport default function Login() {\r\n    const {user}=useAppSelector(state=>state.account);\r\n\r\n    const dispach=useAppDispatch();\r\n    const navigate=useNavigate();\r\n    const location=useLocation();\r\n\r\n    const {register,handleSubmit,formState:{isSubmitting,isValid,errors}}=useForm({\r\n        mode:'all'\r\n    });\r\n\r\n    const submitForm=async(data:FieldValues)=>{\r\n        try {\r\n            // await agent.Account.login(data);//.catch(error => console.log(error));\r\n\r\n            await dispach(SingInUser(data)).then(data=>{\r\n                if(!(data.meta.requestStatus==='rejected')){\r\n\r\n                    navigate(location.state?.from?.pathname||'../');\r\n\r\n                }\r\n\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n      if(user) navigate(location.state?.from?.pathname||'../');\r\n\r\n    }, [user,navigate,location.state?.from?.pathname])\r\n    \r\n\r\n    // const [values,setValuse]=React.useState({\r\n    //     username:'',\r\n    //     password:''\r\n    // });\r\n\r\n\r\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n//     event.preventDefault();\r\n//     agent.Account.login(values);\r\n\r\n\r\n\r\n\r\n//     //read data from  controls###\r\n//     // const data = new FormData(event.currentTarget);\r\n//     // console.log({\r\n//     //   email: data.get('email'),\r\n//     //   password: data.get('password'),\r\n//     // });\r\n//   };\r\n\r\n//   const handleInputChange=(event:any)=>{\r\n//     const {name,value}=event.target;\r\n\r\n//     setValuse({...values,[name]:value});\r\n//   }\r\n\r\n  return (\r\n    // <ThemeProvider theme={defaultTheme}>\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n        {/* <CssBaseline /> */}\r\n        <Box\r\n          sx={{\r\n            marginTop: 20,\r\n            p:3,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Username\"\r\n            //   autoComplete=\"email\"\r\n              autoFocus\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('username',{required:true})}\r\n            error={!!errors.username}\r\n            helperText={errors?.username?.message}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n            //   name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              {...register('password',{required:'كلمة المرور مطلوبة'})}\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message}\r\n\r\n\r\n\r\n            //   autoComplete=\"current-password\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.password}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <LoadingButton\r\n            disabled={!isValid}\r\n            loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Typography \r\n                component={Link}\r\n                to={\"../register\"}\r\n               sx={{fontWeight:'bold',color:'primary.main',textDecoration:'none'}}\r\n                >\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\r\n      </Container>\r\n    // { </ThemeProvider> }\r\n  );\r\n}","import { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\ntype Props={\r\n\r\n    children : JSX.Element,\r\n    roles?:string[]\r\n}\r\nexport default function ProtectedRout({children,roles}:Props) {\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useAppSelector(state=>state.basket);\r\n\r\n    const location=useLocation();\r\n    if(!user)return <Navigate to=\"../login\" state={{from:location}}/>\r\n    if(roles&&!roles.some(r=>user.roles?.includes(r))){\r\n        toast.error('Do not authorized to Access Inventory !',{toastId:'err1'})\r\n        return <Navigate to=\"../\" state={{from:location}}/>\r\n\r\n    }\r\n\r\n    // if(!basket||basket.items.length===0)return <Navigate to=\"../login\" />\r\n    \r\n    return children;\r\n\r\n}\r\n","import { Box, Typography, Button, Grid } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetails({ order, setSelectedOrder }: Props) {\r\n\r\n  const  subtotal = order?.orderItems.reduce((sum,item)=>sum+(item.quantity*item.price),0)??0;\r\n  const itemCounts=order?.orderItems.reduce((count,item)=>count+item.quantity,0)??0;\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ marginTop: 8 }} display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <Box sx={{ marginTop: -10 }}>\r\n                <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n                <Grid container>\r\n                    <Grid item xs={6} />\r\n                    <Grid item xs={6}>\r\n                        <BasketSummary subtotal={subtotal} itemCounts={itemCounts}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport Loader from \"../../app/layout/Loader\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport { DoneAll } from \"@mui/icons-material\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[]|null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n     \r\n         agent.Orders.list()\r\n        .then(orders=>setOrders(orders))\r\n        .catch(error=>console.log(error))\r\n        .finally(()=>setLoading(false))\r\n    }, [])\r\n\r\n    if(loading)return <Loader message=\"Loading order...\"/>\r\n    if(selectedOrderNumber>0)return (\r\n        <OrderDetails order={orders?.find(o=>o.id===selectedOrderNumber)!} setSelectedOrder={setSelectedOrderNumber} />\r\n    )\r\n\r\n  return ( \r\n    <TableContainer sx={{mt:10}} component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>#</TableCell>\r\n          <TableCell align=\"center\">Order Date</TableCell>\r\n          <TableCell align=\"center\">Total</TableCell>\r\n          <TableCell align=\"center\">Order Status</TableCell>\r\n          <TableCell align=\"center\">Details</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {orders!.map((row) => (\r\n          <TableRow\r\n            key={row.id}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row.id}\r\n            </TableCell>\r\n            <TableCell align=\"center\">{row.orderDate}</TableCell>\r\n            <TableCell align=\"center\">{currencyFormat(row.total)}</TableCell>\r\n            <TableCell align=\"center\">\r\n              {row.orderStatus===\"PaymentReceived\"?\r\n              (<Button variant=\"contained\" color=\"success\" size=\"small\" endIcon={<DoneAll/>} >{row.orderStatus}</Button>)\r\n              :\r\n              (row.orderStatus)\r\n              \r\n              }\r\n            \r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n                <Button onClick={()=>setSelectedOrderNumber(row.id)}>\r\n                    View\r\n                </Button>\r\n\r\n\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>  )\r\n}\r\n","import { TextField } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string \r\n    multiline?:boolean\r\n    rows?:number\r\n    type?:string\r\n}\r\nexport default function AppTextInput(props:Props) {\r\n    const {fieldState,field}=useController({...props,defaultValue:''})\r\n  return (\r\n    <TextField\r\n    {...props}\r\n    {...field}\r\n    multiline={props.multiline}\r\n    rows={props.rows}\r\n    type={props.type}\r\n    \r\n    fullWidth\r\n    variant=\"outlined\"\r\n    error={!!fieldState.error}\r\n    helperText={fieldState.error?.message}\r\n    />\r\n  )\r\n}\r\n","import { Checkbox, FormControlLabel } from \"@mui/material\"\r\nimport { UseControllerProps, useController } from \"react-hook-form\"\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string ,\r\n    disabled:boolean\r\n}\r\nexport default function AppCheckBox(props:Props) {\r\n    const {field}=useController({...props,defaultValue:false})\r\n  return (\r\n    <FormControlLabel\r\n    control={<Checkbox disabled={props.disabled} color=\"secondary\" {...field} checked={field.value} />}\r\n    label={props.label}\r\n        />\r\n  ) \r\n}\r\n","\r\nimport { Typography, Grid } from \"@mui/material\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport AppCheckBox from \"../../app/components/AppCheckBox\";\r\n\r\nexport default function AddressForm() {\r\n\r\n    // const {control}=useForm();\r\n        const {control,formState}=useFormContext();  // نستخدمها طالما ان الفورم موجود داخل فورم بروفايدر داخل صفحة الدفع\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} >\r\n                    <AppTextInput control={control} name=\"fullName\" label=\"Full Name\" />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                <AppTextInput control={control} name=\"address1\" label=\"Address 1\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <AppTextInput control={control} name=\"address2\"  label=\"Address 2\"  />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control} name=\"city\" label=\"City\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control} name=\"country\" label=\"Country\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control} name=\"postalCode\" label=\"Postal Code\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control}  name=\"phone\" label=\"Phone\" />\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                   <AppCheckBox \r\n                   disabled={!formState.isDirty}\r\n                   name=\"saveAddress\" label=\"Save this as the default address\"\r\n                   control={control}\r\n                   />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useRef, useImperativeHandle } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props,\r\n    ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component \r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n});","\r\nimport { Typography, Grid, TextField } from \"@mui/material\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from \"@stripe/react-stripe-js\";\r\n// import { StripeInput } from \"./InputBaseComponentProps\";\r\n\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { StripeInput } from \"./InputBaseComponentProps\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\ntype Props={\r\n    cardState:{elementError:{[key in StripeElementType]?:string}},\r\n    onCardInputChange:(event:any)=>void\r\n}\r\nexport default function PaymentForm({cardState,onCardInputChange}:Props) {\r\n    const {control}=useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                <AppTextInput control={control} name=\"nameOnCard\" label=\"Name On Card\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                         InputLabelProps={{shrink:true}}\r\n                         InputProps={{\r\n                            inputComponent:StripeInput,\r\n                            inputProps:{\r\n                                component:CardNumberElement\r\n                            }\r\n                         }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                    onChange={onCardInputChange}\r\n                    error={!!cardState.elementError.cardExpiry}\r\n                    helperText={cardState.elementError.cardExpiry}\r\n                        id=\"expDate\"\r\n                        label=\"Expiry date\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        InputProps={{\r\n                            inputComponent:StripeInput,\r\n                            inputProps:{\r\n                                component:CardExpiryElement\r\n                            }\r\n                         }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                    onChange={onCardInputChange}\r\n                    error={!!cardState.elementError.cardCvc}\r\n                    helperText={cardState.elementError.cardCvc}\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        InputProps={{\r\n                            inputComponent:StripeInput,\r\n                            inputProps:{\r\n                                component:CardCvcElement\r\n                            }\r\n                         }}\r\n                    />\r\n                </Grid>\r\n               \r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\n\r\n\r\n\r\nexport default function Review() {\r\n\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" sx={{mb:-10}}>\r\n                Order summary\r\n            </Typography>\r\n            <BasketTable items={basket!.items} isBasket={false} />\r\n       \r\n       <Grid container spacing={0} sx={{mt:1}}>\r\n                   <Grid item xs={6}  />\r\n                   <Grid item xs={6}>\r\n                       <BasketSummary/>\r\n                       \r\n                   \r\n                   </Grid>\r\n                 \r\n       </Grid>\r\n           \r\n        </>\r\n    );\r\n}\r\n","import * as yup from 'yup';\r\nimport \"yup-phone\";\r\n\r\n \r\nexport const validationSchema=[\r\n\r\n    yup.object({\r\n\r\n        fullName:yup.string().required('Full name is required'),\r\n        address1:yup.string().required('Address 1 is required'),\r\n        address2:yup.string().required(),\r\n        city:yup.string().required(),\r\n        country:yup.string().required(),\r\n        postalCode:yup.string().required(),\r\n        phone:yup.string().phone('00967').required(),\r\n    \r\n    \r\n    \r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n\r\n        nameOnCard:yup.string().required('Name is required'),\r\n        // cardNumber:yup.string().required('cardNumber is required'),\r\n\r\n    }),\r\n\r\n\r\n] ","\r\nimport { Paper, Typography, Stepper, Step, StepLabel, Box, Button, Container } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { useStripe, useElements, CardNumberElement } from \"@stripe/react-stripe-js\";\r\nimport {history} from \"../..\"\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\n\r\n\r\nexport default function CheckoutPage() {\r\n  \r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch=useAppDispatch();\r\n\r\n    const [cardState,setCardState]=useState<{elementError:{[key in StripeElementType]?:string}}>({elementError:{}});\r\n  \r\n    const [cardComplete,setCardComplete]=useState<any>({cardNumber:false,cardExpiry:false,cardCvc:false});\r\n\r\n\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    \r\n    const onCardInputChange=(event :any)=>{\r\n        setCardState({\r\n            ...cardState,\r\n            elementError:{\r\n                ...cardState.elementError,\r\n                [event.elementType]:event.error?.message\r\n            }\r\n        });\r\n        setCardComplete({...cardComplete,[event.elementType]:event.complete})\r\n    }\r\n\r\n\r\n    const getStepContent=(step: number)=> {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1: \r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange}  />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n    const currentValidatoinSchema=validationSchema[activeStep];\r\n\r\n    const methods=useForm({\r\n\r\n        mode:'all',\r\n        resolver:yupResolver<any>(currentValidatoinSchema)\r\n            });// use form hook\r\n\r\n\r\n            useEffect(() => {\r\n             \r\n                agent.Account.fetchAddress()\r\n                .then(response=>{\r\n                    if(response){\r\n                        methods.reset({...methods.getValues(),...response,saveAddress:false})\r\n                    }\r\n                })\r\n            }, [methods])\r\n            \r\n\r\n    const handleNext = async (data:FieldValues) => {\r\n\r\n        // const {nameOnCard,saveAddress,...shippingAddress}=data;\r\n      if(activeStep===steps.length-1){\r\n\r\n        // setLoading(true);\r\n        // try {\r\n        //     console.log(data);\r\n\r\n        //     const orderNumber =await agent.Orders.create({saveAddress,shippingAddress});\r\n        //     setOrderNumber(orderNumber);\r\n        //     setActiveStep(activeStep+1);\r\n        //     setLoading(false);\r\n        //     setTimeout(() => {\r\n        //         dispatch(clearBasket());\r\n        //     }, 3000);\r\n\r\n\r\n\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n\r\n        //     setLoading(false);\r\n\r\n        // }\r\n\r\n        await submitOrder(data);\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }else\r\n      {\r\n        setActiveStep(activeStep + 1);\r\n\r\n\r\n      }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    const submitOrder = async (data: FieldValues) => {\r\n        toast.error(methods.formState.isValid);\r\n        \r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });            \r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n        // if(!basket||basket.items.length===0)return <Navigate to=\"../\" />\r\n\r\n\r\n\r\n        const submitDisable=():boolean=>{\r\n            if(activeStep===steps.length-1){\r\n                return !cardComplete.cardNumber||\r\n                !cardComplete.cardExpiry||\r\n                !cardComplete.cardCvc||\r\n                !methods.formState.isValid\r\n\r\n            }else\r\n            {\r\n                return  !methods.formState.isValid\r\n            }\r\n\r\n        }\r\n   \r\n\r\n    return (\r\n\r\n      \r\n        <FormProvider {...methods} > \r\n                <Container maxWidth=\"lg\"> \r\n            <Paper variant=\"outlined\" sx={{ mt: 10, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper> \r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        \r\n                        <>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    {paymentMessage}\r\n                                </Typography>\r\n                                {paymentSucceeded ? (\r\n                                    <>\r\n                                        <Typography gutterBottom variant=\"subtitle1\">\r\n                                            Your order number is #{orderNumber}. We have emailed your order\r\n                                            confirmation, and will send you an update when your order has\r\n                                            shipped.\r\n                                        </Typography>\r\n                                        <Button variant='contained' onClick={() => {\r\n                                            history.push('../')\r\n                                        }}>\r\n                                            Go Home\r\n                                        </Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <Button variant='contained' onClick={handleBack}>\r\n                                        Go back and try again\r\n                                    </Button>\r\n                                )}\r\n                            </>\r\n\r\n\r\n                    ) : (\r\n                        <form  onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                loading={loading}\r\n                                    disabled={submitDisable()}\r\n\r\n                                    variant=\"contained\"\r\n                                   type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper> \r\n        </Container>\r\n        </FormProvider>\r\n\r\n\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport Loader from \"../../app/layout/Loader\";\r\nimport { history } from \"../..\";\r\n\r\n\r\nconst stripePromise=loadStripe('pk_test_51NLvadLRCdXbPQVRmp4hVGpvcZFMegnlrLgyVKkMZMVeLAFQqvhjEqfYZv0rwrKV2JmnYZLstWwaKqXxkXB0zliB00a2rpjr3s');\r\nexport default function CheckoutWrapper() {\r\n  const dispatch=useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const {basket}=useAppSelector(state=>state.basket);\r\n\r\n  useEffect(() => {\r\n\r\n    if(!basket || basket.items.length===0){\r\n      history.push('../login');\r\n      return;\r\n    }\r\n   agent.Payment.createPaymentIntent()\r\n   .then(basket=>dispatch(setBasket(basket)))\r\n   .catch(error=>console.log(error))\r\n   .finally(()=>setLoading(false));\r\n\r\n   //eslint-disable-next-line\r\n  }, [dispatch])\r\n  \r\n\r\n  if(loading)return <Loader message=\"Loading check out\"/>\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n        <CheckoutPage/>\r\n    </Elements>\r\n  )\r\n}\r\n","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string\r\n    items:string[]\r\n}\r\nexport default function AppSelectList(props:Props) {\r\n    const {field,fieldState}=useController({...props,defaultValue:''});\r\n\r\n  return (\r\n    <FormControl fullWidth error={!!fieldState.error}>\r\n    <InputLabel >{props.label}</InputLabel>\r\n    <Select\r\n      \r\n      value={field.value}\r\n      label={props.label}\r\n      onChange={field.onChange}\r\n    >\r\n        {\r\n            props.items.map((item,index)=>(\r\n\r\n                <MenuItem key={index}\r\n                value={item}>\r\n                    {item}\r\n\r\n\r\n                </MenuItem>\r\n\r\n\r\n            ))\r\n        }\r\n\r\n     \r\n    </Select>\r\n    <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n  </FormControl>\r\n  )\r\n}\r\n","import { UploadFile } from \"@mui/icons-material\";\r\nimport { FormControl, Typography, FormHelperText } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\"\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n   \r\n}\r\nexport default function AppDropZone(props:Props) {\r\n    const {fieldState,field}=useController({...props,defaultValue:null})\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 100,\r\n        width: 500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: '#7b1fa2'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        acceptedFiles[0]=Object.assign(acceptedFiles[0],{preview:URL.createObjectURL(acceptedFiles[0])});\r\n        field.onChange(acceptedFiles[0]);\r\n\r\n\r\n\r\n    }, [field])\r\n      const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n    \r\n      return (\r\n        <div {...getRootProps()}>\r\n         \r\n          <FormControl error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n                <input {...getInputProps()} />\r\n                 <UploadFile sx={{ fontSize: '30px' }} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText> \r\n        </FormControl>\r\n        </div>\r\n      )\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const productValidationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when('pictureUrl', {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required('Please upload an image')\r\n    })\r\n})","import { Box, Paper, Typography, Grid, Button } from \"@mui/material\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useEffect } from \"react\";\r\nimport AppSelectList from \"../../app/components/AppSelectList\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport AppDropZone from \"../../app/components/AppDropZone\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { productValidationSchema } from \"./productValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setProduct } from \"../catalog/catalogSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\n\r\ntype Props={\r\n    product?:Product,\r\n    cancelEdit:()=>void\r\n}\r\n\r\nexport default function ProductForm({product,cancelEdit}:Props) {\r\n    const { control ,reset,handleSubmit,watch,formState:{isDirty,isSubmitting}} = useForm({\r\n        resolver:yupResolver<any>(productValidationSchema)\r\n    });\r\n    const {brands,types}=useProducts();\r\n\r\n    const watchFile=watch('file',null);\r\n    const disptach=useAppDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(product && !watchFile && !isDirty)reset(product)\r\n        return()=>{\r\n            if(watchFile)URL.revokeObjectURL(watchFile.preview);\r\n        }\r\n    },[product,reset,watchFile,isDirty])\r\n\r\n    const handleSubmitData=async (data:FieldValues)=>{\r\n        try {\r\n            let response:Product;\r\n            if(product){\r\n                response=await agent.Admin.updateProduct(data);\r\n                disptach(setProduct(response));\r\n                cancelEdit();\r\n            }else{\r\n                response=await agent.Admin.createProduct(data);\r\n\r\n                disptach(setProduct(response));\r\n                cancelEdit();\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    }\r\n    return (\r\n        <Box component={Paper} sx={{ px: 4, py: 2, mt: 10, mx: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n\r\n           \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='name' label='Product name' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppSelectList control={control} items={brands}  name='brand' label='Brand' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppSelectList control={control} items={types}  name='type' label='Type' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} type=\"number\" name='price' label='Price' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} type=\"number\" name='quantityInStock' label='Quantity in Stock' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} multiline rows={3} name='description' label='Description' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box display='flex'>\r\n                    <AppDropZone control={control} name='file' />\r\n                    {\r\n                        watchFile?(\r\n                            <img src={watchFile.preview} alt='preview' style={{marginLeft:80,maxHeight:150}}/>\r\n                        ):(\r\n                            <img src={product?.pictureUrl} alt={product?.name} style={{marginLeft:80,maxHeight:150}}/>\r\n                        )\r\n                    }\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\r\n                <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\r\n                <LoadingButton loading={isSubmitting} type=\"submit\" variant='contained' color='primary'>Submit</LoadingButton>\r\n            </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","import { Edit, Delete } from \"@mui/icons-material\";\r\nimport { Box, Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport Loader from \"../../app/layout/Loader\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport { useState } from \"react\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nexport default function Inventory() {\r\n\r\n    const {products,productsLoaded,paginationData}=useProducts();\r\n\r\n       const dispatch = useAppDispatch();\r\n\r\n       const [editMode,setEditMode]=useState(false);\r\n       const [selectedProduct,setSelectedProduct]=useState<Product|undefined>(undefined);\r\n       const [loading,setLoading]=useState(false);\r\n       const [target,setTarget]=useState(0);\r\n\r\n\r\n       const handleSelectProduct=(product:Product)=>{\r\n        setSelectedProduct(product);\r\n        setEditMode(true);\r\n       }\r\n\r\n        const handleDeleteProduct=(id:number)=>{\r\n            setLoading(true);\r\n            setTarget(id);\r\n            agent.Admin.deleteProduct(id)\r\n            .then(\r\n                ()=>{\r\n                    dispatch(removeProduct(id));\r\n                    dispatch(setPageNumber({pageNumber:1}))\r\n                }\r\n            )\r\n            .catch(error=>console.log(error))\r\n            .finally(()=>setLoading(false))\r\n        }\r\n\r\n       const cancelEdit=()=>{\r\n        if(selectedProduct) setSelectedProduct(undefined);\r\n        setEditMode(false);\r\n\r\n\r\n       }\r\n       if(editMode)return <ProductForm product={selectedProduct} cancelEdit={cancelEdit}/>\r\n\r\n    if (!productsLoaded) return <Loader message='Loading Products...' />\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\r\n                <Button sx={{ m: 2 }} onClick={()=>setEditMode(true)} size='large' variant='contained'>Create</Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* <TableCell>#</TableCell> */}\r\n                            <TableCell align=\"left\">Product</TableCell>\r\n                            <TableCell align=\"center\">Price</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">Brand</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products.map((product) => (\r\n                            <TableRow\r\n                                key={product.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                {/* <TableCell component=\"th\" scope=\"row\">\r\n                                    {product.id}\r\n                                </TableCell> */}\r\n                                <TableCell align=\"left\">\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\r\n                                        <span>{product.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{currencyFormat(product.price)}</TableCell>\r\n                                <TableCell align=\"center\">{product.type}</TableCell>\r\n                                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={()=>handleSelectProduct(product)} startIcon={<Edit/>} />\r\n                                    <LoadingButton loading={loading && target===product.id}\r\n                                    onClick={()=>handleDeleteProduct(product.id)}\r\n                                    startIcon={<Delete />} color='error' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {paginationData &&\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination\r\n                        paginationData={paginationData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}","import { Box } from \"@mui/material\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutUs from \"../../features/about/AboutUs\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactUs from \"../../features/contact/ContactUs\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\n// import { useSouqContext } from \"../context/SouqContext\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Loader from \"./Loader\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Register from \"../../features/account/Register\";\nimport Login from \"../../features/account/Login\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport ProtectedRout from \"./ProtectedRout\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n\n  // const {setBasket}=useSouqContext();\n\n  const dispatch=useAppDispatch();\n\n\n  const [loading, setLoading] = useState(true);\n\n  enum myRols {\n    Admin = 'Admin',\n    Member='Member'\n   \n  }\n\n\n\n\n  const initApp=useCallback(async()=>{\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n\n\n\n    } catch (error) {\n      console.log(error)\n    }\n  },[dispatch]) \n\n  useEffect(() => {\n\n    // dispatch(fetchCurrentUser());\n\n    // const buyerId=Cookies.get('buyerId');\n\n    // if(buyerId){\n    //   // agent.Basket.get()\n    //   // .then(basket=>setBasket(basket))\n    //   // .catch(error=>console.log(error))\n    //   // .finally(()=>setLoading(false))\n\n    //   agent.Basket.get()\n    //   .then(basket=>dispatch(setBasket(basket)))\n    //   .catch(error=>console.log(error))\n    //   .finally(()=>setLoading(false))\n\n\n\n \n    // }else{\n    //   setLoading(false)\n    //   console.log('error')\n\n    // }\n\n    initApp().then(()=>setLoading(false))\n\n  },[initApp] )\n  \n  if(loading)return<Loader message=\"Loading App...!!!\" />\n\n  \n\n  return (\n    <>\n      <ToastContainer theme=\"colored\" position=\"bottom-right\" autoClose={3000} hideProgressBar />\n      <Header />\n      <Box sx={{ mt: 7, mb: 2, px: 2 }}>\n        <Routes>\n          <Route path=\"/\" element={<Catalog />} />\n          <Route path=\"catalog\" element={<Catalog />} />\n          <Route path=\"catalog/:id\" element={<ProductDetails />} />\n          <Route path=\"about\" element={<AboutUs />} />\n          <Route path=\"contact\" element={<ContactUs />} />\n          <Route path=\"basket\" element={<BasketPage />} />\n          <Route path=\"checkout\" element={<ProtectedRout><CheckoutWrapper /></ProtectedRout> } />\n          <Route path=\"orders\" element={<ProtectedRout ><Orders/></ProtectedRout> } />\n          <Route path=\"inventory\" element={<ProtectedRout roles={[myRols.Admin]} ><Inventory/></ProtectedRout> } />\n\n          <Route path=\"server-error\" element={<ServerError />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"login\" element={<Login />} />\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from 'history';\nimport { HistoryRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { SouqStore } from './app/store/configureStore';\n\n// import { configureStore } from './app/store/configureStore';\n\n// const SouqStore=configureStore();\n\nexport const history = createBrowserHistory();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HistoryRouter history={history}>\n      {/* <SouqProvider> */}\n        <Provider store={SouqStore}>\n        <App />\n\n        </Provider>\n      {/* </SouqProvider> */}\n    </HistoryRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
========
{"version":3,"sources":["app/models/PaginationData.ts","features/contact/counterSlice.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutUs.tsx","app/layout/Loader.tsx","app/helper/helper.ts","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckBoxButton.tsx","app/components/AppPagination.tsx","app/hooks/useProducts.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactUs.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Register.tsx","features/account/Login.tsx","app/layout/ProtectedRout.tsx","features/orders/OrderDetails.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckBox.tsx","features/checkout/AddressForm.tsx","features/checkout/InputBaseComponentProps.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppSelectList.tsx","app/components/AppDropZone.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","paginationData","this","counterSlice","createSlice","name","initialState","data","title","reducers","increment","state","action","payload","decrement","actions","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","condition","Cookies","addBasketItemAsync","productId","quantity","parseFloat","toString","addItem","removeBasketItemAsync","deleteItem","basketSlice","basket","status","setBasket","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","dispatch","setPaginationData","fetchProductAsync","details","fetchfiltersAsync","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","resetProductParams","setPageNumber","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","SingInUser","Account","login","userDto","user","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","removeItem","history","push","roles","atob","token","split","toast","SouqStore","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","key","flat","Promise","reject","responseBody","requests","url","then","body","post","delete","put","createFormData","product","formData","FormData","id","Errors","get400Error","get401Error","get404Error","getValidationError","get500Error","values","register","fetchAddress","Orders","fetch","create","Payment","createPaymentIntent","Admin","createProduct","updateProduct","deleteProduct","AboutUs","useState","validationErrors","setValidationErrors","Container","sx","mt","Typography","variant","gutterBottom","color","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","Loader","message","Backdrop","open","invisible","Box","display","justifyContent","alignItems","height","CircularProgress","size","position","top","currencyFormat","amount","toFixed","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","brand","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","component","image","pictureUrl","alt","objectFit","CardContent","textAlign","price","type","CardActions","style","LoadingButton","loading","Link","to","ProductCardSkeleton","Grid","item","xs","Skeleton","animation","width","marginBottom","paddingBottom","margin","ProductList","products","container","rowSpacing","columnSpacing","sm","lg","ProductSearch","setsearchTerm","debounceSearch","debounce","event","target","value","TextField","label","onChange","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckBoxButton","checked","checkedItems","setcheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalCount","totalPages","ml","Pagination","shape","count","page","e","useProducts","selectAll","useEffect","sortOption","spacing","Paper","mb","p","NotFound","src","ProductDetails","productStatus","useParams","selectById","setQuantity","find","document","background","includes","marginTop","md","Divider","borderBottomWidth","my","TableContainer","Table","TableHead","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactUs","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","typography","currentTarget","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","linkStyle","Header","itemCounts","reduce","sum","AppBar","Toolbar","NavLink","textDecoration","IconButton","Badge","badgeContent","ShoppingCart","ServerError","navigate","useNavigate","useLocation","detail","BasketSummary","subtotal","deliveryFee","TableBody","colSpan","align","fontStyle","BasketTable","isBasket","handleRemoveItem","minWidth","row","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","useForm","mode","handleSubmit","setError","formState","isSubmitting","isValid","dispach","maxWidth","flexDirection","m","onSubmit","success","Username","username","Password","password","forEach","handleApiErrors","noValidate","autoFocus","required","helperText","pattern","location","submitForm","requestStatus","from","pathname","ProtectedRout","children","some","r","toastId","OrderDetails","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","orderDate","total","endIcon","DoneAll","AppTextInput","props","useController","defaultValue","fieldState","field","multiline","rows","AppCheckBox","AddressForm","useFormContext","isDirty","StripeInput","forwardRef","ref","Component","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","country","postalCode","phone","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidatoinSchema","methods","resolver","yupResolver","reset","getValues","saveAddress","handleNext","submitOrder","handleBack","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","stripePromise","loadStripe","CheckoutWrapper","AppSelectList","InputLabel","Select","index","FormHelperText","AppDropZone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","productValidationSchema","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","disptach","revokeObjectURL","handleSubmitData","px","py","mx","marginLeft","maxHeight","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","myRols","initApp","theme","autoClose","hideProgressBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.634a03f6.chunk.js","sourcesContent":["export interface PaginationData {\r\n    currentPage: number\r\n    totalPages: number\r\n    pageSize: number\r\n    totalCount: number\r\n}\r\n\r\nexport class PaginatedResponse<T>{\r\n    items: T;\r\n    paginationData: PaginationData;\r\n    constructor(items: T, paginationData: PaginationData) {\r\n        this.items = items;\r\n        this.paginationData = paginationData;\r\n    }\r\n}","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nexport interface CounterState{\r\n\r\n    data:number,\r\n    title:string\r\n}\r\n\r\nconst initialState:CounterState={\r\n    data:40,\r\n    title:'Counter Reducer By Redux toolkit'\r\n}\r\n\r\n\r\nexport const counterSlice=createSlice({\r\n    name:'counter',\r\n    initialState,\r\n    reducers:{\r\n        increment:(state,action)=>{\r\n            state.data+=action.payload\r\n        },\r\n        decrement:(state,action)=>{\r\n            state.data-=action.payload\r\n        }\r\n    }\r\n})\r\nexport const {increment,decrement}=counterSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport { Basket } from '../../app/models/basket';\r\nimport agent from '../../app/api/agent';\r\nimport Cookies from 'js-cookie';\r\n//rxslice    snippit\r\n\r\n\r\n\r\n\r\nexport interface BasketState{\r\n\r\n    basket:Basket|null\r\n    status:string\r\n}\r\nconst initialState:BasketState = {\r\n    basket:null,\r\n    status:'idle'\r\n\r\n}\r\n\r\nexport const fetchBasketAsync=createAsyncThunk<Basket>(\r\n  'basket/fetchBasketAsync',\r\n  async(_,thunkAPI)=>{\r\n    try {\r\n      return await agent.Basket.get();\r\n     \r\n      \r\n    } \r\n    catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  },{\r\n    condition:()=>{\r\n      if(!Cookies.get('buyerId')) return false;\r\n    }\r\n  }\r\n)\r\n\r\n// in async we use thunkAPI for problems\r\nexport const addBasketItemAsync=createAsyncThunk<Basket,{productId:number,quantity?:number}>(\r\n\r\n  'basket/addBasketItemAsync',\r\n  async({productId,quantity=1},thunkAPI)=>{\r\n    try {\r\n      // console.log('quantity is'+quantity)\r\n\r\n      if(parseFloat(quantity.toString()) ===0){\r\n        quantity=1;\r\n        // console.log('quantity 1')\r\n\r\n      }\r\n      \r\n      \r\n      return await agent.Basket.addItem(productId,quantity);\r\n    } catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  }\r\n)\r\n\r\n\r\nexport const removeBasketItemAsync=createAsyncThunk<void,{productId:number,quantity:number,name?:string}>(\r\n\r\n  'basket/removeBasketItemAsync',\r\n  async({productId,quantity},thunkAPI)=>{\r\n    try {\r\n      return await agent.Basket.deleteItem(productId,quantity);\r\n    } catch (error:any) {\r\n      return thunkAPI.rejectWithValue({error:error.data})\r\n     }\r\n\r\n  }\r\n)\r\n\r\n\r\nconst basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    setBasket:(state,action)=>{\r\n        state.basket=action.payload\r\n    },\r\n    clearBasket:(state)=>{\r\n      state.basket=null;\r\n    }\r\n    // removeItem:(state,action)=>{\r\n    //     const {productId,quantity}=action.payload;\r\n    //     const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n    //     if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n    //     state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n    //     if(state.basket?.items[itemIndex].quantity===0)\r\n    //     state.basket.items.splice(itemIndex,1);\r\n    // }\r\n\r\n  },\r\n  extraReducers: (builder=> {\r\n    \r\n    // add\r\n    builder.addCase(addBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingAddItem'+action.meta.arg.productId;\r\n      // console.log(action)\r\n    });\r\n\r\n\r\n    ///delete \r\n\r\n    builder.addCase(removeBasketItemAsync.pending, (state,action)=>{\r\n      state.status='pendingRemoveItem'+action.meta.arg.productId+action.meta.arg.name;\r\n      // console.log(action)\r\n    });\r\n    builder.addCase(removeBasketItemAsync.fulfilled,(state,action)=>{\r\n      state.status='idle';\r\n      const {productId,quantity}=action.meta.arg;\r\n\r\n      const itemIndex=state.basket?.items.findIndex(i=>i.productId===productId);\r\n      if(itemIndex===-1 || itemIndex=== undefined) return ;\r\n      state.basket!.items[itemIndex].quantity-=quantity;\r\n\r\n      if(state.basket?.items[itemIndex].quantity===0)\r\n      state.basket.items.splice(itemIndex,1);\r\n\r\n\r\n    });\r\n    builder.addCase(removeBasketItemAsync.rejected,(state,action)=>{\r\n      state.status='idle';\r\n      console.log(action.payload);\r\n\r\n    });\r\n\r\n\r\n\r\n\r\n    builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled,fetchBasketAsync.fulfilled), (state,action)=>{\r\n      state.status='idle';\r\n      state.basket=action.payload;\r\n    });\r\n    \r\n    builder.addMatcher(isAnyOf(addBasketItemAsync.rejected,fetchBasketAsync.rejected), (state,action)=>{\r\n      state.status='idle';\r\n      console.log(action.payload);\r\n    });\r\n\r\n  })\r\n\r\n}); \r\n\r\nexport const {setBasket,clearBasket} = basketSlice.actions\r\n\r\nexport default basketSlice.reducer","import { createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { Product, ProductParams } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { RootState } from \"../../app/store/configureStore\";\r\nimport { PaginationData } from \"../../app/models/PaginationData\";\r\n\r\ntype CatalogState={\r\n  productsLoaded:boolean,\r\n  filtersLoaded:boolean,\r\n  status:string,\r\n  brands:string[],\r\n  types:string[],\r\n  productParams:ProductParams\r\n  paginationData:PaginationData|null\r\n}\r\nconst productsAdapter=createEntityAdapter<Product>();\r\n\r\nconst getAxiosParams=(productParams:ProductParams)=>{\r\n  const params=new URLSearchParams();\r\n  params.append('pageNumber',productParams.pageNumber.toString())\r\n  params.append('pageSize',productParams.pageSize.toString())\r\n  params.append('orderBy',productParams.orderBy)\r\n if(productParams.searchTerm) params.append('searchTerm',productParams.searchTerm)\r\n if(productParams.brands.length>0) params.append('brands',productParams.brands.toString())\r\n if(productParams.types.length>0) params.append('types',productParams.types.toString())\r\nreturn params\r\n\r\n}\r\n\r\nexport const fetchProductsAsync=createAsyncThunk<Product[],void,{state:RootState}>(\r\n\r\n    'catalog/fetchProductsAsync',\r\n    async(_,thunkAPI)=>{\r\n      const params=getAxiosParams(thunkAPI.getState().catalog.productParams); // this method get the global state or redux state\r\n\r\n      try {\r\n        const response= await agent.Catalog.list(params);\r\n        thunkAPI.dispatch(setPaginationData(response.paginationData))\r\n        return response.items;\r\n      } catch (error:any) {\r\n        return thunkAPI.rejectWithValue({error:error.data})\r\n      }\r\n  \r\n    }\r\n  )\r\n\r\n\r\n  export const fetchProductAsync=createAsyncThunk<Product,string>(\r\n\r\n    'catalog/fetchProductAsync',\r\n    async(productId,thunkAPI)=>{\r\n      try {\r\n        return await agent.Catalog.details(productId);\r\n      } catch (error:any) {\r\n       return thunkAPI.rejectWithValue({error:error.data})\r\n      }\r\n  \r\n    }\r\n  )\r\n  \r\n  export const fetchfiltersAsync=createAsyncThunk(\r\n\r\n    'catalog/fetchfiltersAsync',\r\n    async(_,thunkAPI)=>{\r\n      try {\r\n        return await agent.Catalog.fetchFilters();\r\n      } catch (error:any) {\r\n       return thunkAPI.rejectWithValue({error:error.data})\r\n      }\r\n  \r\n    }\r\n  )\r\n  \r\n  const initParams=()=>({\r\n\r\n    pageNumber:1,\r\n    pageSize:8,\r\n    orderBy:'name',\r\n    types:[],\r\n    brands:[]\r\n  })\r\n\r\n  const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState:productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded:false,\r\n        filtersLoaded:false,\r\n        status:'idle',\r\n        brands:[],\r\n        types:[],\r\n        productParams:initParams(),\r\n        paginationData:null\r\n         \r\n\r\n        \r\n    }), // get initialstate return all collections ids and entities inside coll\r\n    reducers: {\r\n      setProductParams:(state,action)=>{\r\n        state.productsLoaded=false;\r\n        state.productParams={...state.productParams,...action.payload,pageNumber:1}\r\n      },\r\n      resetProductParams:(state)=>{\r\n        state.productParams=initParams();\r\n      },\r\n      setPageNumber:(state,action)=>{\r\n        state.productsLoaded=false;\r\n        state.productParams={...state.productParams,...action.payload}\r\n      },\r\n    \r\n    setPaginationData:(state,action)=>{\r\n      state.paginationData=action.payload;\r\n    },\r\n    setProduct:(state,action)=>{\r\n      productsAdapter.upsertOne(state,action.payload);\r\n      state.productsLoaded=false;\r\n    },\r\n    removeProduct:(state,action)=>{\r\n      productsAdapter.removeOne(state,action.payload);\r\n    }\r\n    },\r\n    extraReducers: (builder=> {\r\n    \r\n        // GetAllListProducts\r\n        builder.addCase(fetchProductsAsync.pending, (state)=>{\r\n          state.status='pendingFetchProductsAsync';\r\n          // console.log(action)\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled,(state,action)=>{\r\n          state.status='idle';\r\n          productsAdapter.setAll(state,action.payload);\r\n          state.productsLoaded = true;\r\n\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected,(state,action)=>{\r\n          state.status='idle'\r\n          console.log(action.payload)\r\n\r\n        });\r\n\r\n        //get single product\r\n        builder.addCase(fetchProductAsync.pending, (state)=>{\r\n            state.status='pendingFetchProductAsync';\r\n            // console.log(action)\r\n          });\r\n          builder.addCase(fetchProductAsync.fulfilled,(state,action)=>{\r\n            state.status='idle';\r\n            productsAdapter.upsertOne(state,action.payload);\r\n  \r\n          });\r\n          builder.addCase(fetchProductAsync.rejected,(state,action)=>{\r\n            state.status='idle'\r\n            console.log(action)\r\n          });\r\n    \r\n\r\n          //filter single product\r\n        builder.addCase(fetchfiltersAsync.pending, (state)=>{\r\n          state.status='pendingFetchFiltersAsync';\r\n          // console.log(action)\r\n        });\r\n        builder.addCase(fetchfiltersAsync.fulfilled,(state,action)=>{\r\n          state.status='idle';\r\n          state.filtersLoaded=true;\r\n          state.brands=action.payload.brands;\r\n          state.types=action.payload.types;\r\n\r\n        });\r\n        builder.addCase(fetchfiltersAsync.rejected,(state,action)=>{\r\n          state.status='idle'\r\n        });\r\n  \r\n    \r\n       \r\n    \r\n      })\r\n  });\r\n  \r\n\r\nexport const productSelectors=productsAdapter.getSelectors((state:RootState)=>state.catalog);\r\n\r\nexport const {resetProductParams,setProductParams,setPaginationData,setPageNumber,setProduct,removeProduct}=catalogSlice.actions;\r\n//   export const {} = catalogSlice.actions\r\n  \r\n  export default catalogSlice.reducer","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit'\r\nimport { User } from '../../app/models/user';\r\nimport { FieldValues } from 'react-hook-form';\r\nimport agent from '../../app/api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState{\r\n    user:User | null\r\n\r\n\r\n\r\n}\r\n\r\nconst initialState :AccountState= {\r\n    user:null\r\n\r\n}\r\n\r\nexport const SingInUser=createAsyncThunk<User,FieldValues>(\r\n    'account/SingInUser',\r\n    async(data,thunkAPI)=>{\r\n        try {\r\n            const userDto = await agent.Account.login(data);\r\n            const {basket,...user}=userDto;\r\n            if(basket)thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n)\r\n\r\nexport const fetchCurrentUser=createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async(_,thunkAPI)=>{\r\n\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)))\r\n        try {\r\n            const userDto = await agent.Account.currentUser();\r\n            const {basket,...user}=userDto;\r\n            if(basket)thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user',JSON.stringify(user))\r\n            return user;\r\n        } catch (error:any) {\r\n            return thunkAPI.rejectWithValue({error:error.data})\r\n\r\n        \r\n        }\r\n\r\n\r\n    },{\r\n        condition:()=>{\r\n            if(!localStorage.getItem('user'))return false;\r\n        }\r\n    }\r\n\r\n\r\n)\r\n\r\n\r\n\r\n\r\nconst accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    signOut:(state)=>{\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        history.push('../')\r\n    },\r\n    setUser:(state,action)=>{\r\n        let claims=JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        let roles=claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n        state.user={...action.payload,roles:typeof(roles)==='string'?[roles]:roles};\r\n        \r\n    }\r\n  },\r\n  extraReducers:(builder =>{\r\n\r\n    builder.addCase(fetchCurrentUser.rejected,(state)=>{\r\n\r\n        state.user=null;\r\n        localStorage.removeItem('user');\r\n        toast.error('Session Expired ! please login again');\r\n        history.push('../')\r\n\r\n\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.fulfilled,fetchCurrentUser.fulfilled),\r\n    (state,action)=>{\r\n\r\n        let claims=JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        let roles=claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n\r\n        state.user={...action.payload,roles:typeof(roles)==='string'?[roles]:roles};\r\n    });\r\n    builder.addMatcher(isAnyOf(SingInUser.rejected),\r\n    (state,action)=>{\r\n\r\n        console.log(action.payload) ;\r\n    });\r\n\r\n    \r\n\r\n  })\r\n  \r\n});\r\n\r\nexport const {signOut,setUser} = accountSlice.actions\r\n\r\nexport default accountSlice.reducer","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { counterSlice } from \"../../features/contact/counterSlice\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport basketSlice from \"../../features/basket/basketSlice\";\r\nimport catalogSlice from \"../../features/catalog/catalogSlice\";\r\nimport accountSlice from \"../../features/account/accountSlice\";\r\n\r\n\r\n// here the stor come from counter roducer\r\n// export const configureStore=()=>{\r\n\r\n\r\n//     return createStore(counterReducer)\r\n// }\r\n\r\n// here the store come from counter slice using  tool kit\r\nexport const SouqStore=configureStore({\r\n    reducer:{\r\n        counter:counterSlice.reducer,\r\n        basket:basketSlice,\r\n        catalog:catalogSlice,\r\n        account:accountSlice\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nexport type RootState=ReturnType<typeof SouqStore.getState>;\r\nexport  type AppDispatch=typeof SouqStore.dispatch;\r\nexport const  useAppDispatch=()=>useDispatch<AppDispatch>();\r\nexport const useAppSelector:TypedUseSelectorHook<RootState>=useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { PaginatedResponse } from \"../models/PaginationData\";\r\nimport { SouqStore } from \"../store/configureStore\";\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\n// axios.defaults.baseURL = 'http://localhost:5000/api/';\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\naxios.defaults.withCredentials=true;\r\n\r\naxios.interceptors.request.use(config=>{\r\n    const token=SouqStore.getState().account.user?.token;\r\n    if(token)config.headers!.Authorization=`Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n\r\n    if(process.env.NODE_ENV==='development')await sleep();\r\n\r\n    const pagination=response.headers['pagination'];\r\n    if(pagination){\r\n        response.data=new PaginatedResponse(response.data,JSON.parse(pagination));\r\n        return response;\r\n    }\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat()\r\n            }\r\n            toast.error(data.title)\r\n            break;\r\n        case 401:\r\n            toast.error(data.title)\r\n           \r\n            break;\r\n            case 403:\r\n                toast.error('You are not authorized to do this !')\r\n               \r\n                break;\r\n        case 500:\r\n            history.push('server-error', { error: data })\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n})\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\nconst requests = {\r\n    get: (url: string,params?:URLSearchParams) => axios.get(url,{params:params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm:(url:string,data:FormData)=>\r\n        axios.post(url,data,{\r\n            headers:{'Content-type':'multipart/from-data'}\r\n        }).then(responseBody)\r\n    ,\r\n    putForm:(url:string,data:FormData)=>\r\n        axios.put(url,data,{\r\n            headers:{'Content-type':'multipart/from-data'}\r\n        }).then(responseBody)\r\n    \r\n}\r\nconst createFormData=(product:any)=>{\r\n    let formData=new FormData();\r\n    for (const key in product) {\r\n      \r\n        formData.append(key,product[key])\r\n    }\r\n    return formData;\r\n\r\n}\r\n //to return void use {} after arrow func \r\n //to return promise delete {} after arrow func\r\nconst Admin={\r\n    createProduct:(product:any)=>requests.postForm('products',createFormData(product)),\r\n    updateProduct:(product:any)=>requests.putForm('products',createFormData(product)),\r\n\r\n    deleteProduct:(id:number)=>requests.delete(`products/${id}`)\r\n\r\n\r\n\r\n}\r\nconst Catalog = {\r\n    list: (params:URLSearchParams) => requests.get('products',params),\r\n    details: (id: string) => requests.get(`products/${id}`),\r\n    fetchFilters:()=>requests.get('products/filters')\r\n}\r\n \r\nconst Errors = {\r\n    get400Error: () => requests.get('error/bad-request'),\r\n    get401Error: () => requests.get('error/unauthorized'),\r\n    get404Error: () => requests.get('error/not-found'),\r\n    getValidationError: () => requests.get('error/validation-error'),\r\n    get500Error: () => requests.get('error/server-error')\r\n}\r\nconst Basket={\r\n    get:()=>requests.get('basket'),\r\n    addItem:(productId:number,quantity=1)=>requests.post(`basket?productId=${productId}&quantity=${quantity}`,{}),\r\n    deleteItem:(productId:number,quantity=1)=>requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\r\n}\r\nconst Account={\r\n    login:(values:any)=>requests.post('account/login',values),\r\n    register:(values:any)=>requests.post('account/register',values),\r\n    currentUser:()=>requests.get('account/currentUser'),\r\n    fetchAddress:()=>requests.get('account/savedAddress')\r\n\r\n\r\n}\r\n\r\nconst Orders={\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: string) => requests.get(`orders/${id}`),\r\n    create:(values:any)=>requests.post('orders',values)\r\n\r\n\r\n}\r\nconst Payment={\r\n    createPaymentIntent:()=>requests.post('payment',{})\r\n\r\n}\r\n\r\nconst agent = {\r\n    Catalog,\r\n    Errors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payment,\r\n    Admin\r\n}\r\n\r\nexport default agent;","import Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport ButtonGroup from '@mui/material/ButtonGroup'\r\nimport Button from '@mui/material/Button'\r\nimport agent from '../../app/api/agent'\r\nimport { useState } from 'react'\r\nimport { Alert, AlertTitle, List, ListItem, ListItemText } from '@mui/material'\r\n\r\nexport default function AboutUs() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n    const getValidationErrors = () => {\r\n        agent.Errors.getValidationError()\r\n            .then(() => console.log('will not appear'))\r\n            .catch(error => setValidationErrors(error))\r\n    }\r\n    return (\r\n        <Container sx={{ mt: 10 }}>\r\n            <Typography variant=\"h3\" gutterBottom color=\"initial\">Errors Testing</Typography>\r\n            <ButtonGroup color=\"primary\" fullWidth>\r\n                <Button variant='contained' onClick={() => agent.Errors.get400Error().catch(error => console.log(error))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.Errors.get401Error().catch(error => console.log(error))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.Errors.get404Error().catch(error => console.log(error))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={getValidationErrors}>Test Validation Error</Button>\r\n                <Button variant='contained' onClick={() => agent.Errors.get500Error().catch(error => console.log(error))}>Test 500 Error</Button>\r\n            </ButtonGroup>\r\n            {\r\n                validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {\r\n                            validationErrors.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>{error}</ListItemText>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ntype Props = {\r\n    message?: string\r\n}\r\nexport default function Loader({ message = 'Loading...' }: Props) {\r\n    return (\r\n        <Backdrop open invisible>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height=\"100vh\">\r\n                <CircularProgress size={100} />\r\n                <Typography sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }} variant=\"h4\" color=\"initial\">\r\n                    {message}\r\n                </Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}\r\n","export const currencyFormat=(amount:number)=>(amount/100).toFixed(2)+' USD '","import { Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader, Avatar } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { addBasketItemAsync } from \"../basket/basketSlice\";\r\n\r\ntype Props = {\r\n    product: Product\r\n}\r\nexport default function ProductCard({ product }: Props) {\r\n    // const [lodaing, setLodaing] = useState(false); local using befor async thunk\r\n    const {status}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    // const {setBasket}=useSouqContext();\r\n    const dispatch=useAppDispatch();\r\n\r\n\r\n\r\n    // const handleAddItem=(productId:number)=>{\r\n    //     setLodaing(true);\r\n    //     agent.Basket.addItem(productId).then(basket=>dispatch(setBasket(basket)))\r\n\r\n    //     .catch(error=>console.log(error))\r\n    //     .finally(()=>setLodaing(false));\r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'primary.dark' }}>\r\n                        {product.brand.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{ variant: \"body2\", sx: { fontWeight: 'bolder', color: 'primary.dark' } }}\r\n\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={product.pictureUrl}\r\n                alt={product.name}\r\n                title={product.name}\r\n                sx={{ objectFit: 'contain' }}\r\n            />\r\n            <CardContent>\r\n                \r\n                <Typography fontWeight=\"bolder\" textAlign=\"center\" gutterBottom variant=\"h5\" color=\"primary.dark\">\r\n                    {/* {(product.price / 100).toFixed(2)} EGP */}\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography fontWeight=\"bolder\" textAlign=\"center\" variant=\"body1\" color=\"text.secondary\">\r\n                    {product.brand}<br/>\r\n                    {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n\r\n                <LoadingButton loading={status==='pendingAddItem'+product.id}\r\n                // onClick={()=>handleAddItem(product.id)}\r\n                onClick={()=>dispatch( addBasketItemAsync({productId:product.id}))}\r\n\r\n                sx={{ fontWeight: 'bolder' }} \r\n                size=\"small\">Add To Cart</LoadingButton>\r\n                \r\n                <Button\r\n                    sx={{ fontWeight: 'bolder' }}\r\n                    size=\"small\"\r\n                    component={Link}\r\n                    to={`/catalog/${product.id}`}\r\n                >View Product</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 267 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent >\r\n                <Skeleton animation=\"wave\" height={10} width=\"70%\" style={{ paddingBottom: 5, margin: 'auto' }} />\r\n                <Skeleton animation=\"wave\" height={10} width=\"50%\" style={{ paddingBottom: 3, margin: 'auto' }} />\r\n                <Skeleton animation=\"wave\" height={10} width=\"50%\" style={{ paddingBottom: 3, margin: 'auto' }} />\r\n            </CardContent>\r\n            <CardActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"40%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from \"@mui/material\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport ProductCard from \"./ProductCard\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ntype Props = {\r\n    products: Product[]\r\n}\r\nexport default function ProductList({ products }: Props) {\r\n\r\n    const {productsLoaded}=useAppSelector(state=>state.catalog);\r\n\r\n    return (\r\n        <Grid sx={{ mt: 1 }} container rowSpacing={2} columnSpacing={2}>\r\n            {\r\n                products.map(product => (\r\n                    <Grid key={product.id} item xs={12} sm={4} lg={3}>\r\n                        {!productsLoaded ?(\r\n                            <ProductCardSkeleton/>\r\n\r\n                        ):\r\n                        (\r\n                            <ProductCard product={product}></ProductCard>\r\n\r\n                        )\r\n\r\n                        }\r\n                    </Grid>\r\n                ))\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n","import { TextField, debounce } from \"@mui/material\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams } from \"./catalogSlice\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams}=useAppSelector(state=>state.catalog);\r\n\r\n    const [searchTerm, setsearchTerm] = useState(productParams.searchTerm)\r\n\r\n    const dispatch=useAppDispatch();\r\n    const debounceSearch=debounce((event:any)=>{\r\n        dispatch(setProductParams({searchTerm:event.target.value})) //يمثل القيمة الموجودة في الحقل \r\n\r\n\r\n    },1000) // to delay\r\n  return (\r\n    <>\r\n      <TextField variant=\"outlined\"\r\n                     label='Search Product'\r\n                     fullWidth\r\n                     value={searchTerm||''}\r\n                     onChange={(event:any)=>{\r\n                        // dispatch(setProductParams({searchTerm:event.target.value})) //يمثل القيمة الموجودة في الحقل \r\n                        setsearchTerm(event.target.value);\r\n                        debounceSearch(event);\r\n                   \r\n                    }}\r\n                     />\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n","import { FormControl, FormControlLabel, Radio, RadioGroup } from '@mui/material'\r\n\r\n\r\ntype Props={\r\n    options:any[]\r\n    onChange:(event:any)=>void\r\n    selectedValue:string\r\n\r\n}\r\n\r\nexport default function RadioButtonGroup({onChange,options,selectedValue}:Props) {\r\n  return (\r\n    <FormControl component=\"fieldset\" >\r\n    <RadioGroup onChange={onChange} value={selectedValue}\r\n     >\r\n            {\r\n                options.map(({value,label})=>(\r\n                    <FormControlLabel key={value} value={value} label={label} control={<Radio/>} />\r\n\r\n                ))\r\n\r\n            }\r\n       \r\n    </RadioGroup>\r\n</FormControl>\r\n  )\r\n}\r\n","import { Checkbox, FormControlLabel, FormGroup } from '@mui/material'\r\nimport { useState } from 'react'\r\n\r\n\r\ntype Props={\r\n\r\n    items:string[]\r\n    checked?:string[],\r\n    onChange:(items:string[])=>void\r\n}\r\nexport default function CheckBoxButton({items,onChange,checked}:Props) {\r\n\r\n    const [checkedItems, setcheckedItems] = useState(checked||[])\r\n\r\n    const handleChecked=(value:string)=>{\r\n        const currentIndex=checkedItems.findIndex(item=>item===value);\r\n        let newChecked:string []=[];\r\n        if(currentIndex===-1)newChecked=[...checkedItems,value]\r\n        else newChecked=checkedItems.filter(item=>item!==value);\r\n        setcheckedItems(newChecked);\r\n\r\n        onChange(newChecked);\r\n    }\r\n  return (\r\n    <FormGroup>\r\n                   \r\n    {\r\n       \r\n        items.map(item=>(\r\n            <FormControlLabel key={item}\r\n             label={item}\r\n             control={<Checkbox\r\n             checked={checkedItems.indexOf(item)!==-1}\r\n             onClick={()=>handleChecked(item)}\r\n             \r\n             />} />\r\n\r\n        ))\r\n\r\n    }\r\n\r\n\r\n</FormGroup>\r\n  )\r\n}\r\n","import { Box, Pagination, Typography } from \"@mui/material\";\r\nimport { PaginationData } from \"../models/PaginationData\";\r\n\r\n\r\ntype Props={\r\n    paginationData:PaginationData\r\n    onPageChange:(page:number)=>void\r\n}\r\nexport default function AppPagination({paginationData,onPageChange}:Props) {\r\n    const {currentPage,pageSize,totalCount,totalPages}=paginationData\r\n  return (\r\n<Box sx={{mt:-1}} display='flex' justifyContent='space-between' alignItems='center'>\r\n                    <Typography sx={{ml:1}} > \r\n                    Displaying {(currentPage - 1) * pageSize + 1} -\r\n                    {currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize }\r\n                     of {totalCount} items\r\n                    </Typography>\r\n                    <Pagination \r\n                    shape=\"rounded\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    count={totalPages}\r\n                    page={currentPage}\r\n                    onChange={(e,page)=>onPageChange(page)}\r\n                    />\r\n                </Box>  )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\r\nimport { fetchProductsAsync, fetchfiltersAsync, productSelectors } from \"../../features/catalog/catalogSlice\";\r\n\r\nexport default function useProducts() {\r\n    const products=useAppSelector(productSelectors.selectAll);\r\n    const dispatch=useAppDispatch();\r\n    const {productsLoaded,filtersLoaded,brands,types,paginationData}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => { \r\n\r\n        // agent.Catalog.list()\r\n        //     .then(products => setProducts(products))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n\r\n        if (!productsLoaded) {\r\n            dispatch(fetchProductsAsync())\r\n            \r\n        }\r\n\r\n\r\n    }\r\n        , [productsLoaded,dispatch])\r\n\r\n        useEffect(() => {\r\n\r\n           \r\n            if (!filtersLoaded) {\r\n                dispatch(fetchfiltersAsync())\r\n                \r\n            }\r\n    \r\n    \r\n        }\r\n            , [filtersLoaded,dispatch])\r\n\r\n        return{\r\n            products,productsLoaded,filtersLoaded,brands,types,paginationData\r\n        }\r\n}\r\n","import Loader from \"../../app/layout/Loader\"\r\nimport ProductList from \"./ProductList\"\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\"\r\nimport { setPageNumber, setProductParams } from \"./catalogSlice\"\r\nimport { Grid, Paper } from \"@mui/material\"\r\nimport ProductSearch from \"./ProductSearch\"\r\nimport RadioButtonGroup from \"../../app/components/RadioButtonGroup\"\r\nimport CheckBoxButton from \"../../app/components/CheckBoxButton\"\r\nimport AppPagination from \"../../app/components/AppPagination\"\r\nimport useProducts from \"../../app/hooks/useProducts\"\r\n\r\nconst sortOption =[\r\n   { value:'name', label:'Alphabetical'},\r\n   { value:'lowprice', label:'Price- Low To High'},\r\n   { value:'highprice', label:'Price- High To Low'},\r\n\r\n\r\n]\r\nexport default function Catalog() {\r\n\r\n    const {products,filtersLoaded,brands,types,paginationData}=useProducts();\r\n    // const [products, setProducts] = useState<Product[]>([])// context\r\n    const dispatch=useAppDispatch();\r\n    const {productParams}=useAppSelector(state=>state.catalog);\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n        \r\n    // if (status.includes('pending')||!paginationData)\r\n    if(!filtersLoaded)\r\n     return <Loader message='Loading Products...' />\r\n    return (\r\n        <Grid  container spacing={2}>\r\n            <Grid sx={{mt:3}} item xs={6} sm={2.2} >\r\n                <Paper sx={{mb:2}}>\r\n                  <ProductSearch/>\r\n\r\n\r\n                </Paper>\r\n                <Paper sx={{mb:2,p:2}}>\r\n               <RadioButtonGroup \r\n               selectedValue={productParams.orderBy}\r\n               options={sortOption}\r\n               onChange={(e)=>dispatch(setProductParams({orderBy:e.target.value}))}\r\n               />\r\n\r\n                </Paper> \r\n                <Paper sx={{mb:2,p:2}}>\r\n\r\n                    <CheckBoxButton \r\n                    items={types}\r\n                    checked={productParams.types}\r\n                    onChange={(items:string[])=>dispatch(setProductParams({types:items}))}\r\n                    />\r\n              \r\n\r\n                </Paper>\r\n\r\n                <Paper sx={{mb:2,p:2}}>\r\n                        {/* <FormGroup>\r\n                {\r\n                                types.map(type=>(\r\n                                    <FormControlLabel key={type} label={type} control={<Checkbox/>} />\r\n\r\n                                ))\r\n\r\n                                }\r\n                        </FormGroup> */}\r\n                        <CheckBoxButton \r\n                    items={brands}\r\n                    checked={productParams.brands}\r\n                    onChange={(items:string[])=>dispatch(setProductParams({brands:items}))}\r\n                    />\r\n             \r\n\r\n                </Paper>\r\n\r\n            </Grid>\r\n\r\n            <Grid sx={{mt:3}} item xs={6} sm={9.8} >\r\n\r\n            <ProductList products={products}></ProductList>\r\n            \r\n            </Grid>\r\n            <Grid item xs={6} sm={2.2}/>\r\n            <Grid item xs={6} sm={9.8}>\r\n                {paginationData&&\r\n                  <AppPagination\r\n                  paginationData={paginationData}\r\n                  onPageChange={(page:number)=>dispatch(setPageNumber({pageNumber:page}))}\r\n                  />\r\n                }\r\n              \r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n","import { Box, Button, Paper, Typography } from '@mui/material'\r\nimport Container from '@mui/material/Container'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 450, mt: 17, textAlign: \"center\" }}>\r\n            <Typography gutterBottom variant=\"h3\" color=\"initial\">\r\n                Sorry, what you are looking for not found!\r\n            </Typography>\r\n            <Box component=\"img\"\r\n                sx={{\r\n                    mb: 2,\r\n                    height: 300,\r\n                    width: \"100%\"\r\n                }}\r\n                src={'../images/404.png'}\r\n            />\r\n            <Button variant=\"contained\" component={Link} to='../catalog'>Go Back to Catalog</Button>\r\n        </Container>\r\n    )\r\n}\r\n","import Typography from '@mui/material/Typography'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router'\r\nimport Grid from '@mui/material/Grid'\r\nimport { Divider, Table, TableCell, TableContainer, TableHead, TableRow, TextField } from '@mui/material';\r\nimport NotFound from '../../app/errors/NotFound';\r\nimport Loader from '../../app/layout/Loader';\r\nimport { currencyFormat } from '../../app/helper/helper';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport {  addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice';\r\nimport { fetchProductAsync, productSelectors } from './catalogSlice';\r\n\r\nexport default function ProductDetails() {\r\n\r\n    // const {basket,setBasket,removeItem}=useSouqContext(); context api\r\n    const {status:productStatus}=useAppSelector(state=>state.catalog); // redux\r\n\r\n    const {basket,status}=useAppSelector(state=>state.basket); // redux\r\n    const dispatch=useAppDispatch();\r\n\r\n\r\n    const { id } = useParams();\r\n\r\n    // const [product, setProduct] = useState<Product | null>(null);\r\n    const product=useAppSelector(state=>productSelectors.selectById(state,id!));\r\n\r\n\r\n    // const [loading, setLoading] = useState(true);\r\n\r\n    const [quantity,setQuantity]= useState(0);\r\n    // const [submitting,setSubmitting]= useState(false);\r\n\r\n    const item=basket?.items.find(i=>i.productId===product?.id);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        document.body.style.background = 'inherit'\r\n        if(item)setQuantity(item.quantity);\r\n        // agent.Catalog.details(id!)\r\n        //     .then(product => setProduct(product))\r\n        //     .catch(error => console.log(error))\r\n        //     .finally(() => setLoading(false))\r\n        if(!product)dispatch(fetchProductAsync(id!));\r\n\r\n\r\n\r\n\r\n    }, [id,item,product,dispatch])\r\n    useEffect(() => {\r\n        return () => {\r\n            document.body.style.background = '#e7e7e7'\r\n        }\r\n    }, [])\r\n\r\n    const handleInputAddChange= (event: any) =>{\r\n        console.log('add');\r\n\r\n        if(event.target.value>0)\r\n        setQuantity(event?.target.value);\r\n\r\n\r\n    }\r\n    const handleInputUpdateChange= (event: any) =>{\r\n        console.log('update');\r\n\r\n        if(event.target.value>=0)\r\n        setQuantity(event?.target.value);\r\n\r\n    }\r\n\r\n\r\n\r\n    // const handleUpdateCartUsingContext=()=>{\r\n    //     setSubmitting(true);\r\n    //     if(!item || quantity>item.quantity){\r\n          \r\n           \r\n    //         var updatedQuantity=item?quantity-item.quantity:quantity;\r\n    //         if(updatedQuantity==0){\r\n    //             updatedQuantity=1;\r\n    //         }\r\n\r\n\r\n    //         agent.Basket.addItem(product?.id!,updatedQuantity)\r\n    //         .then(basket=>dispatch(setBasket(basket)))\r\n    //         .catch(error=>console.log(error))\r\n    //         .finally(()=>setSubmitting(false)\r\n    //         )\r\n    //     }else{\r\n            \r\n    //         const updatedQuantity=item.quantity-quantity;\r\n    //         agent.Basket.deleteItem(product?.id!,updatedQuantity)\r\n    //         .then(()=>dispatch(removeItem({productId: product?.id!,quantity: updatedQuantity}))) // update the context\r\n    //         .catch(error=>console.log(error))\r\n    //         .finally(()=>  setSubmitting(false)\r\n        \r\n    //         )\r\n    //     }\r\n\r\n    // } \r\n\r\n    const handleUpdateCart=()=>{\r\n        if(!item || quantity>item.quantity){\r\n          \r\n        //    var defzero=0;\r\n            var updatedQuantity=item?quantity-item.quantity:quantity;\r\n            if(updatedQuantity===0){\r\n                updatedQuantity=1;\r\n            }\r\n\r\n\r\n            dispatch( addBasketItemAsync({productId:product?.id!,quantity:updatedQuantity}))\r\n                }else{\r\n            \r\n            const updatedQuantity=item.quantity-quantity;\r\n            \r\n            dispatch( removeBasketItemAsync({productId:product?.id!,quantity:updatedQuantity}))\r\n\r\n            \r\n        } \r\n\r\n    } \r\n    // const doFainal=()=>{ \r\n      \r\n\r\n    //     history.push('../basket');\r\n\r\n\r\n    // }\r\n    if (productStatus.includes('pending')) return (\r\n        <Loader message='Loading Product...' />\r\n    )\r\n    if (!product) return (\r\n        <NotFound />\r\n    )\r\n    return (\r\n        <Grid container spacing={6} marginTop={0}>\r\n            <Grid item xs={12} md={6}>\r\n                <img  src={product.pictureUrl} alt={product.name} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h4\" color=\"initial\">{product.name}</Typography>\r\n                <Divider sx={{ borderBottomWidth: 'medium', my: 2 }} variant=\"fullWidth\" />\r\n                <Typography fontWeight=\"bolder\" color=\"primary.dark\" variant=\"h4\">\r\n                    {/* {(product.price / 100).toFixed(2)} EGP */}\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>In Stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} marginTop={1}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                        onChange={item?handleInputUpdateChange:handleInputAddChange}\r\n                          label=\"Quantity in cart\"\r\n                          variant='outlined'\r\n                          type='number'\r\n                          fullWidth\r\n                          value={quantity}\r\n                        />\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton \r\n                       \r\n                    \r\n\r\n                        sx={{height:'55px'}}\r\n                        color='primary'\r\n                        size='large'\r\n                        variant='contained'\r\n                        fullWidth\r\n                        loading={(status.includes('pending'))}\r\n                        disabled={(item?.quantity===quantity)||(!item&&quantity===0)}\r\n                        onClick={handleUpdateCart}\r\n                        >\r\n                            {item?'Update Quantity':'Add To Cart'}\r\n\r\n                        </LoadingButton>\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import Typography from '@mui/material/Typography'\r\nimport { ButtonGroup, Button } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { decrement, increment } from './counterSlice';\r\nexport default function ContactUs() {\r\n\r\n    // const {data,title}=useSelector((state:CounterState)=>state);\r\n\r\n    // const dispatch=useDispatch();\r\n\r\n    const dispatch=useAppDispatch();\r\n    const {data,title}=useAppSelector(state=>state.counter);\r\n\r\n\r\n    return (\r\n        <>\r\n         <Typography gutterBottom  marginTop={10} variant=\"h2\" color=\"initial\">\r\n         data:  {data}\r\n        </Typography>\r\n        <Typography variant=\"h2\" color=\"initial\">\r\n         title:  {title}\r\n        </Typography>\r\n        <ButtonGroup sx={{mt:2}}>\r\n\r\n            {/* <Button onClick={()=>dispatch({ type: DECREMENT_COUNTER })} variant=\"contained\" color=\"primary\">Decrement</Button>\r\n            <Button onClick={()=>dispatch({ type: INCREMENT_COUNTER })} variant=\"contained\" color=\"secondary\">Increment</Button> */}\r\n\r\n            <Button onClick={()=>dispatch(decrement(1) )} variant=\"contained\" color=\"primary\">Decrement</Button>\r\n            <Button onClick={()=>dispatch(increment(1))} variant=\"contained\" color=\"secondary\">Increment</Button>\r\n\r\n            <Button onClick={()=>dispatch(increment(5))} variant=\"contained\" color=\"secondary\">Increment 5</Button>\r\n\r\n        </ButtonGroup>\r\n\r\n        </>\r\n       \r\n    ) \r\n}\r\n","import { Button, Menu, Fade, MenuItem } from '@mui/material';\r\nimport React from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\nimport { signOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch=useAppDispatch();\r\n    const {user}=useAppSelector(state=>state.account)\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Button\r\n        color='inherit'\r\n        sx={{typography:'h6'}}\r\n          onClick={handleClick}\r\n        >\r\n          {user?.email}\r\n        </Button>\r\n        <Menu\r\n        \r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Fade}\r\n        >\r\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n          <MenuItem onClick={handleClose} component={Link} to='../orders'>My Orders</MenuItem>\r\n          <MenuItem onClick={()=>\r\n          { \r\n            dispatch(signOut())\r\n            dispatch(clearBasket())\r\n        \r\n            }\r\n           \r\n            \r\n            }>Logout</MenuItem>\r\n        </Menu>\r\n      </>\r\n    );\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material'\r\nimport { Badge, Box, IconButton, List, ListItem } from '@mui/material'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useAppSelector } from '../store/configureStore'\r\nimport SignedInMenu from './SignedInMenu'\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }]\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' }]\r\nconst linkStyle = {\r\n    color: 'grey.300',\r\n    typography: 'h6',\r\n    '&.hover,&.active': {\r\n        color: 'inherit'\r\n    }\r\n}\r\nexport default function Header() {\r\n\r\n\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n\r\n    const itemCounts=basket?.items.reduce((sum,item)=>sum+item.quantity,0);\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" color=\"primary\" >\r\n            <Toolbar sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <Typography\r\n                    fontWeight=\"bolder\"\r\n                    variant=\"h5\"\r\n                    component={NavLink}\r\n                    to=\"/\"\r\n                    sx={{ color: 'inherit', textDecoration: 'none' }}\r\n                >\r\n                    Souqq\r\n                </Typography>\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={linkStyle}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {\r\n                        user&&user.roles?.includes('Admin')&&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={'../inventory'}\r\n                            \r\n                            sx={linkStyle}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <IconButton component={Link} to='basket' size=\"large\" sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCounts} color=\"secondary\">\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {\r\n                        user ?\r\n                        (<SignedInMenu/>):\r\n                        (\r\n\r\n                            <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={linkStyle}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                        )\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                  \r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { Divider, Paper, Typography, Button } from '@mui/material'\r\nimport Container from '@mui/material/Container'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nexport default function ServerError() {\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    return (\r\n        <Container sx={{ mt: 10 }} component={Paper} >\r\n            {\r\n                state?.error ? (\r\n                    <>\r\n                        <Typography variant=\"h4\" color=\"error\" gutterBottom>{state.error.title}</Typography>\r\n                        <Divider />\r\n                        <Typography variant=\"body1\" color=\"initial\">{state.error.detail || 'Internal server error'}</Typography>\r\n                    </>\r\n                ) : (\r\n                    <Typography variant=\"h5\" gutterBottom color=\"initial\">Server Error</Typography>\r\n                )\r\n            }\r\n            <Button onClick={() => navigate(-1)} color=\"primary\">\r\n                Go back\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\n\r\ntype Props={\r\n    subtotal?:number,\r\n    itemCounts?:number\r\n\r\n}\r\nexport default function BasketSummary({subtotal,itemCounts}:Props) {\r\n    // const {basket}=useSouqContext();\r\n    const {basket}=useAppSelector(state=>state.basket); // redux\r\n\r\n\r\n    // ??0 if null return 0\r\n    if(subtotal===undefined)\r\n     subtotal = basket?.items.reduce((sum,item)=>sum+(item.quantity*item.price),0)??0;\r\n    //  toast.success('sub is :'+subtotal);\r\n    const deliveryFee = (subtotal>100000 || subtotal===0) ?0:2000;\r\n    // toast.success('deliveryFee is :'+deliveryFee);\r\n\r\n    if(itemCounts===undefined)\r\n     itemCounts=basket?.items.reduce((count,item)=>count+item.quantity,0)??0;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                    <TableRow>\r\n                            <TableCell colSpan={2}>Total Qty</TableCell>\r\n                            <TableCell align=\"right\">{itemCounts}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        {/* <TableRow>\r\n                            <TableCell colSpan={2}>reaTotall</TableCell>\r\n                            <TableCell align=\"right\">{subtotal}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>realFee</TableCell>\r\n                            <TableCell align=\"right\">{deliveryFee}</TableCell>\r\n                        </TableRow> */}\r\n\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{ currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                     \r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{ fontStyle: 'italic' }}>*Orders over 1000 USD qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n           \r\n        </> \r\n    )\r\n}","import { Remove, Add, Delete } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { addBasketItemAsync, removeBasketItemAsync } from \"./basketSlice\";\r\n\r\n\r\n\r\ntype Props={\r\n    items:BasketItem[]\r\n    isBasket?:boolean\r\n}\r\nexport default function BasketTable({items,isBasket=true}:Props) {\r\n    \r\n    const {status}=useAppSelector(state=>state.basket); // redux\r\n    const dispatch=useAppDispatch();\r\n    const handleAddItem=(productId:number)=>{\r\n      \r\n        dispatch( addBasketItemAsync({productId:productId}))\r\n  \r\n  \r\n  \r\n    }\r\n      const handleRemoveItem=(productId:number,quantity=1,name:string)=>{\r\n        dispatch( removeBasketItemAsync({productId:productId,quantity:quantity,name}))\r\n  \r\n      }\r\n  return (\r\n    <TableContainer  sx={{mt:10}}  component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} >\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Product</TableCell>\r\n          <TableCell align=\"center\">Price</TableCell>\r\n          <TableCell align=\"center\">Quantity</TableCell>\r\n          <TableCell align=\"center\">SubTotal</TableCell>\r\n          {isBasket && \r\n                    <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          }\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {items.map((row) => (\r\n          <TableRow\r\n            key={row.productId}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              <Box\r\n              sx={{color:'inherit',textDecoration:'inherit'}}\r\n              component={Link}\r\n              to={`../catalog/${row.productId}`}\r\n               display={'flex'}\r\n               alignItems={'center'}>\r\n                <img src={row.pictureUrl} alt={row.name} style={{height:50,marginRight:20}} />\r\n                <span>{row.name}</span>\r\n\r\n              </Box>\r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n              {\r\n                currencyFormat(row.price)\r\n            }\r\n\r\n           \r\n              </TableCell>\r\n         \r\n              \r\n            <TableCell align=\"center\">\r\n            {isBasket && \r\n            <LoadingButton \r\n              // loading={status.loading&&status.name==='rem'+row.productId}\r\n              loading={(status==='pendingRemoveItem'+row.productId+'rem')}\r\n\r\n              onClick={()=>handleRemoveItem(row.productId,1,'rem')}\r\n              color='error'\r\n              sx={{ fontWeight: 'bolder' }} \r\n              size=\"small\"> \r\n                <Remove/>\r\n                </LoadingButton>\r\n                }\r\n              {row.quantity}\r\n              {isBasket && \r\n              <LoadingButton \r\n              // loading={status.loading&&status.name==='add'+row.productId}\r\n              loading={(status==='pendingAddItem'+row.productId)}\r\n\r\n              onClick={()=>handleAddItem(row.productId)}\r\n              color='secondary'\r\n              sx={{ fontWeight: 'bolder' }} \r\n              size=\"small\">\r\n                <Add/>\r\n                </LoadingButton>\r\n                    }\r\n            \r\n            </TableCell>\r\n            \r\n                \r\n            <TableCell align=\"center\">{currencyFormat((row.price * row.quantity))}</TableCell>\r\n            <TableCell align=\"center\">\r\n            {isBasket && \r\n            <LoadingButton \r\n              //  loading={status.loading&&status.name==='del'+row.productId}\r\n              loading={(status==='pendingRemoveItem'+row.productId+'del')}\r\n\r\n               onClick={()=>handleRemoveItem(row.productId,row.quantity,'del')}\r\n                color='error'>\r\n                <Delete/>\r\n                </LoadingButton>\r\n\r\n            }\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>  )\r\n}\r\n","import { Grid, Button } from '@mui/material';\r\nimport BasketSummary from './BasketSummary';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketTable from './BasketTable';\r\n\r\nexport default function BasketPage() {\r\n\r\n    // const [loading, setLoading] = useState(true);\r\n    // const [basket, setBasket] = useState<Basket|null>(null);\r\n    //  useEffect(() => {\r\n\r\n    //   agent.Basket.get().then(basket=>setBasket(basket))\r\n    //   .catch(error=>console.log(error))\r\n    //   .finally(()=>setLoading(false))\r\n    // }, [])\r\n    \r\n    // if(loading)return<Loader message=\"Loading basket....!!!\" />\r\n\r\n      // const {basket,setBasket,removeItem}=useSouqContext();\r\n\r\n      const {basket}=useAppSelector(state=>state.basket); // redux\r\n\r\n\r\n      //NEW TYPES FOR VARIABLES IMPORTANT ***ALI_23_04_15\r\n      // const [status, setStatus] = useState({\r\n      //   loading:false,\r\n      //   name:''\r\n\r\n      // });\r\n      \r\n      \r\n    //   const handleAddItemusingContext=(productId:number,name:string)=>{\r\n    //     setStatus({loading:true,name:name});\r\n\r\n    //     agent.Basket.addItem(productId).then(basket=>dispatch( setBasket(basket)))\r\n    //     .catch(error=>console.log(error))\r\n    //     .finally(()=>setStatus({loading:false,name:''}));\r\n\r\n\r\n    // }\r\n    \r\n    // const handleRemoveItemusingContext=(productId:number,quantity=1,name:string)=>{\r\n    //   setStatus({loading:true,name:name});\r\n    //   agent.Basket.deleteItem(productId,quantity)\r\n    //   .then(()=>dispatch( removeItem({productId,quantity})))\r\n    //   .catch(error=>console.log(error))\r\n    //   .finally(()=>setStatus({loading:false,name:''}));\r\n    // }\r\n\r\n\r\n  //   const handleAddItem=(productId:number)=>{\r\n      \r\n  //     dispatch( addBasketItemAsync({productId:productId}))\r\n\r\n\r\n\r\n  // }\r\n  //   const handleRemoveItem=(productId:number,quantity=1,name:string)=>{\r\n  //     dispatch( removeBasketItemAsync({productId:productId,quantity:quantity,name}))\r\n\r\n  //   }\r\n   \r\n\r\n    if(!basket || basket.items.length===0)\r\n    return  <Navigate to=\"../\" />\r\n    // <Typography sx={{mt:10}} variant=\"h3\" color=\"initial\"> Basket is empty</Typography>\r\n\r\n\r\n  return (\r\n    <>\r\n        {/* <Typography sx={{mt:10}}  variant=\"h4\" color=\"initial\"> Buyer Id is :{basket.buyerId}</Typography> */}\r\n        <BasketTable items={basket.items} />\r\n       \r\n      <Grid container spacing={0} sx={{mt:1}}>\r\n                  <Grid item xs={6}  />\r\n                  <Grid item xs={6}>\r\n                      <BasketSummary/>\r\n                      <Button  component={Link}\r\n                to={'../checkout'}\r\n                variant='contained'\r\n                size='large'\r\n                fullWidth>\r\n                  Check Out\r\n\r\n                      </Button>\r\n                  \r\n                  </Grid>\r\n                \r\n      </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { toast } from 'react-toastify';\r\nimport { SingInUser } from './accountSlice';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport default function Login() {\r\n  \r\n    // const [validationErrors, setValidationErrors] = useState([])\r\n    const {register,handleSubmit,setError,formState:{isSubmitting,isValid,errors}}=useForm({\r\n        mode:'all'\r\n    });\r\n    const {user}=useAppSelector(state=>state.account);\r\n\r\n\r\n    const dispach=useAppDispatch();\r\n    const navigate=useNavigate();\r\n\r\n\r\n    const handleApiErrors=(errors:string[])=>{\r\n        if(errors){\r\n            errors.forEach(error=>{\r\n                if(error.includes('Password')){\r\n                    setError('password',{message:error});\r\n                }else if (error.includes('Email')){\r\n                    setError('email',{message:error});\r\n                }\r\n                else if (error.includes('Username')){\r\n                    setError('username',{message:error});\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(user) navigate('../');\r\n \r\n    }, [user,navigate])\r\n    \r\n\r\n\r\n  return (\r\n    // <ThemeProvider theme={defaultTheme}>\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n        {/* <CssBaseline /> */}\r\n        <Box\r\n          sx={{\r\n            marginTop: 13,\r\n            p:3,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n            {/* <AppRegistration /> */}\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n             Register\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit((data:FieldValues)=>\r\n\r\n            agent.Account.register(data)\r\n            .then(async()=>{\r\n                toast.success('Registeration Successful');\r\n                \r\n            await dispach(SingInUser({Username:data.username,Password:data.password}));\r\n            navigate('../');\r\n\r\n\r\n            })\r\n            \r\n            .catch(error=>handleApiErrors(error))\r\n            )} noValidate sx={{ mt: 1 }}>\r\n\r\n                {\r\n    \r\n\r\n\r\n                }\r\n\r\n\r\n            <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n          </Avatar>\r\n            <TextField\r\n            \r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Username\"\r\n            //   autoComplete=\"email\"\r\n              autoFocus\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('username',{required:true})}\r\n            error={!!errors.username}\r\n            helperText={errors?.username?.message}\r\n            />\r\n             <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Email\"\r\n            //   autoComplete=\"email\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('email',{\r\n                required:true,\r\n                pattern:{\r\n                    value:/^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                    message:'Not a valid Email Address'\r\n                }\r\n                })}\r\n            error={!!errors.email}\r\n            helperText={errors?.email?.message}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n            //   name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n                {...register('password',\r\n                        {required:'كلمة المرور مطلوبة',\r\n                            pattern:{\r\n                                value:/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\\W)(?!.*\\s).{8,}$/,\r\n                                message:'Not a valid Password'\r\n                            }\r\n                        \r\n                        }\r\n                    )\r\n                }\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message}\r\n\r\n\r\n\r\n            //   autoComplete=\"current-password\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.password}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n             {/* {\r\n                validationErrors.length > 0 &&\r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {\r\n                            validationErrors.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>{error}</ListItemText>\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    </List>\r\n                </Alert>\r\n            } */}\r\n\r\n            \r\n            <LoadingButton\r\n            disabled={!isValid}\r\n            loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Register\r\n            </LoadingButton>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Typography \r\n                component={Link}\r\n                to={\"../login\"}\r\n               sx={{fontWeight:'bold',color:'primary.main',textDecoration:'none'}}\r\n                >\r\n                  {\"Already have an account? Sign In\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\r\n      </Container>\r\n    // { </ThemeProvider> }\r\n  );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { SingInUser } from './accountSlice';\r\nimport { useEffect } from 'react';\r\n\r\n// function Copyright(props: any) {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://mui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\n// TODO remove, this demo shouldn't need to reset the theme.\r\n// const defaultTheme = createTheme();\r\n\r\nexport default function Login() {\r\n    const {user}=useAppSelector(state=>state.account);\r\n\r\n    const dispach=useAppDispatch();\r\n    const navigate=useNavigate();\r\n    const location=useLocation();\r\n\r\n    const {register,handleSubmit,formState:{isSubmitting,isValid,errors}}=useForm({\r\n        mode:'all'\r\n    });\r\n\r\n    const submitForm=async(data:FieldValues)=>{\r\n        try {\r\n            // await agent.Account.login(data);//.catch(error => console.log(error));\r\n\r\n            await dispach(SingInUser(data)).then(data=>{\r\n                if(!(data.meta.requestStatus==='rejected')){\r\n\r\n                    navigate(location.state?.from?.pathname||'../');\r\n\r\n                }\r\n\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n      if(user) navigate(location.state?.from?.pathname||'../');\r\n\r\n    }, [user,navigate,location.state?.from?.pathname])\r\n    \r\n\r\n    // const [values,setValuse]=React.useState({\r\n    //     username:'',\r\n    //     password:''\r\n    // });\r\n\r\n\r\n//   const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n//     event.preventDefault();\r\n//     agent.Account.login(values);\r\n\r\n\r\n\r\n\r\n//     //read data from  controls###\r\n//     // const data = new FormData(event.currentTarget);\r\n//     // console.log({\r\n//     //   email: data.get('email'),\r\n//     //   password: data.get('password'),\r\n//     // });\r\n//   };\r\n\r\n//   const handleInputChange=(event:any)=>{\r\n//     const {name,value}=event.target;\r\n\r\n//     setValuse({...values,[name]:value});\r\n//   }\r\n\r\n  return (\r\n    // <ThemeProvider theme={defaultTheme}>\r\n      <Container component={Paper} maxWidth=\"sm\">\r\n        {/* <CssBaseline /> */}\r\n        <Box\r\n          sx={{\r\n            marginTop: 20,\r\n            p:3,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n              label=\"Username\"\r\n            //   autoComplete=\"email\"\r\n              autoFocus\r\n            //   onChange={handleInputChange}\r\n            //   value={values.username}\r\n            {...register('username',{required:true})}\r\n            error={!!errors.username}\r\n            helperText={errors?.username?.message}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n            //   required\r\n              fullWidth\r\n            //   name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              {...register('password',{required:'كلمة المرور مطلوبة'})}\r\n              error={!!errors.password}\r\n              helperText={errors?.password?.message}\r\n\r\n\r\n\r\n            //   autoComplete=\"current-password\"\r\n            //   onChange={handleInputChange}\r\n            //   value={values.password}\r\n            />\r\n            {/* <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            /> */}\r\n            <LoadingButton\r\n            disabled={!isValid}\r\n            loading={isSubmitting}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2 }}\r\n            >\r\n              Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid> */}\r\n              <Grid item>\r\n                <Typography \r\n                component={Link}\r\n                to={\"../register\"}\r\n               sx={{fontWeight:'bold',color:'primary.main',textDecoration:'none'}}\r\n                >\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\r\n      </Container>\r\n    // { </ThemeProvider> }\r\n  );\r\n}","import { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"../store/configureStore\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\ntype Props={\r\n\r\n    children : JSX.Element,\r\n    roles?:string[]\r\n}\r\nexport default function ProtectedRout({children,roles}:Props) {\r\n    const {user}=useAppSelector(state=>state.account);\r\n    // const {basket}=useAppSelector(state=>state.basket);\r\n\r\n    const location=useLocation();\r\n    if(!user)return <Navigate to=\"../login\" state={{from:location}}/>\r\n    if(roles&&!roles.some(r=>user.roles?.includes(r))){\r\n        toast.error('Do not authorized to Access Inventory !',{toastId:'err1'})\r\n        return <Navigate to=\"../\" state={{from:location}}/>\r\n\r\n    }\r\n\r\n    // if(!basket||basket.items.length===0)return <Navigate to=\"../login\" />\r\n    \r\n    return children;\r\n\r\n}\r\n","import { Box, Typography, Button, Grid } from \"@mui/material\";\r\nimport { BasketItem } from \"../../app/models/basket\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetails({ order, setSelectedOrder }: Props) {\r\n\r\n  const  subtotal = order?.orderItems.reduce((sum,item)=>sum+(item.quantity*item.price),0)??0;\r\n  const itemCounts=order?.orderItems.reduce((count,item)=>count+item.quantity,0)??0;\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ marginTop: 8 }} display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\r\n            </Box>\r\n            <Box sx={{ marginTop: -10 }}>\r\n                <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n                <Grid container>\r\n                    <Grid item xs={6} />\r\n                    <Grid item xs={6}>\r\n                        <BasketSummary subtotal={subtotal} itemCounts={itemCounts}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { Order } from \"../../app/models/order\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport Loader from \"../../app/layout/Loader\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport { DoneAll } from \"@mui/icons-material\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[]|null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n     \r\n         agent.Orders.list()\r\n        .then(orders=>setOrders(orders))\r\n        .catch(error=>console.log(error))\r\n        .finally(()=>setLoading(false))\r\n    }, [])\r\n\r\n    if(loading)return <Loader message=\"Loading order...\"/>\r\n    if(selectedOrderNumber>0)return (\r\n        <OrderDetails order={orders?.find(o=>o.id===selectedOrderNumber)!} setSelectedOrder={setSelectedOrderNumber} />\r\n    )\r\n\r\n  return ( \r\n    <TableContainer sx={{mt:10}} component={Paper}>\r\n    <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>#</TableCell>\r\n          <TableCell align=\"center\">Order Date</TableCell>\r\n          <TableCell align=\"center\">Total</TableCell>\r\n          <TableCell align=\"center\">Order Status</TableCell>\r\n          <TableCell align=\"center\">Details</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {orders!.map((row) => (\r\n          <TableRow\r\n            key={row.id}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n          >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n              {row.id}\r\n            </TableCell>\r\n            <TableCell align=\"center\">{row.orderDate}</TableCell>\r\n            <TableCell align=\"center\">{currencyFormat(row.total)}</TableCell>\r\n            <TableCell align=\"center\">\r\n              {row.orderStatus===\"PaymentReceived\"?\r\n              (<Button variant=\"contained\" color=\"success\" size=\"small\" endIcon={<DoneAll/>} >{row.orderStatus}</Button>)\r\n              :\r\n              (row.orderStatus)\r\n              \r\n              }\r\n            \r\n            </TableCell>\r\n            <TableCell align=\"center\">\r\n                <Button onClick={()=>setSelectedOrderNumber(row.id)}>\r\n                    View\r\n                </Button>\r\n\r\n\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>  )\r\n}\r\n","import { TextField } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string \r\n    multiline?:boolean\r\n    rows?:number\r\n    type?:string\r\n}\r\nexport default function AppTextInput(props:Props) {\r\n    const {fieldState,field}=useController({...props,defaultValue:''})\r\n  return (\r\n    <TextField\r\n    {...props}\r\n    {...field}\r\n    multiline={props.multiline}\r\n    rows={props.rows}\r\n    type={props.type}\r\n    \r\n    fullWidth\r\n    variant=\"outlined\"\r\n    error={!!fieldState.error}\r\n    helperText={fieldState.error?.message}\r\n    />\r\n  )\r\n}\r\n","import { Checkbox, FormControlLabel } from \"@mui/material\"\r\nimport { UseControllerProps, useController } from \"react-hook-form\"\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string ,\r\n    disabled:boolean\r\n}\r\nexport default function AppCheckBox(props:Props) {\r\n    const {field}=useController({...props,defaultValue:false})\r\n  return (\r\n    <FormControlLabel\r\n    control={<Checkbox disabled={props.disabled} color=\"secondary\" {...field} checked={field.value} />}\r\n    label={props.label}\r\n        />\r\n  ) \r\n}\r\n","\r\nimport { Typography, Grid } from \"@mui/material\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport AppCheckBox from \"../../app/components/AppCheckBox\";\r\n\r\nexport default function AddressForm() {\r\n\r\n    // const {control}=useForm();\r\n        const {control,formState}=useFormContext();  // نستخدمها طالما ان الفورم موجود داخل فورم بروفايدر داخل صفحة الدفع\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} >\r\n                    <AppTextInput control={control} name=\"fullName\" label=\"Full Name\" />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                <AppTextInput control={control} name=\"address1\" label=\"Address 1\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <AppTextInput control={control} name=\"address2\"  label=\"Address 2\"  />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control} name=\"city\" label=\"City\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control} name=\"country\" label=\"Country\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control} name=\"postalCode\" label=\"Postal Code\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <AppTextInput control={control}  name=\"phone\" label=\"Phone\" />\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                   <AppCheckBox \r\n                   disabled={!formState.isDirty}\r\n                   name=\"saveAddress\" label=\"Save this as the default address\"\r\n                   control={control}\r\n                   />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","import { InputBaseComponentProps } from \"@mui/material\";\r\nimport { forwardRef, Ref, useRef, useImperativeHandle } from \"react\";\r\n\r\ninterface Props extends InputBaseComponentProps { }\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({ component: Component, ...props }: Props,\r\n    ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component \r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    )\r\n});","\r\nimport { Typography, Grid, TextField } from \"@mui/material\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from \"@stripe/react-stripe-js\";\r\n// import { StripeInput } from \"./InputBaseComponentProps\";\r\n\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { StripeInput } from \"./InputBaseComponentProps\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\ntype Props={\r\n    cardState:{elementError:{[key in StripeElementType]?:string}},\r\n    onCardInputChange:(event:any)=>void\r\n}\r\nexport default function PaymentForm({cardState,onCardInputChange}:Props) {\r\n    const {control}=useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                <AppTextInput control={control} name=\"nameOnCard\" label=\"Name On Card\" />\r\n\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        onChange={onCardInputChange}\r\n                        error={!!cardState.elementError.cardNumber}\r\n                        helperText={cardState.elementError.cardNumber}\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                         InputLabelProps={{shrink:true}}\r\n                         InputProps={{\r\n                            inputComponent:StripeInput,\r\n                            inputProps:{\r\n                                component:CardNumberElement\r\n                            }\r\n                         }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                    onChange={onCardInputChange}\r\n                    error={!!cardState.elementError.cardExpiry}\r\n                    helperText={cardState.elementError.cardExpiry}\r\n                        id=\"expDate\"\r\n                        label=\"Expiry date\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        InputProps={{\r\n                            inputComponent:StripeInput,\r\n                            inputProps:{\r\n                                component:CardExpiryElement\r\n                            }\r\n                         }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                    onChange={onCardInputChange}\r\n                    error={!!cardState.elementError.cardCvc}\r\n                    helperText={cardState.elementError.cardCvc}\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                        InputLabelProps={{shrink:true}}\r\n                        InputProps={{\r\n                            inputComponent:StripeInput,\r\n                            inputProps:{\r\n                                component:CardCvcElement\r\n                            }\r\n                         }}\r\n                    />\r\n                </Grid>\r\n               \r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n","\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport BasketSummary from \"../basket/BasketSummary\";\r\nimport BasketTable from \"../basket/BasketTable\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\n\r\n\r\n\r\nexport default function Review() {\r\n\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" sx={{mb:-10}}>\r\n                Order summary\r\n            </Typography>\r\n            <BasketTable items={basket!.items} isBasket={false} />\r\n       \r\n       <Grid container spacing={0} sx={{mt:1}}>\r\n                   <Grid item xs={6}  />\r\n                   <Grid item xs={6}>\r\n                       <BasketSummary/>\r\n                       \r\n                   \r\n                   </Grid>\r\n                 \r\n       </Grid>\r\n           \r\n        </>\r\n    );\r\n}\r\n","import * as yup from 'yup';\r\nimport \"yup-phone\";\r\n\r\n \r\nexport const validationSchema=[\r\n\r\n    yup.object({\r\n\r\n        fullName:yup.string().required('Full name is required'),\r\n        address1:yup.string().required('Address 1 is required'),\r\n        address2:yup.string().required(),\r\n        city:yup.string().required(),\r\n        country:yup.string().required(),\r\n        postalCode:yup.string().required(),\r\n        phone:yup.string().phone('00967').required(),\r\n    \r\n    \r\n    \r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n\r\n        nameOnCard:yup.string().required('Name is required'),\r\n        // cardNumber:yup.string().required('cardNumber is required'),\r\n\r\n    }),\r\n\r\n\r\n] ","\r\nimport { Paper, Typography, Stepper, Step, StepLabel, Box, Button, Container } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport { validationSchema } from \"./checkoutValidation\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { StripeElementType } from \"@stripe/stripe-js\";\r\nimport { useStripe, useElements, CardNumberElement } from \"@stripe/react-stripe-js\";\r\nimport {history} from \"../..\"\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\n\r\n\r\nexport default function CheckoutPage() {\r\n  \r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const {basket}=useAppSelector(state=>state.basket);\r\n\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch=useAppDispatch();\r\n\r\n    const [cardState,setCardState]=useState<{elementError:{[key in StripeElementType]?:string}}>({elementError:{}});\r\n  \r\n    const [cardComplete,setCardComplete]=useState<any>({cardNumber:false,cardExpiry:false,cardCvc:false});\r\n\r\n\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    \r\n    const onCardInputChange=(event :any)=>{\r\n        setCardState({\r\n            ...cardState,\r\n            elementError:{\r\n                ...cardState.elementError,\r\n                [event.elementType]:event.error?.message\r\n            }\r\n        });\r\n        setCardComplete({...cardComplete,[event.elementType]:event.complete})\r\n    }\r\n\r\n\r\n    const getStepContent=(step: number)=> {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1: \r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange}  />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n    const currentValidatoinSchema=validationSchema[activeStep];\r\n\r\n    const methods=useForm({\r\n\r\n        mode:'all',\r\n        resolver:yupResolver<any>(currentValidatoinSchema)\r\n            });// use form hook\r\n\r\n\r\n            useEffect(() => {\r\n             \r\n                agent.Account.fetchAddress()\r\n                .then(response=>{\r\n                    if(response){\r\n                        methods.reset({...methods.getValues(),...response,saveAddress:false})\r\n                    }\r\n                })\r\n            }, [methods])\r\n            \r\n\r\n    const handleNext = async (data:FieldValues) => {\r\n\r\n        // const {nameOnCard,saveAddress,...shippingAddress}=data;\r\n      if(activeStep===steps.length-1){\r\n\r\n        // setLoading(true);\r\n        // try {\r\n        //     console.log(data);\r\n\r\n        //     const orderNumber =await agent.Orders.create({saveAddress,shippingAddress});\r\n        //     setOrderNumber(orderNumber);\r\n        //     setActiveStep(activeStep+1);\r\n        //     setLoading(false);\r\n        //     setTimeout(() => {\r\n        //         dispatch(clearBasket());\r\n        //     }, 3000);\r\n\r\n\r\n\r\n        // } catch (error) {\r\n        //     console.log(error);\r\n\r\n        //     setLoading(false);\r\n\r\n        // }\r\n\r\n        await submitOrder(data);\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }else\r\n      {\r\n        setActiveStep(activeStep + 1);\r\n\r\n\r\n      }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    const submitOrder = async (data: FieldValues) => {\r\n        toast.error(methods.formState.isValid);\r\n        \r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return; // stripe not ready\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });  \r\n        \r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({ saveAddress, shippingAddress });\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - we have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n        // if(!basket||basket.items.length===0)return <Navigate to=\"../\" />\r\n\r\n\r\n\r\n        const submitDisable=():boolean=>{\r\n            if(activeStep===steps.length-1){\r\n                return !cardComplete.cardNumber||\r\n                !cardComplete.cardExpiry||\r\n                !cardComplete.cardCvc||\r\n                !methods.formState.isValid\r\n\r\n            }else\r\n            {\r\n                return  !methods.formState.isValid\r\n            }\r\n\r\n        }\r\n   \r\n\r\n    return (\r\n\r\n      \r\n        <FormProvider {...methods} > \r\n                <Container maxWidth=\"lg\"> \r\n            <Paper variant=\"outlined\" sx={{ mt: 10, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper> \r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        \r\n                        <>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    {paymentMessage}\r\n                                </Typography>\r\n                                {paymentSucceeded ? (\r\n                                    <>\r\n                                        <Typography gutterBottom variant=\"subtitle1\">\r\n                                            Your order number is #{orderNumber}. We have emailed your order\r\n                                            confirmation, and will send you an update when your order has\r\n                                            shipped.\r\n                                        </Typography>\r\n                                        <Button variant='contained' onClick={() => {\r\n                                            history.push('../')\r\n                                        }}>\r\n                                            Go Home\r\n                                        </Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <Button variant='contained' onClick={handleBack}>\r\n                                        Go back and try again\r\n                                    </Button>\r\n                                )}\r\n                            </>\r\n\r\n\r\n                    ) : (\r\n                        <form  onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                loading={loading}\r\n                                    disabled={submitDisable()}\r\n\r\n                                    variant=\"contained\"\r\n                                   type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper> \r\n        </Container>\r\n        </FormProvider>\r\n\r\n\r\n    );\r\n}","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport Loader from \"../../app/layout/Loader\";\r\nimport { history } from \"../..\";\r\n\r\n\r\nconst stripePromise=loadStripe('pk_test_51NLvadLRCdXbPQVRmp4hVGpvcZFMegnlrLgyVKkMZMVeLAFQqvhjEqfYZv0rwrKV2JmnYZLstWwaKqXxkXB0zliB00a2rpjr3s');\r\nexport default function CheckoutWrapper() {\r\n  const dispatch=useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n  const {basket}=useAppSelector(state=>state.basket);\r\n\r\n  useEffect(() => {\r\n\r\n    if(!basket || basket.items.length===0){\r\n      history.push('../login');\r\n      return;\r\n    }\r\n   agent.Payment.createPaymentIntent()\r\n   .then(basket=>dispatch(setBasket(basket)))\r\n   .catch(error=>console.log(error))\r\n   .finally(()=>setLoading(false));\r\n\r\n   //eslint-disable-next-line\r\n  }, [dispatch])\r\n  \r\n\r\n  if(loading)return <Loader message=\"Loading check out\"/>\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n        <CheckoutPage/>\r\n    </Elements>\r\n  )\r\n}\r\n","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string\r\n    items:string[]\r\n}\r\nexport default function AppSelectList(props:Props) {\r\n    const {field,fieldState}=useController({...props,defaultValue:''});\r\n\r\n  return (\r\n    <FormControl fullWidth error={!!fieldState.error}>\r\n    <InputLabel >{props.label}</InputLabel>\r\n    <Select\r\n      \r\n      value={field.value}\r\n      label={props.label}\r\n      onChange={field.onChange}\r\n    >\r\n        {\r\n            props.items.map((item,index)=>(\r\n\r\n                <MenuItem key={index}\r\n                value={item}>\r\n                    {item}\r\n\r\n\r\n                </MenuItem>\r\n\r\n\r\n            ))\r\n        }\r\n\r\n     \r\n    </Select>\r\n    <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n  </FormControl>\r\n  )\r\n}\r\n","import { UploadFile } from \"@mui/icons-material\";\r\nimport { FormControl, Typography, FormHelperText } from \"@mui/material\";\r\nimport { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { UseControllerProps, useController } from \"react-hook-form\"\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n   \r\n}\r\nexport default function AppDropZone(props:Props) {\r\n    const {fieldState,field}=useController({...props,defaultValue:null})\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 100,\r\n        width: 500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor: '#7b1fa2'\r\n    }\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n\r\n        acceptedFiles[0]=Object.assign(acceptedFiles[0],{preview:URL.createObjectURL(acceptedFiles[0])});\r\n        field.onChange(acceptedFiles[0]);\r\n\r\n\r\n\r\n    }, [field])\r\n      const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n    \r\n      return (\r\n        <div {...getRootProps()}>\r\n         \r\n          <FormControl error={!!fieldState.error} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}>\r\n                <input {...getInputProps()} />\r\n                 <UploadFile sx={{ fontSize: '30px' }} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText> \r\n        </FormControl>\r\n        </div>\r\n      )\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const productValidationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when('pictureUrl', {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required('Please upload an image')\r\n    })\r\n})","import { Box, Paper, Typography, Grid, Button } from \"@mui/material\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useEffect } from \"react\";\r\nimport AppSelectList from \"../../app/components/AppSelectList\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport AppDropZone from \"../../app/components/AppDropZone\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { productValidationSchema } from \"./productValidation\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { setProduct } from \"../catalog/catalogSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\n\r\ntype Props={\r\n    product?:Product,\r\n    cancelEdit:()=>void\r\n}\r\n\r\nexport default function ProductForm({product,cancelEdit}:Props) {\r\n    const { control ,reset,handleSubmit,watch,formState:{isDirty,isSubmitting}} = useForm({\r\n        resolver:yupResolver<any>(productValidationSchema)\r\n    });\r\n    const {brands,types}=useProducts();\r\n\r\n    const watchFile=watch('file',null);\r\n    const disptach=useAppDispatch();\r\n\r\n    useEffect(()=>{\r\n        if(product && !watchFile && !isDirty)reset(product)\r\n        return()=>{\r\n            if(watchFile)URL.revokeObjectURL(watchFile.preview);\r\n        }\r\n    },[product,reset,watchFile,isDirty])\r\n\r\n    const handleSubmitData=async (data:FieldValues)=>{\r\n        try {\r\n            let response:Product;\r\n            if(product){\r\n                response=await agent.Admin.updateProduct(data);\r\n                disptach(setProduct(response));\r\n                cancelEdit();\r\n            }else{\r\n                response=await agent.Admin.createProduct(data);\r\n\r\n                disptach(setProduct(response));\r\n                cancelEdit();\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n\r\n        }\r\n    }\r\n    return (\r\n        <Box component={Paper} sx={{ px: 4, py: 2, mt: 10, mx: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n\r\n           \r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='name' label='Product name' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppSelectList control={control} items={brands}  name='brand' label='Brand' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppSelectList control={control} items={types}  name='type' label='Type' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} type=\"number\" name='price' label='Price' />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} type=\"number\" name='quantityInStock' label='Quantity in Stock' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} multiline rows={3} name='description' label='Description' />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box display='flex'>\r\n                    <AppDropZone control={control} name='file' />\r\n                    {\r\n                        watchFile?(\r\n                            <img src={watchFile.preview} alt='preview' style={{marginLeft:80,maxHeight:150}}/>\r\n                        ):(\r\n                            <img src={product?.pictureUrl} alt={product?.name} style={{marginLeft:80,maxHeight:150}}/>\r\n                        )\r\n                    }\r\n\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\r\n                <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\r\n                <LoadingButton loading={isSubmitting} type=\"submit\" variant='contained' color='primary'>Submit</LoadingButton>\r\n            </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","import { Edit, Delete } from \"@mui/icons-material\";\r\nimport { Box, Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { currencyFormat } from \"../../app/helper/helper\";\r\nimport Loader from \"../../app/layout/Loader\";\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\r\nimport useProducts from \"../../app/hooks/useProducts\";\r\nimport { useState } from \"react\";\r\nimport ProductForm from \"./ProductForm\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport agent from \"../../app/api/agent\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nexport default function Inventory() {\r\n\r\n    const {products,productsLoaded,paginationData}=useProducts();\r\n\r\n       const dispatch = useAppDispatch();\r\n\r\n       const [editMode,setEditMode]=useState(false);\r\n       const [selectedProduct,setSelectedProduct]=useState<Product|undefined>(undefined);\r\n       const [loading,setLoading]=useState(false);\r\n       const [target,setTarget]=useState(0);\r\n\r\n\r\n       const handleSelectProduct=(product:Product)=>{\r\n        setSelectedProduct(product);\r\n        setEditMode(true);\r\n       }\r\n\r\n        const handleDeleteProduct=(id:number)=>{\r\n            setLoading(true);\r\n            setTarget(id);\r\n            agent.Admin.deleteProduct(id)\r\n            .then(\r\n                ()=>{\r\n                    dispatch(removeProduct(id));\r\n                    dispatch(setPageNumber({pageNumber:1}))\r\n                }\r\n            )\r\n            .catch(error=>console.log(error))\r\n            .finally(()=>setLoading(false))\r\n        }\r\n\r\n       const cancelEdit=()=>{\r\n        if(selectedProduct) setSelectedProduct(undefined);\r\n        setEditMode(false);\r\n\r\n\r\n       }\r\n       if(editMode)return <ProductForm product={selectedProduct} cancelEdit={cancelEdit}/>\r\n\r\n    if (!productsLoaded) return <Loader message='Loading Products...' />\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\r\n                <Button sx={{ m: 2 }} onClick={()=>setEditMode(true)} size='large' variant='contained'>Create</Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {/* <TableCell>#</TableCell> */}\r\n                            <TableCell align=\"left\">Product</TableCell>\r\n                            <TableCell align=\"center\">Price</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">Brand</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products.map((product) => (\r\n                            <TableRow\r\n                                key={product.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                {/* <TableCell component=\"th\" scope=\"row\">\r\n                                    {product.id}\r\n                                </TableCell> */}\r\n                                <TableCell align=\"left\">\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\r\n                                        <span>{product.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align=\"center\">{currencyFormat(product.price)}</TableCell>\r\n                                <TableCell align=\"center\">{product.type}</TableCell>\r\n                                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={()=>handleSelectProduct(product)} startIcon={<Edit/>} />\r\n                                    <LoadingButton loading={loading && target===product.id}\r\n                                    onClick={()=>handleDeleteProduct(product.id)}\r\n                                    startIcon={<Delete />} color='error' />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {paginationData &&\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination\r\n                        paginationData={paginationData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n                    />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}","import { Box } from \"@mui/material\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport AboutUs from \"../../features/about/AboutUs\";\nimport Catalog from \"../../features/catalog/Catalog\";\nimport ProductDetails from \"../../features/catalog/ProductDetails\";\nimport ContactUs from \"../../features/contact/ContactUs\";\nimport Header from \"./Header\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from \"../errors/ServerError\";\nimport NotFound from \"../errors/NotFound\";\nimport BasketPage from \"../../features/basket/BasketPage\";\n// import { useSouqContext } from \"../context/SouqContext\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Loader from \"./Loader\";\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport Register from \"../../features/account/Register\";\nimport Login from \"../../features/account/Login\";\nimport { fetchCurrentUser } from \"../../features/account/accountSlice\";\nimport ProtectedRout from \"./ProtectedRout\";\nimport Orders from \"../../features/orders/Orders\";\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n\n  // const {setBasket}=useSouqContext();\n\n  const dispatch=useAppDispatch();\n\n\n  const [loading, setLoading] = useState(true);\n\n  enum myRols {\n    Admin = 'Admin',\n    Member='Member'\n   \n  }\n\n\n\n\n  const initApp=useCallback(async()=>{\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n\n\n\n    } catch (error) {\n      console.log(error)\n    }\n  },[dispatch]) \n\n  useEffect(() => {\n\n    // dispatch(fetchCurrentUser());\n\n    // const buyerId=Cookies.get('buyerId');\n\n    // if(buyerId){\n    //   // agent.Basket.get()\n    //   // .then(basket=>setBasket(basket))\n    //   // .catch(error=>console.log(error))\n    //   // .finally(()=>setLoading(false))\n\n    //   agent.Basket.get()\n    //   .then(basket=>dispatch(setBasket(basket)))\n    //   .catch(error=>console.log(error))\n    //   .finally(()=>setLoading(false))\n\n\n\n \n    // }else{\n    //   setLoading(false)\n    //   console.log('error')\n\n    // }\n\n    initApp().then(()=>setLoading(false))\n\n  },[initApp] )\n  \n  if(loading)return<Loader message=\"Loading App...!!!\" />\n\n  \n\n  return (\n    <>\n      <ToastContainer theme=\"colored\" position=\"bottom-right\" autoClose={3000} hideProgressBar />\n      <Header />\n      <Box sx={{ mt: 7, mb: 2, px: 2 }}>\n        <Routes>\n          <Route path=\"/\" element={<Catalog />} />\n          <Route path=\"catalog\" element={<Catalog />} />\n          <Route path=\"catalog/:id\" element={<ProductDetails />} />\n          <Route path=\"about\" element={<AboutUs />} />\n          <Route path=\"contact\" element={<ContactUs />} />\n          <Route path=\"basket\" element={<BasketPage />} />\n          <Route path=\"checkout\" element={<ProtectedRout><CheckoutWrapper /></ProtectedRout> } />\n          <Route path=\"orders\" element={<ProtectedRout ><Orders/></ProtectedRout> } />\n          <Route path=\"inventory\" element={<ProtectedRout roles={[myRols.Admin]} ><Inventory/></ProtectedRout> } />\n\n          <Route path=\"server-error\" element={<ServerError />} />\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"login\" element={<Login />} />\n\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from 'history';\nimport { HistoryRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { SouqStore } from './app/store/configureStore';\n\n// import { configureStore } from './app/store/configureStore';\n\n// const SouqStore=configureStore();\n\nexport const history = createBrowserHistory();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <HistoryRouter history={history}>\n      {/* <SouqProvider> */}\n        <Provider store={SouqStore}>\n        <App />\n\n        </Provider>\n      {/* </SouqProvider> */}\n    </HistoryRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
>>>>>>>> 97c3274 (make it bet2):wwwroot/static/js/main.634a03f6.chunk.js.map
